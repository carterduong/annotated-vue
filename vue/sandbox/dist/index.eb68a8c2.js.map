{"mappings":"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","../vue/dist/vue.js","../vue/src/shared/util.js","../vue/src/shared/constants.js","../vue/src/core/config.js","../vue/src/core/util/lang.js","../vue/src/core/util/env.js","../vue/src/core/util/debug.js","../vue/src/core/observer/dep.js","../vue/src/core/vdom/vnode.js","../vue/src/core/observer/array.js","../vue/src/core/observer/index.js","../vue/src/core/util/options.js","../vue/src/core/util/props.js","../vue/src/core/util/error.js","../vue/src/core/util/next-tick.js","../vue/src/core/util/index.js","../vue/src/core/util/perf.js","../vue/src/core/instance/proxy.js","../vue/src/core/observer/traverse.js","../vue/src/core/vdom/helpers/update-listeners.js","../vue/src/core/vdom/helpers/merge-hook.js","../vue/src/core/vdom/helpers/extract-props.js","../vue/src/core/vdom/helpers/normalize-children.js","../vue/src/core/instance/inject.js","../vue/src/core/instance/render-helpers/resolve-slots.js","../vue/src/core/vdom/helpers/is-async-placeholder.js","../vue/src/core/vdom/helpers/normalize-scoped-slots.js","../vue/src/core/instance/render-helpers/render-list.js","../vue/src/core/instance/render-helpers/render-slot.js","../vue/src/core/instance/render-helpers/resolve-filter.js","../vue/src/core/instance/render-helpers/check-keycodes.js","../vue/src/core/instance/render-helpers/bind-object-props.js","../vue/src/core/instance/render-helpers/render-static.js","../vue/src/core/instance/render-helpers/bind-object-listeners.js","../vue/src/core/instance/render-helpers/resolve-scoped-slots.js","../vue/src/core/instance/render-helpers/bind-dynamic-keys.js","../vue/src/core/instance/render-helpers/index.js","../vue/src/core/vdom/create-functional-component.js","../vue/src/platforms/weex/util/index.js","../vue/src/platforms/weex/runtime/recycle-list/virtual-component.js","../vue/src/platforms/weex/runtime/recycle-list/render-component-template.js","../vue/src/core/vdom/create-component.js","../vue/src/core/vdom/create-element.js","../vue/src/core/instance/render.js","../vue/src/core/vdom/helpers/resolve-async-component.js","../vue/src/core/vdom/helpers/get-first-component-child.js","../vue/src/core/vdom/helpers/index.js","../vue/src/core/instance/events.js","../vue/src/core/instance/lifecycle.js","../vue/src/core/observer/scheduler.js","../vue/src/core/observer/watcher.js","../vue/src/core/instance/state.js","../vue/src/core/instance/init.js","../vue/src/core/instance/index.js","../vue/src/core/global-api/use.js","../vue/src/core/global-api/mixin.js","../vue/src/core/global-api/extend.js","../vue/src/core/global-api/assets.js","../vue/src/core/components/keep-alive.js","../vue/src/core/components/index.js","../vue/src/core/global-api/index.js","../vue/src/core/index.js","../vue/src/platforms/web/util/attrs.js","../vue/src/platforms/web/util/class.js","../vue/src/platforms/web/util/element.js","../vue/src/platforms/web/util/index.js","../vue/src/platforms/web/runtime/node-ops.js","../vue/src/core/vdom/modules/ref.js","../vue/src/core/vdom/patch.js","../vue/src/core/vdom/modules/directives.js","../vue/src/core/vdom/modules/index.js","../vue/src/platforms/web/runtime/modules/attrs.js","../vue/src/platforms/web/runtime/modules/class.js","../vue/src/compiler/parser/filter-parser.js","../vue/src/compiler/helpers.js","../vue/src/compiler/directives/model.js","../vue/src/platforms/web/compiler/directives/model.js","../vue/src/platforms/web/runtime/modules/events.js","../vue/src/platforms/web/runtime/modules/dom-props.js","../vue/src/platforms/web/util/style.js","../vue/src/platforms/web/runtime/modules/style.js","../vue/src/platforms/web/runtime/class-util.js","../vue/src/platforms/web/runtime/transition-util.js","../vue/src/platforms/web/runtime/modules/transition.js","../vue/src/platforms/web/runtime/modules/index.js","../vue/src/platforms/web/runtime/patch.js","../vue/src/platforms/web/runtime/directives/model.js","../vue/src/platforms/web/runtime/directives/show.js","../vue/src/platforms/web/runtime/directives/index.js","../vue/src/platforms/web/runtime/components/transition.js","../vue/src/platforms/web/runtime/components/transition-group.js","../vue/src/platforms/web/runtime/components/index.js","../vue/src/platforms/web/runtime/index.js","../vue/src/compiler/parser/text-parser.js","../vue/src/platforms/web/compiler/modules/class.js","../vue/src/platforms/web/compiler/modules/style.js","../vue/src/compiler/parser/entity-decoder.js","../vue/src/platforms/web/compiler/util.js","../vue/src/compiler/parser/html-parser.js","../vue/src/compiler/parser/index.js","../vue/src/platforms/web/compiler/modules/model.js","../vue/src/platforms/web/compiler/modules/index.js","../vue/src/platforms/web/compiler/directives/text.js","../vue/src/platforms/web/compiler/directives/html.js","../vue/src/platforms/web/compiler/directives/index.js","../vue/src/platforms/web/compiler/options.js","../vue/src/compiler/optimizer.js","../vue/src/compiler/codegen/events.js","../vue/src/compiler/directives/on.js","../vue/src/compiler/directives/bind.js","../vue/src/compiler/directives/index.js","../vue/src/compiler/codegen/index.js","../vue/src/compiler/error-detector.js","../vue/src/compiler/codeframe.js","../vue/src/compiler/to-function.js","../vue/src/compiler/create-compiler.js","../vue/src/compiler/index.js","../vue/src/platforms/web/compiler/index.js","../vue/src/platforms/web/util/compat.js","../vue/src/platforms/web/entry-runtime-with-compiler.js"],"sourcesContent":[null,"/*!\n * Vue.js v2.6.14\n * (c) 2014-2021 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Vue = factory());\n}(this, function () { 'use strict';\n\n  /*  */\n\n  var emptyObject = Object.freeze({});\n\n  // These helpers produce better VM code in JS engines due to their\n  // explicitness and function inlining.\n  function isUndef (v) {\n    return v === undefined || v === null\n  }\n\n  function isDef (v) {\n    return v !== undefined && v !== null\n  }\n\n  function isTrue (v) {\n    return v === true\n  }\n\n  function isFalse (v) {\n    return v === false\n  }\n\n  /**\n   * Check if value is primitive.\n   */\n  function isPrimitive (value) {\n    return (\n      typeof value === 'string' ||\n      typeof value === 'number' ||\n      // $flow-disable-line\n      typeof value === 'symbol' ||\n      typeof value === 'boolean'\n    )\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   */\n  function isObject (obj) {\n    return obj !== null && typeof obj === 'object'\n  }\n\n  /**\n   * Get the raw type string of a value, e.g., [object Object].\n   */\n  var _toString = Object.prototype.toString;\n\n  function toRawType (value) {\n    return _toString.call(value).slice(8, -1)\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   */\n  function isPlainObject (obj) {\n    return _toString.call(obj) === '[object Object]'\n  }\n\n  function isRegExp (v) {\n    return _toString.call(v) === '[object RegExp]'\n  }\n\n  /**\n   * Check if val is a valid array index.\n   */\n  function isValidArrayIndex (val) {\n    var n = parseFloat(String(val));\n    return n >= 0 && Math.floor(n) === n && isFinite(val)\n  }\n\n  function isPromise (val) {\n    return (\n      isDef(val) &&\n      typeof val.then === 'function' &&\n      typeof val.catch === 'function'\n    )\n  }\n\n  /**\n   * Convert a value to a string that is actually rendered.\n   */\n  function toString (val) {\n    return val == null\n      ? ''\n      : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n        ? JSON.stringify(val, null, 2)\n        : String(val)\n  }\n\n  /**\n   * Convert an input value to a number for persistence.\n   * If the conversion fails, return original string.\n   */\n  function toNumber (val) {\n    var n = parseFloat(val);\n    return isNaN(n) ? val : n\n  }\n\n  /**\n   * Make a map and return a function for checking if a key\n   * is in that map.\n   */\n  function makeMap (\n    str,\n    expectsLowerCase\n  ) {\n    var map = Object.create(null);\n    var list = str.split(',');\n    for (var i = 0; i < list.length; i++) {\n      map[list[i]] = true;\n    }\n    return expectsLowerCase\n      ? function (val) { return map[val.toLowerCase()]; }\n      : function (val) { return map[val]; }\n  }\n\n  /**\n   * Check if a tag is a built-in tag.\n   */\n  var isBuiltInTag = makeMap('slot,component', true);\n\n  /**\n   * Check if an attribute is a reserved attribute.\n   */\n  var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n  /**\n   * Remove an item from an array.\n   */\n  function remove (arr, item) {\n    if (arr.length) {\n      var index = arr.indexOf(item);\n      if (index > -1) {\n        return arr.splice(index, 1)\n      }\n    }\n  }\n\n  /**\n   * Check whether an object has the property.\n   */\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  function hasOwn (obj, key) {\n    return hasOwnProperty.call(obj, key)\n  }\n\n  /**\n   * Create a cached version of a pure function.\n   */\n  function cached (fn) {\n    var cache = Object.create(null);\n    return (function cachedFn (str) {\n      var hit = cache[str];\n      return hit || (cache[str] = fn(str))\n    })\n  }\n\n  /**\n   * Camelize a hyphen-delimited string.\n   */\n  var camelizeRE = /-(\\w)/g;\n  var camelize = cached(function (str) {\n    return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n  });\n\n  /**\n   * Capitalize a string.\n   */\n  var capitalize = cached(function (str) {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  });\n\n  /**\n   * Hyphenate a camelCase string.\n   */\n  var hyphenateRE = /\\B([A-Z])/g;\n  var hyphenate = cached(function (str) {\n    return str.replace(hyphenateRE, '-$1').toLowerCase()\n  });\n\n  /**\n   * Simple bind polyfill for environments that do not support it,\n   * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n   * since native bind is now performant enough in most browsers.\n   * But removing it would mean breaking code that was able to run in\n   * PhantomJS 1.x, so this must be kept for backward compatibility.\n   */\n\n  /* istanbul ignore next */\n  function polyfillBind (fn, ctx) {\n    function boundFn (a) {\n      var l = arguments.length;\n      return l\n        ? l > 1\n          ? fn.apply(ctx, arguments)\n          : fn.call(ctx, a)\n        : fn.call(ctx)\n    }\n\n    boundFn._length = fn.length;\n    return boundFn\n  }\n\n  function nativeBind (fn, ctx) {\n    return fn.bind(ctx)\n  }\n\n  var bind = Function.prototype.bind\n    ? nativeBind\n    : polyfillBind;\n\n  /**\n   * Convert an Array-like object to a real Array.\n   */\n  function toArray (list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret\n  }\n\n  /**\n   * Mix properties into target object.\n   */\n  function extend (to, _from) {\n    for (var key in _from) {\n      to[key] = _from[key];\n    }\n    return to\n  }\n\n  /**\n   * Merge an Array of Objects into a single Object.\n   */\n  function toObject (arr) {\n    var res = {};\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i]) {\n        extend(res, arr[i]);\n      }\n    }\n    return res\n  }\n\n  /* eslint-disable no-unused-vars */\n\n  /**\n   * Perform no operation.\n   * Stubbing args to make Flow happy without leaving useless transpiled code\n   * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n   */\n  function noop (a, b, c) {}\n\n  /**\n   * Always return false.\n   */\n  var no = function (a, b, c) { return false; };\n\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * Return the same value.\n   */\n  var identity = function (_) { return _; };\n\n  /**\n   * Generate a string containing static keys from compiler modules.\n   */\n  function genStaticKeys (modules) {\n    return modules.reduce(function (keys, m) {\n      return keys.concat(m.staticKeys || [])\n    }, []).join(',')\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   */\n  function looseEqual (a, b) {\n    if (a === b) { return true }\n    var isObjectA = isObject(a);\n    var isObjectB = isObject(b);\n    if (isObjectA && isObjectB) {\n      try {\n        var isArrayA = Array.isArray(a);\n        var isArrayB = Array.isArray(b);\n        if (isArrayA && isArrayB) {\n          return a.length === b.length && a.every(function (e, i) {\n            return looseEqual(e, b[i])\n          })\n        } else if (a instanceof Date && b instanceof Date) {\n          return a.getTime() === b.getTime()\n        } else if (!isArrayA && !isArrayB) {\n          var keysA = Object.keys(a);\n          var keysB = Object.keys(b);\n          return keysA.length === keysB.length && keysA.every(function (key) {\n            return looseEqual(a[key], b[key])\n          })\n        } else {\n          /* istanbul ignore next */\n          return false\n        }\n      } catch (e) {\n        /* istanbul ignore next */\n        return false\n      }\n    } else if (!isObjectA && !isObjectB) {\n      return String(a) === String(b)\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Return the first index at which a loosely equal value can be\n   * found in the array (if value is a plain object, the array must\n   * contain an object of the same shape), or -1 if it is not present.\n   */\n  function looseIndexOf (arr, val) {\n    for (var i = 0; i < arr.length; i++) {\n      if (looseEqual(arr[i], val)) { return i }\n    }\n    return -1\n  }\n\n  /**\n   * Ensure a function is called only once.\n   */\n  function once (fn) {\n    var called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        fn.apply(this, arguments);\n      }\n    }\n  }\n\n  var SSR_ATTR = 'data-server-rendered';\n\n  var ASSET_TYPES = [\n    'component',\n    'directive',\n    'filter'\n  ];\n\n  var LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated',\n    'errorCaptured',\n    'serverPrefetch'\n  ];\n\n  /*  */\n\n\n\n  var config = ({\n    /**\n     * Option merge strategies (used in core/util/options)\n     */\n    // $flow-disable-line\n    optionMergeStrategies: Object.create(null),\n\n    /**\n     * Whether to suppress warnings.\n     */\n    silent: false,\n\n    /**\n     * Show production mode tip message on boot?\n     */\n    productionTip: \"development\" !== 'production',\n\n    /**\n     * Whether to enable devtools\n     */\n    devtools: \"development\" !== 'production',\n\n    /**\n     * Whether to record perf\n     */\n    performance: false,\n\n    /**\n     * Error handler for watcher errors\n     */\n    errorHandler: null,\n\n    /**\n     * Warn handler for watcher warns\n     */\n    warnHandler: null,\n\n    /**\n     * Ignore certain custom elements\n     */\n    ignoredElements: [],\n\n    /**\n     * Custom user key aliases for v-on\n     */\n    // $flow-disable-line\n    keyCodes: Object.create(null),\n\n    /**\n     * Check if a tag is reserved so that it cannot be registered as a\n     * component. This is platform-dependent and may be overwritten.\n     */\n    isReservedTag: no,\n\n    /**\n     * Check if an attribute is reserved so that it cannot be used as a component\n     * prop. This is platform-dependent and may be overwritten.\n     */\n    isReservedAttr: no,\n\n    /**\n     * Check if a tag is an unknown element.\n     * Platform-dependent.\n     */\n    isUnknownElement: no,\n\n    /**\n     * Get the namespace of an element\n     */\n    getTagNamespace: noop,\n\n    /**\n     * Parse the real tag name for the specific platform.\n     */\n    parsePlatformTagName: identity,\n\n    /**\n     * Check if an attribute must be bound using property, e.g. value\n     * Platform-dependent.\n     */\n    mustUseProp: no,\n\n    /**\n     * Perform updates asynchronously. Intended to be used by Vue Test Utils\n     * This will significantly reduce performance if set to false.\n     */\n    async: true,\n\n    /**\n     * Exposed for legacy reasons\n     */\n    _lifecycleHooks: LIFECYCLE_HOOKS\n  });\n\n  /*  */\n\n  /**\n   * unicode letters used for parsing html tags, component names and property paths.\n   * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n   * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n   */\n  var unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n  /**\n   * Check if a string starts with $ or _\n   */\n  function isReserved (str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F\n  }\n\n  /**\n   * Define a property.\n   */\n  function def (obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Parse simple path.\n   */\n  var bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\n  function parsePath (path) {\n    if (bailRE.test(path)) {\n      return\n    }\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n\n  /*  */\n\n  // can we use __proto__?\n  var hasProto = '__proto__' in {};\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined';\n  var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\n  var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\n  var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n  var isIE = UA && /msie|trident/.test(UA);\n  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n  var isEdge = UA && UA.indexOf('edge/') > 0;\n  var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\n  var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\n  var isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n  var isPhantomJS = UA && /phantomjs/.test(UA);\n  var isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n  // Firefox has a \"watch\" function on Object.prototype...\n  var nativeWatch = ({}).watch;\n\n  var supportsPassive = false;\n  if (inBrowser) {\n    try {\n      var opts = {};\n      Object.defineProperty(opts, 'passive', ({\n        get: function get () {\n          /* istanbul ignore next */\n          supportsPassive = true;\n        }\n      })); // https://github.com/facebook/flow/issues/285\n      window.addEventListener('test-passive', null, opts);\n    } catch (e) {}\n  }\n\n  // this needs to be lazy-evaled because vue may be required before\n  // vue-server-renderer can set VUE_ENV\n  var _isServer;\n  var isServerRendering = function () {\n    if (_isServer === undefined) {\n      /* istanbul ignore if */\n      if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n        // detect presence of vue-server-renderer and avoid\n        // Webpack shimming the process\n        _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n      } else {\n        _isServer = false;\n      }\n    }\n    return _isServer\n  };\n\n  // detect devtools\n  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  /* istanbul ignore next */\n  function isNative (Ctor) {\n    return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n  }\n\n  var hasSymbol =\n    typeof Symbol !== 'undefined' && isNative(Symbol) &&\n    typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n  var _Set;\n  /* istanbul ignore if */ // $flow-disable-line\n  if (typeof Set !== 'undefined' && isNative(Set)) {\n    // use native Set when available.\n    _Set = Set;\n  } else {\n    // a non-standard Set polyfill that only works with primitive keys.\n    _Set = /*@__PURE__*/(function () {\n      function Set () {\n        this.set = Object.create(null);\n      }\n      Set.prototype.has = function has (key) {\n        return this.set[key] === true\n      };\n      Set.prototype.add = function add (key) {\n        this.set[key] = true;\n      };\n      Set.prototype.clear = function clear () {\n        this.set = Object.create(null);\n      };\n\n      return Set;\n    }());\n  }\n\n  /*  */\n\n  var warn = noop;\n  var tip = noop;\n  var generateComponentTrace = (noop); // work around flow check\n  var formatComponentName = (noop);\n\n  {\n    var hasConsole = typeof console !== 'undefined';\n    var classifyRE = /(?:^|[-_])(\\w)/g;\n    var classify = function (str) { return str\n      .replace(classifyRE, function (c) { return c.toUpperCase(); })\n      .replace(/[-_]/g, ''); };\n\n    warn = function (msg, vm) {\n      var trace = vm ? generateComponentTrace(vm) : '';\n\n      if (config.warnHandler) {\n        config.warnHandler.call(null, msg, vm, trace);\n      } else if (hasConsole && (!config.silent)) {\n        console.error((\"[Vue warn]: \" + msg + trace));\n      }\n    };\n\n    tip = function (msg, vm) {\n      if (hasConsole && (!config.silent)) {\n        console.warn(\"[Vue tip]: \" + msg + (\n          vm ? generateComponentTrace(vm) : ''\n        ));\n      }\n    };\n\n    formatComponentName = function (vm, includeFile) {\n      if (vm.$root === vm) {\n        return '<Root>'\n      }\n      var options = typeof vm === 'function' && vm.cid != null\n        ? vm.options\n        : vm._isVue\n          ? vm.$options || vm.constructor.options\n          : vm;\n      var name = options.name || options._componentTag;\n      var file = options.__file;\n      if (!name && file) {\n        var match = file.match(/([^/\\\\]+)\\.vue$/);\n        name = match && match[1];\n      }\n\n      return (\n        (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n        (file && includeFile !== false ? (\" at \" + file) : '')\n      )\n    };\n\n    var repeat = function (str, n) {\n      var res = '';\n      while (n) {\n        if (n % 2 === 1) { res += str; }\n        if (n > 1) { str += str; }\n        n >>= 1;\n      }\n      return res\n    };\n\n    generateComponentTrace = function (vm) {\n      if (vm._isVue && vm.$parent) {\n        var tree = [];\n        var currentRecursiveSequence = 0;\n        while (vm) {\n          if (tree.length > 0) {\n            var last = tree[tree.length - 1];\n            if (last.constructor === vm.constructor) {\n              currentRecursiveSequence++;\n              vm = vm.$parent;\n              continue\n            } else if (currentRecursiveSequence > 0) {\n              tree[tree.length - 1] = [last, currentRecursiveSequence];\n              currentRecursiveSequence = 0;\n            }\n          }\n          tree.push(vm);\n          vm = vm.$parent;\n        }\n        return '\\n\\nfound in\\n\\n' + tree\n          .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n              ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n              : formatComponentName(vm))); })\n          .join('\\n')\n      } else {\n        return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n      }\n    };\n  }\n\n  /*  */\n\n  var uid = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   */\n  var Dep = function Dep () {\n    this.id = uid++;\n    this.subs = [];\n  };\n\n  Dep.prototype.addSub = function addSub (sub) {\n    this.subs.push(sub);\n  };\n\n  Dep.prototype.removeSub = function removeSub (sub) {\n    remove(this.subs, sub);\n  };\n\n  Dep.prototype.depend = function depend () {\n    if (Dep.target) {\n      Dep.target.addDep(this);\n    }\n  };\n\n  Dep.prototype.notify = function notify () {\n    // stabilize the subscriber list first\n    var subs = this.subs.slice();\n    if (!config.async) {\n      // subs aren't sorted in scheduler if not running async\n      // we need to sort them now to make sure they fire in correct\n      // order\n      subs.sort(function (a, b) { return a.id - b.id; });\n    }\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  // The current target watcher being evaluated.\n  // This is globally unique because only one watcher\n  // can be evaluated at a time.\n  Dep.target = null;\n  var targetStack = [];\n\n  function pushTarget (target) {\n    targetStack.push(target);\n    Dep.target = target;\n  }\n\n  function popTarget () {\n    targetStack.pop();\n    Dep.target = targetStack[targetStack.length - 1];\n  }\n\n  /*  */\n\n  var VNode = function VNode (\n    tag,\n    data,\n    children,\n    text,\n    elm,\n    context,\n    componentOptions,\n    asyncFactory\n  ) {\n    this.tag = tag;\n    this.data = data;\n    this.children = children;\n    this.text = text;\n    this.elm = elm;\n    this.ns = undefined;\n    this.context = context;\n    this.fnContext = undefined;\n    this.fnOptions = undefined;\n    this.fnScopeId = undefined;\n    this.key = data && data.key;\n    this.componentOptions = componentOptions;\n    this.componentInstance = undefined;\n    this.parent = undefined;\n    this.raw = false;\n    this.isStatic = false;\n    this.isRootInsert = true;\n    this.isComment = false;\n    this.isCloned = false;\n    this.isOnce = false;\n    this.asyncFactory = asyncFactory;\n    this.asyncMeta = undefined;\n    this.isAsyncPlaceholder = false;\n  };\n\n  var prototypeAccessors = { child: { configurable: true } };\n\n  // DEPRECATED: alias for componentInstance for backwards compat.\n  /* istanbul ignore next */\n  prototypeAccessors.child.get = function () {\n    return this.componentInstance\n  };\n\n  Object.defineProperties( VNode.prototype, prototypeAccessors );\n\n  var createEmptyVNode = function (text) {\n    if ( text === void 0 ) text = '';\n\n    var node = new VNode();\n    node.text = text;\n    node.isComment = true;\n    return node\n  };\n\n  function createTextVNode (val) {\n    return new VNode(undefined, undefined, undefined, String(val))\n  }\n\n  // optimized shallow clone\n  // used for static nodes and slot nodes because they may be reused across\n  // multiple renders, cloning them avoids errors when DOM manipulations rely\n  // on their elm reference.\n  function cloneVNode (vnode) {\n    var cloned = new VNode(\n      vnode.tag,\n      vnode.data,\n      // #7975\n      // clone children array to avoid mutating original in case of cloning\n      // a child.\n      vnode.children && vnode.children.slice(),\n      vnode.text,\n      vnode.elm,\n      vnode.context,\n      vnode.componentOptions,\n      vnode.asyncFactory\n    );\n    cloned.ns = vnode.ns;\n    cloned.isStatic = vnode.isStatic;\n    cloned.key = vnode.key;\n    cloned.isComment = vnode.isComment;\n    cloned.fnContext = vnode.fnContext;\n    cloned.fnOptions = vnode.fnOptions;\n    cloned.fnScopeId = vnode.fnScopeId;\n    cloned.asyncMeta = vnode.asyncMeta;\n    cloned.isCloned = true;\n    return cloned\n  }\n\n  /*\n   * not type checking this file because flow doesn't play well with\n   * dynamically accessing methods on Array prototype\n   */\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto);\n\n  var methodsToPatch = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'splice',\n    'sort',\n    'reverse'\n  ];\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n  methodsToPatch.forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n        case 'unshift':\n          inserted = args;\n          break\n        case 'splice':\n          inserted = args.slice(2);\n          break\n      }\n      if (inserted) { ob.observeArray(inserted); }\n      // notify change\n      ob.dep.notify();\n      return result\n    });\n  });\n\n  /*  */\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * In some cases we may want to disable observation inside a component's\n   * update computation.\n   */\n  var shouldObserve = true;\n\n  function toggleObserving (value) {\n    shouldObserve = value;\n  }\n\n  /**\n   * Observer class that is attached to each observed\n   * object. Once attached, the observer converts the target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatch updates.\n   */\n  var Observer = function Observer (value) {\n    this.value = value;\n    this.dep = new Dep();\n    this.vmCount = 0;\n    def(value, '__ob__', this);\n    if (Array.isArray(value)) {\n      if (hasProto) {\n        protoAugment(value, arrayMethods);\n      } else {\n        copyAugment(value, arrayMethods, arrayKeys);\n      }\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  };\n\n  /**\n   * Walk through all properties and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   */\n  Observer.prototype.walk = function walk (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; i++) {\n      defineReactive$$1(obj, keys[i]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   */\n  Observer.prototype.observeArray = function observeArray (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  // helpers\n\n  /**\n   * Augment a target Object or Array by intercepting\n   * the prototype chain using __proto__\n   */\n  function protoAugment (target, src) {\n    /* eslint-disable no-proto */\n    target.__proto__ = src;\n    /* eslint-enable no-proto */\n  }\n\n  /**\n   * Augment a target Object or Array by defining\n   * hidden properties.\n   */\n  /* istanbul ignore next */\n  function copyAugment (target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   */\n  function observe (value, asRootData) {\n    if (!isObject(value) || value instanceof VNode) {\n      return\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if (\n      shouldObserve &&\n      !isServerRendering() &&\n      (Array.isArray(value) || isPlainObject(value)) &&\n      Object.isExtensible(value) &&\n      !value._isVue\n    ) {\n      ob = new Observer(value);\n    }\n    if (asRootData && ob) {\n      ob.vmCount++;\n    }\n    return ob\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   */\n  function defineReactive$$1 (\n    obj,\n    key,\n    val,\n    customSetter,\n    shallow\n  ) {\n    var dep = new Dep();\n\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return\n    }\n\n    // cater for pre-defined getter/setters\n    var getter = property && property.get;\n    var setter = property && property.set;\n    if ((!getter || setter) && arguments.length === 2) {\n      val = obj[key];\n    }\n\n    var childOb = !shallow && observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter () {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n            if (Array.isArray(value)) {\n              dependArray(value);\n            }\n          }\n        }\n        return value\n      },\n      set: function reactiveSetter (newVal) {\n        var value = getter ? getter.call(obj) : val;\n        /* eslint-disable no-self-compare */\n        if (newVal === value || (newVal !== newVal && value !== value)) {\n          return\n        }\n        /* eslint-enable no-self-compare */\n        if (customSetter) {\n          customSetter();\n        }\n        // #7981: for accessor properties without setter\n        if (getter && !setter) { return }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = !shallow && observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n  /**\n   * Set a property on an object. Adds the new property and\n   * triggers change notification if the property doesn't\n   * already exist.\n   */\n  function set (target, key, val) {\n    if (isUndef(target) || isPrimitive(target)\n    ) {\n      warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n    }\n    if (Array.isArray(target) && isValidArrayIndex(key)) {\n      target.length = Math.max(target.length, key);\n      target.splice(key, 1, val);\n      return val\n    }\n    if (key in target && !(key in Object.prototype)) {\n      target[key] = val;\n      return val\n    }\n    var ob = (target).__ob__;\n    if (target._isVue || (ob && ob.vmCount)) {\n      warn(\n        'Avoid adding reactive properties to a Vue instance or its root $data ' +\n        'at runtime - declare it upfront in the data option.'\n      );\n      return val\n    }\n    if (!ob) {\n      target[key] = val;\n      return val\n    }\n    defineReactive$$1(ob.value, key, val);\n    ob.dep.notify();\n    return val\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   */\n  function del (target, key) {\n    if (isUndef(target) || isPrimitive(target)\n    ) {\n      warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n    }\n    if (Array.isArray(target) && isValidArrayIndex(key)) {\n      target.splice(key, 1);\n      return\n    }\n    var ob = (target).__ob__;\n    if (target._isVue || (ob && ob.vmCount)) {\n      warn(\n        'Avoid deleting properties on a Vue instance or its root $data ' +\n        '- just set it to null.'\n      );\n      return\n    }\n    if (!hasOwn(target, key)) {\n      return\n    }\n    delete target[key];\n    if (!ob) {\n      return\n    }\n    ob.dep.notify();\n  }\n\n  /**\n   * Collect dependencies on array elements when the array is touched, since\n   * we cannot intercept array element access like property getters.\n   */\n  function dependArray (value) {\n    for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n      e = value[i];\n      e && e.__ob__ && e.__ob__.dep.depend();\n      if (Array.isArray(e)) {\n        dependArray(e);\n      }\n    }\n  }\n\n  /*  */\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   */\n  var strats = config.optionMergeStrategies;\n\n  /**\n   * Options with restrictions\n   */\n  {\n    strats.el = strats.propsData = function (parent, child, vm, key) {\n      if (!vm) {\n        warn(\n          \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n          'creation with the `new` keyword.'\n        );\n      }\n      return defaultStrat(parent, child)\n    };\n  }\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n  function mergeData (to, from) {\n    if (!from) { return to }\n    var key, toVal, fromVal;\n\n    var keys = hasSymbol\n      ? Reflect.ownKeys(from)\n      : Object.keys(from);\n\n    for (var i = 0; i < keys.length; i++) {\n      key = keys[i];\n      // in case the object is already observed...\n      if (key === '__ob__') { continue }\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (\n        toVal !== fromVal &&\n        isPlainObject(toVal) &&\n        isPlainObject(fromVal)\n      ) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to\n  }\n\n  /**\n   * Data\n   */\n  function mergeDataOrFn (\n    parentVal,\n    childVal,\n    vm\n  ) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal\n      }\n      if (!parentVal) {\n        return childVal\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn () {\n        return mergeData(\n          typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n          typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n        )\n      }\n    } else {\n      return function mergedInstanceDataFn () {\n        // instance merge\n        var instanceData = typeof childVal === 'function'\n          ? childVal.call(vm, vm)\n          : childVal;\n        var defaultData = typeof parentVal === 'function'\n          ? parentVal.call(vm, vm)\n          : parentVal;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData)\n        } else {\n          return defaultData\n        }\n      }\n    }\n  }\n\n  strats.data = function (\n    parentVal,\n    childVal,\n    vm\n  ) {\n    if (!vm) {\n      if (childVal && typeof childVal !== 'function') {\n        warn(\n          'The \"data\" option should be a function ' +\n          'that returns a per-instance value in component ' +\n          'definitions.',\n          vm\n        );\n\n        return parentVal\n      }\n      return mergeDataOrFn(parentVal, childVal)\n    }\n\n    return mergeDataOrFn(parentVal, childVal, vm)\n  };\n\n  /**\n   * Hooks and props are merged as arrays.\n   */\n  function mergeHook (\n    parentVal,\n    childVal\n  ) {\n    var res = childVal\n      ? parentVal\n        ? parentVal.concat(childVal)\n        : Array.isArray(childVal)\n          ? childVal\n          : [childVal]\n      : parentVal;\n    return res\n      ? dedupeHooks(res)\n      : res\n  }\n\n  function dedupeHooks (hooks) {\n    var res = [];\n    for (var i = 0; i < hooks.length; i++) {\n      if (res.indexOf(hooks[i]) === -1) {\n        res.push(hooks[i]);\n      }\n    }\n    return res\n  }\n\n  LIFECYCLE_HOOKS.forEach(function (hook) {\n    strats[hook] = mergeHook;\n  });\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n  function mergeAssets (\n    parentVal,\n    childVal,\n    vm,\n    key\n  ) {\n    var res = Object.create(parentVal || null);\n    if (childVal) {\n      assertObjectType(key, childVal, vm);\n      return extend(res, childVal)\n    } else {\n      return res\n    }\n  }\n\n  ASSET_TYPES.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Watchers.\n   *\n   * Watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n  strats.watch = function (\n    parentVal,\n    childVal,\n    vm,\n    key\n  ) {\n    // work around Firefox's Object.prototype.watch...\n    if (parentVal === nativeWatch) { parentVal = undefined; }\n    if (childVal === nativeWatch) { childVal = undefined; }\n    /* istanbul ignore if */\n    if (!childVal) { return Object.create(parentVal || null) }\n    {\n      assertObjectType(key, childVal, vm);\n    }\n    if (!parentVal) { return childVal }\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key$1 in childVal) {\n      var parent = ret[key$1];\n      var child = childVal[key$1];\n      if (parent && !Array.isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key$1] = parent\n        ? parent.concat(child)\n        : Array.isArray(child) ? child : [child];\n    }\n    return ret\n  };\n\n  /**\n   * Other object hashes.\n   */\n  strats.props =\n  strats.methods =\n  strats.inject =\n  strats.computed = function (\n    parentVal,\n    childVal,\n    vm,\n    key\n  ) {\n    if (childVal && \"development\" !== 'production') {\n      assertObjectType(key, childVal, vm);\n    }\n    if (!parentVal) { return childVal }\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    if (childVal) { extend(ret, childVal); }\n    return ret\n  };\n  strats.provide = mergeDataOrFn;\n\n  /**\n   * Default strategy.\n   */\n  var defaultStrat = function (parentVal, childVal) {\n    return childVal === undefined\n      ? parentVal\n      : childVal\n  };\n\n  /**\n   * Validate component names\n   */\n  function checkComponents (options) {\n    for (var key in options.components) {\n      validateComponentName(key);\n    }\n  }\n\n  function validateComponentName (name) {\n    if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n      warn(\n        'Invalid component name: \"' + name + '\". Component names ' +\n        'should conform to valid custom element name in html5 specification.'\n      );\n    }\n    if (isBuiltInTag(name) || config.isReservedTag(name)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + name\n      );\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   */\n  function normalizeProps (options, vm) {\n    var props = options.props;\n    if (!props) { return }\n    var res = {};\n    var i, val, name;\n    if (Array.isArray(props)) {\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          name = camelize(val);\n          res[name] = { type: null };\n        } else {\n          warn('props must be strings when using array syntax.');\n        }\n      }\n    } else if (isPlainObject(props)) {\n      for (var key in props) {\n        val = props[key];\n        name = camelize(key);\n        res[name] = isPlainObject(val)\n          ? val\n          : { type: val };\n      }\n    } else {\n      warn(\n        \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n        \"but got \" + (toRawType(props)) + \".\",\n        vm\n      );\n    }\n    options.props = res;\n  }\n\n  /**\n   * Normalize all injections into Object-based format\n   */\n  function normalizeInject (options, vm) {\n    var inject = options.inject;\n    if (!inject) { return }\n    var normalized = options.inject = {};\n    if (Array.isArray(inject)) {\n      for (var i = 0; i < inject.length; i++) {\n        normalized[inject[i]] = { from: inject[i] };\n      }\n    } else if (isPlainObject(inject)) {\n      for (var key in inject) {\n        var val = inject[key];\n        normalized[key] = isPlainObject(val)\n          ? extend({ from: key }, val)\n          : { from: val };\n      }\n    } else {\n      warn(\n        \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n        \"but got \" + (toRawType(inject)) + \".\",\n        vm\n      );\n    }\n  }\n\n  /**\n   * Normalize raw function directives into object format.\n   */\n  function normalizeDirectives (options) {\n    var dirs = options.directives;\n    if (dirs) {\n      for (var key in dirs) {\n        var def$$1 = dirs[key];\n        if (typeof def$$1 === 'function') {\n          dirs[key] = { bind: def$$1, update: def$$1 };\n        }\n      }\n    }\n  }\n\n  function assertObjectType (name, value, vm) {\n    if (!isPlainObject(value)) {\n      warn(\n        \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n        \"but got \" + (toRawType(value)) + \".\",\n        vm\n      );\n    }\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   */\n  function mergeOptions (\n    parent,\n    child,\n    vm\n  ) {\n    {\n      checkComponents(child);\n    }\n\n    if (typeof child === 'function') {\n      child = child.options;\n    }\n\n    normalizeProps(child, vm);\n    normalizeInject(child, vm);\n    normalizeDirectives(child);\n\n    // Apply extends and mixins on the child options,\n    // but only if it is a raw options object that isn't\n    // the result of another mergeOptions call.\n    // Only merged options has the _base property.\n    if (!child._base) {\n      if (child.extends) {\n        parent = mergeOptions(parent, child.extends, vm);\n      }\n      if (child.mixins) {\n        for (var i = 0, l = child.mixins.length; i < l; i++) {\n          parent = mergeOptions(parent, child.mixins[i], vm);\n        }\n      }\n    }\n\n    var options = {};\n    var key;\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField (key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   */\n  function resolveAsset (\n    options,\n    type,\n    id,\n    warnMissing\n  ) {\n    /* istanbul ignore if */\n    if (typeof id !== 'string') {\n      return\n    }\n    var assets = options[type];\n    // check local registration variations first\n    if (hasOwn(assets, id)) { return assets[id] }\n    var camelizedId = camelize(id);\n    if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n    var PascalCaseId = capitalize(camelizedId);\n    if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n    // fallback to prototype chain\n    var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n    if (warnMissing && !res) {\n      warn(\n        'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n        options\n      );\n    }\n    return res\n  }\n\n  /*  */\n\n\n\n  function validateProp (\n    key,\n    propOptions,\n    propsData,\n    vm\n  ) {\n    var prop = propOptions[key];\n    var absent = !hasOwn(propsData, key);\n    var value = propsData[key];\n    // boolean casting\n    var booleanIndex = getTypeIndex(Boolean, prop.type);\n    if (booleanIndex > -1) {\n      if (absent && !hasOwn(prop, 'default')) {\n        value = false;\n      } else if (value === '' || value === hyphenate(key)) {\n        // only cast empty string / same name to boolean if\n        // boolean has higher priority\n        var stringIndex = getTypeIndex(String, prop.type);\n        if (stringIndex < 0 || booleanIndex < stringIndex) {\n          value = true;\n        }\n      }\n    }\n    // check default value\n    if (value === undefined) {\n      value = getPropDefaultValue(vm, prop, key);\n      // since the default value is a fresh copy,\n      // make sure to observe it.\n      var prevShouldObserve = shouldObserve;\n      toggleObserving(true);\n      observe(value);\n      toggleObserving(prevShouldObserve);\n    }\n    {\n      assertProp(prop, key, value, vm, absent);\n    }\n    return value\n  }\n\n  /**\n   * Get the default value of a prop.\n   */\n  function getPropDefaultValue (vm, prop, key) {\n    // no default, return undefined\n    if (!hasOwn(prop, 'default')) {\n      return undefined\n    }\n    var def = prop.default;\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      warn(\n        'Invalid default value for prop \"' + key + '\": ' +\n        'Props with type Object/Array must use a factory function ' +\n        'to return the default value.',\n        vm\n      );\n    }\n    // the raw prop value was also undefined from previous render,\n    // return previous default value to avoid unnecessary watcher trigger\n    if (vm && vm.$options.propsData &&\n      vm.$options.propsData[key] === undefined &&\n      vm._props[key] !== undefined\n    ) {\n      return vm._props[key]\n    }\n    // call factory function for non-Function types\n    // a value is Function if its prototype is function even across different execution context\n    return typeof def === 'function' && getType(prop.type) !== 'Function'\n      ? def.call(vm)\n      : def\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   */\n  function assertProp (\n    prop,\n    name,\n    value,\n    vm,\n    absent\n  ) {\n    if (prop.required && absent) {\n      warn(\n        'Missing required prop: \"' + name + '\"',\n        vm\n      );\n      return\n    }\n    if (value == null && !prop.required) {\n      return\n    }\n    var type = prop.type;\n    var valid = !type || type === true;\n    var expectedTypes = [];\n    if (type) {\n      if (!Array.isArray(type)) {\n        type = [type];\n      }\n      for (var i = 0; i < type.length && !valid; i++) {\n        var assertedType = assertType(value, type[i], vm);\n        expectedTypes.push(assertedType.expectedType || '');\n        valid = assertedType.valid;\n      }\n    }\n\n    var haveExpectedTypes = expectedTypes.some(function (t) { return t; });\n    if (!valid && haveExpectedTypes) {\n      warn(\n        getInvalidTypeMessage(name, value, expectedTypes),\n        vm\n      );\n      return\n    }\n    var validator = prop.validator;\n    if (validator) {\n      if (!validator(value)) {\n        warn(\n          'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n          vm\n        );\n      }\n    }\n  }\n\n  var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;\n\n  function assertType (value, type, vm) {\n    var valid;\n    var expectedType = getType(type);\n    if (simpleCheckRE.test(expectedType)) {\n      var t = typeof value;\n      valid = t === expectedType.toLowerCase();\n      // for primitive wrapper objects\n      if (!valid && t === 'object') {\n        valid = value instanceof type;\n      }\n    } else if (expectedType === 'Object') {\n      valid = isPlainObject(value);\n    } else if (expectedType === 'Array') {\n      valid = Array.isArray(value);\n    } else {\n      try {\n        valid = value instanceof type;\n      } catch (e) {\n        warn('Invalid prop type: \"' + String(type) + '\" is not a constructor', vm);\n        valid = false;\n      }\n    }\n    return {\n      valid: valid,\n      expectedType: expectedType\n    }\n  }\n\n  var functionTypeCheckRE = /^\\s*function (\\w+)/;\n\n  /**\n   * Use function string name to check built-in types,\n   * because a simple equality check will fail when running\n   * across different vms / iframes.\n   */\n  function getType (fn) {\n    var match = fn && fn.toString().match(functionTypeCheckRE);\n    return match ? match[1] : ''\n  }\n\n  function isSameType (a, b) {\n    return getType(a) === getType(b)\n  }\n\n  function getTypeIndex (type, expectedTypes) {\n    if (!Array.isArray(expectedTypes)) {\n      return isSameType(expectedTypes, type) ? 0 : -1\n    }\n    for (var i = 0, len = expectedTypes.length; i < len; i++) {\n      if (isSameType(expectedTypes[i], type)) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  function getInvalidTypeMessage (name, value, expectedTypes) {\n    var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n    var expectedType = expectedTypes[0];\n    var receivedType = toRawType(value);\n    // check if we need to specify expected value\n    if (\n      expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      isExplicable(typeof value) &&\n      !isBoolean(expectedType, receivedType)\n    ) {\n      message += \" with value \" + (styleValue(value, expectedType));\n    }\n    message += \", got \" + receivedType + \" \";\n    // check if we need to specify received value\n    if (isExplicable(receivedType)) {\n      message += \"with value \" + (styleValue(value, receivedType)) + \".\";\n    }\n    return message\n  }\n\n  function styleValue (value, type) {\n    if (type === 'String') {\n      return (\"\\\"\" + value + \"\\\"\")\n    } else if (type === 'Number') {\n      return (\"\" + (Number(value)))\n    } else {\n      return (\"\" + value)\n    }\n  }\n\n  var EXPLICABLE_TYPES = ['string', 'number', 'boolean'];\n  function isExplicable (value) {\n    return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; })\n  }\n\n  function isBoolean () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n  }\n\n  /*  */\n\n  function handleError (err, vm, info) {\n    // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n    // See: https://github.com/vuejs/vuex/issues/1505\n    pushTarget();\n    try {\n      if (vm) {\n        var cur = vm;\n        while ((cur = cur.$parent)) {\n          var hooks = cur.$options.errorCaptured;\n          if (hooks) {\n            for (var i = 0; i < hooks.length; i++) {\n              try {\n                var capture = hooks[i].call(cur, err, vm, info) === false;\n                if (capture) { return }\n              } catch (e) {\n                globalHandleError(e, cur, 'errorCaptured hook');\n              }\n            }\n          }\n        }\n      }\n      globalHandleError(err, vm, info);\n    } finally {\n      popTarget();\n    }\n  }\n\n  function invokeWithErrorHandling (\n    handler,\n    context,\n    args,\n    vm,\n    info\n  ) {\n    var res;\n    try {\n      res = args ? handler.apply(context, args) : handler.call(context);\n      if (res && !res._isVue && isPromise(res) && !res._handled) {\n        res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n        // issue #9511\n        // avoid catch triggering multiple times when nested calls\n        res._handled = true;\n      }\n    } catch (e) {\n      handleError(e, vm, info);\n    }\n    return res\n  }\n\n  function globalHandleError (err, vm, info) {\n    if (config.errorHandler) {\n      try {\n        return config.errorHandler.call(null, err, vm, info)\n      } catch (e) {\n        // if the user intentionally throws the original error in the handler,\n        // do not log it twice\n        if (e !== err) {\n          logError(e, null, 'config.errorHandler');\n        }\n      }\n    }\n    logError(err, vm, info);\n  }\n\n  function logError (err, vm, info) {\n    {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n\n  /*  */\n\n  var isUsingMicroTask = false;\n\n  var callbacks = [];\n  var pending = false;\n\n  function flushCallbacks () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // Here we have async deferring wrappers using microtasks.\n  // In 2.5 we used (macro) tasks (in combination with microtasks).\n  // However, it has subtle problems when state is changed right before repaint\n  // (e.g. #6813, out-in transitions).\n  // Also, using (macro) tasks in event handler would cause some weird behaviors\n  // that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n  // So we now use microtasks everywhere, again.\n  // A major drawback of this tradeoff is that there are some scenarios\n  // where microtasks have too high a priority and fire in between supposedly\n  // sequential events (e.g. #4521, #6690, which have workarounds)\n  // or even between bubbling of the same event (#6566).\n  var timerFunc;\n\n  // The nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore next, $flow-disable-line */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    timerFunc = function () {\n      p.then(flushCallbacks);\n      // In problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n    isUsingMicroTask = true;\n  } else if (!isIE && typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // Use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS, iOS7, Android 4.4\n    // (#6466 MutationObserver is unreliable in IE11)\n    var counter = 1;\n    var observer = new MutationObserver(flushCallbacks);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n    isUsingMicroTask = true;\n  } else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n    // Fallback to setImmediate.\n    // Technically it leverages the (macro) task queue,\n    // but it is still a better choice than setTimeout.\n    timerFunc = function () {\n      setImmediate(flushCallbacks);\n    };\n  } else {\n    // Fallback to setTimeout.\n    timerFunc = function () {\n      setTimeout(flushCallbacks, 0);\n    };\n  }\n\n  function nextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    // $flow-disable-line\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n\n  /*  */\n\n  var mark;\n  var measure;\n\n  {\n    var perf = inBrowser && window.performance;\n    /* istanbul ignore if */\n    if (\n      perf &&\n      perf.mark &&\n      perf.measure &&\n      perf.clearMarks &&\n      perf.clearMeasures\n    ) {\n      mark = function (tag) { return perf.mark(tag); };\n      measure = function (name, startTag, endTag) {\n        perf.measure(name, startTag, endTag);\n        perf.clearMarks(startTag);\n        perf.clearMarks(endTag);\n        // perf.clearMeasures(name)\n      };\n    }\n  }\n\n  /* not type checking this file because flow doesn't play well with Proxy */\n\n  var initProxy;\n\n  {\n    var allowedGlobals = makeMap(\n      'Infinity,undefined,NaN,isFinite,isNaN,' +\n      'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n      'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +\n      'require' // for Webpack/Browserify\n    );\n\n    var warnNonPresent = function (target, key) {\n      warn(\n        \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n        'referenced during render. Make sure that this property is reactive, ' +\n        'either in the data option, or for class-based components, by ' +\n        'initializing the property. ' +\n        'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n        target\n      );\n    };\n\n    var warnReservedPrefix = function (target, key) {\n      warn(\n        \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n        'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n        'prevent conflicts with Vue internals. ' +\n        'See: https://vuejs.org/v2/api/#data',\n        target\n      );\n    };\n\n    var hasProxy =\n      typeof Proxy !== 'undefined' && isNative(Proxy);\n\n    if (hasProxy) {\n      var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n      config.keyCodes = new Proxy(config.keyCodes, {\n        set: function set (target, key, value) {\n          if (isBuiltInModifier(key)) {\n            warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n            return false\n          } else {\n            target[key] = value;\n            return true\n          }\n        }\n      });\n    }\n\n    var hasHandler = {\n      has: function has (target, key) {\n        var has = key in target;\n        var isAllowed = allowedGlobals(key) ||\n          (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n        if (!has && !isAllowed) {\n          if (key in target.$data) { warnReservedPrefix(target, key); }\n          else { warnNonPresent(target, key); }\n        }\n        return has || !isAllowed\n      }\n    };\n\n    var getHandler = {\n      get: function get (target, key) {\n        if (typeof key === 'string' && !(key in target)) {\n          if (key in target.$data) { warnReservedPrefix(target, key); }\n          else { warnNonPresent(target, key); }\n        }\n        return target[key]\n      }\n    };\n\n    initProxy = function initProxy (vm) {\n      if (hasProxy) {\n        // determine which proxy handler to use\n        var options = vm.$options;\n        var handlers = options.render && options.render._withStripped\n          ? getHandler\n          : hasHandler;\n        vm._renderProxy = new Proxy(vm, handlers);\n      } else {\n        vm._renderProxy = vm;\n      }\n    };\n  }\n\n  /*  */\n\n  var seenObjects = new _Set();\n\n  /**\n   * Recursively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   */\n  function traverse (val) {\n    _traverse(val, seenObjects);\n    seenObjects.clear();\n  }\n\n  function _traverse (val, seen) {\n    var i, keys;\n    var isA = Array.isArray(val);\n    if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n      return\n    }\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return\n      }\n      seen.add(depId);\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) { _traverse(val[i], seen); }\n    } else {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) { _traverse(val[keys[i]], seen); }\n    }\n  }\n\n  /*  */\n\n  var normalizeEvent = cached(function (name) {\n    var passive = name.charAt(0) === '&';\n    name = passive ? name.slice(1) : name;\n    var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n    name = once$$1 ? name.slice(1) : name;\n    var capture = name.charAt(0) === '!';\n    name = capture ? name.slice(1) : name;\n    return {\n      name: name,\n      once: once$$1,\n      capture: capture,\n      passive: passive\n    }\n  });\n\n  function createFnInvoker (fns, vm) {\n    function invoker () {\n      var arguments$1 = arguments;\n\n      var fns = invoker.fns;\n      if (Array.isArray(fns)) {\n        var cloned = fns.slice();\n        for (var i = 0; i < cloned.length; i++) {\n          invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n        }\n      } else {\n        // return handler return value for single handlers\n        return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n      }\n    }\n    invoker.fns = fns;\n    return invoker\n  }\n\n  function updateListeners (\n    on,\n    oldOn,\n    add,\n    remove$$1,\n    createOnceHandler,\n    vm\n  ) {\n    var name, def$$1, cur, old, event;\n    for (name in on) {\n      def$$1 = cur = on[name];\n      old = oldOn[name];\n      event = normalizeEvent(name);\n      if (isUndef(cur)) {\n        warn(\n          \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n          vm\n        );\n      } else if (isUndef(old)) {\n        if (isUndef(cur.fns)) {\n          cur = on[name] = createFnInvoker(cur, vm);\n        }\n        if (isTrue(event.once)) {\n          cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n        }\n        add(event.name, cur, event.capture, event.passive, event.params);\n      } else if (cur !== old) {\n        old.fns = cur;\n        on[name] = old;\n      }\n    }\n    for (name in oldOn) {\n      if (isUndef(on[name])) {\n        event = normalizeEvent(name);\n        remove$$1(event.name, oldOn[name], event.capture);\n      }\n    }\n  }\n\n  /*  */\n\n  function mergeVNodeHook (def, hookKey, hook) {\n    if (def instanceof VNode) {\n      def = def.data.hook || (def.data.hook = {});\n    }\n    var invoker;\n    var oldHook = def[hookKey];\n\n    function wrappedHook () {\n      hook.apply(this, arguments);\n      // important: remove merged hook to ensure it's called only once\n      // and prevent memory leak\n      remove(invoker.fns, wrappedHook);\n    }\n\n    if (isUndef(oldHook)) {\n      // no existing hook\n      invoker = createFnInvoker([wrappedHook]);\n    } else {\n      /* istanbul ignore if */\n      if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n        // already a merged invoker\n        invoker = oldHook;\n        invoker.fns.push(wrappedHook);\n      } else {\n        // existing plain hook\n        invoker = createFnInvoker([oldHook, wrappedHook]);\n      }\n    }\n\n    invoker.merged = true;\n    def[hookKey] = invoker;\n  }\n\n  /*  */\n\n  function extractPropsFromVNodeData (\n    data,\n    Ctor,\n    tag\n  ) {\n    // we are only extracting raw values here.\n    // validation and default values are handled in the child\n    // component itself.\n    var propOptions = Ctor.options.props;\n    if (isUndef(propOptions)) {\n      return\n    }\n    var res = {};\n    var attrs = data.attrs;\n    var props = data.props;\n    if (isDef(attrs) || isDef(props)) {\n      for (var key in propOptions) {\n        var altKey = hyphenate(key);\n        {\n          var keyInLowerCase = key.toLowerCase();\n          if (\n            key !== keyInLowerCase &&\n            attrs && hasOwn(attrs, keyInLowerCase)\n          ) {\n            tip(\n              \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n              (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n              \" \\\"\" + key + \"\\\". \" +\n              \"Note that HTML attributes are case-insensitive and camelCased \" +\n              \"props need to use their kebab-case equivalents when using in-DOM \" +\n              \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n            );\n          }\n        }\n        checkProp(res, props, key, altKey, true) ||\n        checkProp(res, attrs, key, altKey, false);\n      }\n    }\n    return res\n  }\n\n  function checkProp (\n    res,\n    hash,\n    key,\n    altKey,\n    preserve\n  ) {\n    if (isDef(hash)) {\n      if (hasOwn(hash, key)) {\n        res[key] = hash[key];\n        if (!preserve) {\n          delete hash[key];\n        }\n        return true\n      } else if (hasOwn(hash, altKey)) {\n        res[key] = hash[altKey];\n        if (!preserve) {\n          delete hash[altKey];\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  /*  */\n\n  // The template compiler attempts to minimize the need for normalization by\n  // statically analyzing the template at compile time.\n  //\n  // For plain HTML markup, normalization can be completely skipped because the\n  // generated render function is guaranteed to return Array<VNode>. There are\n  // two cases where extra normalization is needed:\n\n  // 1. When the children contains components - because a functional component\n  // may return an Array instead of a single root. In this case, just a simple\n  // normalization is needed - if any child is an Array, we flatten the whole\n  // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n  // because functional components already normalize their own children.\n  function simpleNormalizeChildren (children) {\n    for (var i = 0; i < children.length; i++) {\n      if (Array.isArray(children[i])) {\n        return Array.prototype.concat.apply([], children)\n      }\n    }\n    return children\n  }\n\n  // 2. When the children contains constructs that always generated nested Arrays,\n  // e.g. <template>, <slot>, v-for, or when the children is provided by user\n  // with hand-written render functions / JSX. In such cases a full normalization\n  // is needed to cater to all possible types of children values.\n  function normalizeChildren (children) {\n    return isPrimitive(children)\n      ? [createTextVNode(children)]\n      : Array.isArray(children)\n        ? normalizeArrayChildren(children)\n        : undefined\n  }\n\n  function isTextNode (node) {\n    return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n  }\n\n  function normalizeArrayChildren (children, nestedIndex) {\n    var res = [];\n    var i, c, lastIndex, last;\n    for (i = 0; i < children.length; i++) {\n      c = children[i];\n      if (isUndef(c) || typeof c === 'boolean') { continue }\n      lastIndex = res.length - 1;\n      last = res[lastIndex];\n      //  nested\n      if (Array.isArray(c)) {\n        if (c.length > 0) {\n          c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n          // merge adjacent text nodes\n          if (isTextNode(c[0]) && isTextNode(last)) {\n            res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n            c.shift();\n          }\n          res.push.apply(res, c);\n        }\n      } else if (isPrimitive(c)) {\n        if (isTextNode(last)) {\n          // merge adjacent text nodes\n          // this is necessary for SSR hydration because text nodes are\n          // essentially merged when rendered to HTML strings\n          res[lastIndex] = createTextVNode(last.text + c);\n        } else if (c !== '') {\n          // convert primitive to vnode\n          res.push(createTextVNode(c));\n        }\n      } else {\n        if (isTextNode(c) && isTextNode(last)) {\n          // merge adjacent text nodes\n          res[lastIndex] = createTextVNode(last.text + c.text);\n        } else {\n          // default key for nested array children (likely generated by v-for)\n          if (isTrue(children._isVList) &&\n            isDef(c.tag) &&\n            isUndef(c.key) &&\n            isDef(nestedIndex)) {\n            c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n          }\n          res.push(c);\n        }\n      }\n    }\n    return res\n  }\n\n  /*  */\n\n  function initProvide (vm) {\n    var provide = vm.$options.provide;\n    if (provide) {\n      vm._provided = typeof provide === 'function'\n        ? provide.call(vm)\n        : provide;\n    }\n  }\n\n  function initInjections (vm) {\n    var result = resolveInject(vm.$options.inject, vm);\n    if (result) {\n      toggleObserving(false);\n      Object.keys(result).forEach(function (key) {\n        /* istanbul ignore else */\n        {\n          defineReactive$$1(vm, key, result[key], function () {\n            warn(\n              \"Avoid mutating an injected value directly since the changes will be \" +\n              \"overwritten whenever the provided component re-renders. \" +\n              \"injection being mutated: \\\"\" + key + \"\\\"\",\n              vm\n            );\n          });\n        }\n      });\n      toggleObserving(true);\n    }\n  }\n\n  function resolveInject (inject, vm) {\n    if (inject) {\n      // inject is :any because flow is not smart enough to figure out cached\n      var result = Object.create(null);\n      var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        // #6574 in case the inject object is observed...\n        if (key === '__ob__') { continue }\n        var provideKey = inject[key].from;\n        var source = vm;\n        while (source) {\n          if (source._provided && hasOwn(source._provided, provideKey)) {\n            result[key] = source._provided[provideKey];\n            break\n          }\n          source = source.$parent;\n        }\n        if (!source) {\n          if ('default' in inject[key]) {\n            var provideDefault = inject[key].default;\n            result[key] = typeof provideDefault === 'function'\n              ? provideDefault.call(vm)\n              : provideDefault;\n          } else {\n            warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n          }\n        }\n      }\n      return result\n    }\n  }\n\n  /*  */\n\n\n\n  /**\n   * Runtime helper for resolving raw children VNodes into a slot object.\n   */\n  function resolveSlots (\n    children,\n    context\n  ) {\n    if (!children || !children.length) {\n      return {}\n    }\n    var slots = {};\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var data = child.data;\n      // remove slot attribute if the node is resolved as a Vue slot node\n      if (data && data.attrs && data.attrs.slot) {\n        delete data.attrs.slot;\n      }\n      // named slots should only be respected if the vnode was rendered in the\n      // same context.\n      if ((child.context === context || child.fnContext === context) &&\n        data && data.slot != null\n      ) {\n        var name = data.slot;\n        var slot = (slots[name] || (slots[name] = []));\n        if (child.tag === 'template') {\n          slot.push.apply(slot, child.children || []);\n        } else {\n          slot.push(child);\n        }\n      } else {\n        (slots.default || (slots.default = [])).push(child);\n      }\n    }\n    // ignore slots that contains only whitespace\n    for (var name$1 in slots) {\n      if (slots[name$1].every(isWhitespace)) {\n        delete slots[name$1];\n      }\n    }\n    return slots\n  }\n\n  function isWhitespace (node) {\n    return (node.isComment && !node.asyncFactory) || node.text === ' '\n  }\n\n  /*  */\n\n  function isAsyncPlaceholder (node) {\n    return node.isComment && node.asyncFactory\n  }\n\n  /*  */\n\n  function normalizeScopedSlots (\n    slots,\n    normalSlots,\n    prevSlots\n  ) {\n    var res;\n    var hasNormalSlots = Object.keys(normalSlots).length > 0;\n    var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n    var key = slots && slots.$key;\n    if (!slots) {\n      res = {};\n    } else if (slots._normalized) {\n      // fast path 1: child component re-render only, parent did not change\n      return slots._normalized\n    } else if (\n      isStable &&\n      prevSlots &&\n      prevSlots !== emptyObject &&\n      key === prevSlots.$key &&\n      !hasNormalSlots &&\n      !prevSlots.$hasNormal\n    ) {\n      // fast path 2: stable scoped slots w/ no normal slots to proxy,\n      // only need to normalize once\n      return prevSlots\n    } else {\n      res = {};\n      for (var key$1 in slots) {\n        if (slots[key$1] && key$1[0] !== '$') {\n          res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n        }\n      }\n    }\n    // expose normal slots on scopedSlots\n    for (var key$2 in normalSlots) {\n      if (!(key$2 in res)) {\n        res[key$2] = proxyNormalSlot(normalSlots, key$2);\n      }\n    }\n    // avoriaz seems to mock a non-extensible $scopedSlots object\n    // and when that is passed down this would cause an error\n    if (slots && Object.isExtensible(slots)) {\n      (slots)._normalized = res;\n    }\n    def(res, '$stable', isStable);\n    def(res, '$key', key);\n    def(res, '$hasNormal', hasNormalSlots);\n    return res\n  }\n\n  function normalizeScopedSlot(normalSlots, key, fn) {\n    var normalized = function () {\n      var res = arguments.length ? fn.apply(null, arguments) : fn({});\n      res = res && typeof res === 'object' && !Array.isArray(res)\n        ? [res] // single vnode\n        : normalizeChildren(res);\n      var vnode = res && res[0];\n      return res && (\n        !vnode ||\n        (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391\n      ) ? undefined\n        : res\n    };\n    // this is a slot using the new v-slot syntax without scope. although it is\n    // compiled as a scoped slot, render fn users would expect it to be present\n    // on this.$slots because the usage is semantically a normal slot.\n    if (fn.proxy) {\n      Object.defineProperty(normalSlots, key, {\n        get: normalized,\n        enumerable: true,\n        configurable: true\n      });\n    }\n    return normalized\n  }\n\n  function proxyNormalSlot(slots, key) {\n    return function () { return slots[key]; }\n  }\n\n  /*  */\n\n  /**\n   * Runtime helper for rendering v-for lists.\n   */\n  function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === 'string') {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      if (hasSymbol && val[Symbol.iterator]) {\n        ret = [];\n        var iterator = val[Symbol.iterator]();\n        var result = iterator.next();\n        while (!result.done) {\n          ret.push(render(result.value, ret.length));\n          result = iterator.next();\n        }\n      } else {\n        keys = Object.keys(val);\n        ret = new Array(keys.length);\n        for (i = 0, l = keys.length; i < l; i++) {\n          key = keys[i];\n          ret[i] = render(val[key], key, i);\n        }\n      }\n    }\n    if (!isDef(ret)) {\n      ret = [];\n    }\n    (ret)._isVList = true;\n    return ret\n  }\n\n  /*  */\n\n  /**\n   * Runtime helper for rendering <slot>\n   */\n  function renderSlot (\n    name,\n    fallbackRender,\n    props,\n    bindObject\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    var nodes;\n    if (scopedSlotFn) {\n      // scoped slot\n      props = props || {};\n      if (bindObject) {\n        if (!isObject(bindObject)) {\n          warn('slot v-bind without argument expects an Object', this);\n        }\n        props = extend(extend({}, bindObject), props);\n      }\n      nodes =\n        scopedSlotFn(props) ||\n        (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n    } else {\n      nodes =\n        this.$slots[name] ||\n        (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n    }\n\n    var target = props && props.slot;\n    if (target) {\n      return this.$createElement('template', { slot: target }, nodes)\n    } else {\n      return nodes\n    }\n  }\n\n  /*  */\n\n  /**\n   * Runtime helper for resolving filters\n   */\n  function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  }\n\n  /*  */\n\n  function isKeyNotMatch (expect, actual) {\n    if (Array.isArray(expect)) {\n      return expect.indexOf(actual) === -1\n    } else {\n      return expect !== actual\n    }\n  }\n\n  /**\n   * Runtime helper for checking keyCodes from config.\n   * exposed as Vue.prototype._k\n   * passing in eventKeyName as last argument separately for backwards compat\n   */\n  function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInKeyCode,\n    eventKeyName,\n    builtInKeyName\n  ) {\n    var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n    if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n      return isKeyNotMatch(builtInKeyName, eventKeyName)\n    } else if (mappedKeyCode) {\n      return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n    } else if (eventKeyName) {\n      return hyphenate(eventKeyName) !== key\n    }\n    return eventKeyCode === undefined\n  }\n\n  /*  */\n\n  /**\n   * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n   */\n  function bindObjectProps (\n    data,\n    tag,\n    value,\n    asProp,\n    isSync\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        var hash;\n        var loop = function ( key ) {\n          if (\n            key === 'class' ||\n            key === 'style' ||\n            isReservedAttribute(key)\n          ) {\n            hash = data;\n          } else {\n            var type = data.attrs && data.attrs.type;\n            hash = asProp || config.mustUseProp(tag, type, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n          }\n          var camelizedKey = camelize(key);\n          var hyphenatedKey = hyphenate(key);\n          if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n            hash[key] = value[key];\n\n            if (isSync) {\n              var on = data.on || (data.on = {});\n              on[(\"update:\" + key)] = function ($event) {\n                value[key] = $event;\n              };\n            }\n          }\n        };\n\n        for (var key in value) loop( key );\n      }\n    }\n    return data\n  }\n\n  /*  */\n\n  /**\n   * Runtime helper for rendering static trees.\n   */\n  function renderStatic (\n    index,\n    isInFor\n  ) {\n    var cached = this._staticTrees || (this._staticTrees = []);\n    var tree = cached[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree.\n    if (tree && !isInFor) {\n      return tree\n    }\n    // otherwise, render a fresh tree.\n    tree = cached[index] = this.$options.staticRenderFns[index].call(\n      this._renderProxy,\n      null,\n      this // for render fns generated for functional component templates\n    );\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  }\n\n  /**\n   * Runtime helper for v-once.\n   * Effectively it means marking the node as static with a unique key.\n   */\n  function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  }\n\n  function markStatic (\n    tree,\n    key,\n    isOnce\n  ) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  /*  */\n\n  function bindObjectListeners (data, value) {\n    if (value) {\n      if (!isPlainObject(value)) {\n        warn(\n          'v-on without argument expects an Object value',\n          this\n        );\n      } else {\n        var on = data.on = data.on ? extend({}, data.on) : {};\n        for (var key in value) {\n          var existing = on[key];\n          var ours = value[key];\n          on[key] = existing ? [].concat(existing, ours) : ours;\n        }\n      }\n    }\n    return data\n  }\n\n  /*  */\n\n  function resolveScopedSlots (\n    fns, // see flow/vnode\n    res,\n    // the following are added in 2.6\n    hasDynamicKeys,\n    contentHashKey\n  ) {\n    res = res || { $stable: !hasDynamicKeys };\n    for (var i = 0; i < fns.length; i++) {\n      var slot = fns[i];\n      if (Array.isArray(slot)) {\n        resolveScopedSlots(slot, res, hasDynamicKeys);\n      } else if (slot) {\n        // marker for reverse proxying v-slot without scope on this.$slots\n        if (slot.proxy) {\n          slot.fn.proxy = true;\n        }\n        res[slot.key] = slot.fn;\n      }\n    }\n    if (contentHashKey) {\n      (res).$key = contentHashKey;\n    }\n    return res\n  }\n\n  /*  */\n\n  function bindDynamicKeys (baseObj, values) {\n    for (var i = 0; i < values.length; i += 2) {\n      var key = values[i];\n      if (typeof key === 'string' && key) {\n        baseObj[values[i]] = values[i + 1];\n      } else if (key !== '' && key !== null) {\n        // null is a special value for explicitly removing a binding\n        warn(\n          (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n          this\n        );\n      }\n    }\n    return baseObj\n  }\n\n  // helper to dynamically append modifier runtime markers to event names.\n  // ensure only append when value is already string, otherwise it will be cast\n  // to string and cause the type check to miss.\n  function prependModifier (value, symbol) {\n    return typeof value === 'string' ? symbol + value : value\n  }\n\n  /*  */\n\n  function installRenderHelpers (target) {\n    target._o = markOnce;\n    target._n = toNumber;\n    target._s = toString;\n    target._l = renderList;\n    target._t = renderSlot;\n    target._q = looseEqual;\n    target._i = looseIndexOf;\n    target._m = renderStatic;\n    target._f = resolveFilter;\n    target._k = checkKeyCodes;\n    target._b = bindObjectProps;\n    target._v = createTextVNode;\n    target._e = createEmptyVNode;\n    target._u = resolveScopedSlots;\n    target._g = bindObjectListeners;\n    target._d = bindDynamicKeys;\n    target._p = prependModifier;\n  }\n\n  /*  */\n\n  function FunctionalRenderContext (\n    data,\n    props,\n    children,\n    parent,\n    Ctor\n  ) {\n    var this$1 = this;\n\n    var options = Ctor.options;\n    // ensure the createElement function in functional components\n    // gets a unique context - this is necessary for correct named slot check\n    var contextVm;\n    if (hasOwn(parent, '_uid')) {\n      contextVm = Object.create(parent);\n      // $flow-disable-line\n      contextVm._original = parent;\n    } else {\n      // the context vm passed in is a functional context as well.\n      // in this case we want to make sure we are able to get a hold to the\n      // real context instance.\n      contextVm = parent;\n      // $flow-disable-line\n      parent = parent._original;\n    }\n    var isCompiled = isTrue(options._compiled);\n    var needNormalization = !isCompiled;\n\n    this.data = data;\n    this.props = props;\n    this.children = children;\n    this.parent = parent;\n    this.listeners = data.on || emptyObject;\n    this.injections = resolveInject(options.inject, parent);\n    this.slots = function () {\n      if (!this$1.$slots) {\n        normalizeScopedSlots(\n          data.scopedSlots,\n          this$1.$slots = resolveSlots(children, parent)\n        );\n      }\n      return this$1.$slots\n    };\n\n    Object.defineProperty(this, 'scopedSlots', ({\n      enumerable: true,\n      get: function get () {\n        return normalizeScopedSlots(data.scopedSlots, this.slots())\n      }\n    }));\n\n    // support for compiled functional template\n    if (isCompiled) {\n      // exposing $options for renderStatic()\n      this.$options = options;\n      // pre-resolve slots for renderSlot()\n      this.$slots = this.slots();\n      this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n    }\n\n    if (options._scopeId) {\n      this._c = function (a, b, c, d) {\n        var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n        if (vnode && !Array.isArray(vnode)) {\n          vnode.fnScopeId = options._scopeId;\n          vnode.fnContext = parent;\n        }\n        return vnode\n      };\n    } else {\n      this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n    }\n  }\n\n  installRenderHelpers(FunctionalRenderContext.prototype);\n\n  function createFunctionalComponent (\n    Ctor,\n    propsData,\n    data,\n    contextVm,\n    children\n  ) {\n    var options = Ctor.options;\n    var props = {};\n    var propOptions = options.props;\n    if (isDef(propOptions)) {\n      for (var key in propOptions) {\n        props[key] = validateProp(key, propOptions, propsData || emptyObject);\n      }\n    } else {\n      if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n      if (isDef(data.props)) { mergeProps(props, data.props); }\n    }\n\n    var renderContext = new FunctionalRenderContext(\n      data,\n      props,\n      children,\n      contextVm,\n      Ctor\n    );\n\n    var vnode = options.render.call(null, renderContext._c, renderContext);\n\n    if (vnode instanceof VNode) {\n      return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n    } else if (Array.isArray(vnode)) {\n      var vnodes = normalizeChildren(vnode) || [];\n      var res = new Array(vnodes.length);\n      for (var i = 0; i < vnodes.length; i++) {\n        res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n      }\n      return res\n    }\n  }\n\n  function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n    // #7817 clone node before setting fnContext, otherwise if the node is reused\n    // (e.g. it was from a cached normal slot) the fnContext causes named slots\n    // that should not be matched to match.\n    var clone = cloneVNode(vnode);\n    clone.fnContext = contextVm;\n    clone.fnOptions = options;\n    {\n      (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n    }\n    if (data.slot) {\n      (clone.data || (clone.data = {})).slot = data.slot;\n    }\n    return clone\n  }\n\n  function mergeProps (to, from) {\n    for (var key in from) {\n      to[camelize(key)] = from[key];\n    }\n  }\n\n  /*  */\n\n  /*  */\n\n  /*  */\n\n  /*  */\n\n  // inline hooks to be invoked on component VNodes during patch\n  var componentVNodeHooks = {\n    init: function init (vnode, hydrating) {\n      if (\n        vnode.componentInstance &&\n        !vnode.componentInstance._isDestroyed &&\n        vnode.data.keepAlive\n      ) {\n        // kept-alive components, treat as a patch\n        var mountedNode = vnode; // work around flow\n        componentVNodeHooks.prepatch(mountedNode, mountedNode);\n      } else {\n        var child = vnode.componentInstance = createComponentInstanceForVnode(\n          vnode,\n          activeInstance\n        );\n        child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n      }\n    },\n\n    prepatch: function prepatch (oldVnode, vnode) {\n      var options = vnode.componentOptions;\n      var child = vnode.componentInstance = oldVnode.componentInstance;\n      updateChildComponent(\n        child,\n        options.propsData, // updated props\n        options.listeners, // updated listeners\n        vnode, // new parent vnode\n        options.children // new children\n      );\n    },\n\n    insert: function insert (vnode) {\n      var context = vnode.context;\n      var componentInstance = vnode.componentInstance;\n      if (!componentInstance._isMounted) {\n        componentInstance._isMounted = true;\n        callHook(componentInstance, 'mounted');\n      }\n      if (vnode.data.keepAlive) {\n        if (context._isMounted) {\n          // vue-router#1212\n          // During updates, a kept-alive component's child components may\n          // change, so directly walking the tree here may call activated hooks\n          // on incorrect children. Instead we push them into a queue which will\n          // be processed after the whole patch process ended.\n          queueActivatedComponent(componentInstance);\n        } else {\n          activateChildComponent(componentInstance, true /* direct */);\n        }\n      }\n    },\n\n    destroy: function destroy (vnode) {\n      var componentInstance = vnode.componentInstance;\n      if (!componentInstance._isDestroyed) {\n        if (!vnode.data.keepAlive) {\n          componentInstance.$destroy();\n        } else {\n          deactivateChildComponent(componentInstance, true /* direct */);\n        }\n      }\n    }\n  };\n\n  var hooksToMerge = Object.keys(componentVNodeHooks);\n\n  function createComponent (\n    Ctor,\n    data,\n    context,\n    children,\n    tag\n  ) {\n    if (isUndef(Ctor)) {\n      return\n    }\n\n    var baseCtor = context.$options._base;\n\n    // plain options object: turn it into a constructor\n    if (isObject(Ctor)) {\n      Ctor = baseCtor.extend(Ctor);\n    }\n\n    // if at this stage it's not a constructor or an async component factory,\n    // reject.\n    if (typeof Ctor !== 'function') {\n      {\n        warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n      }\n      return\n    }\n\n    // async component\n    var asyncFactory;\n    if (isUndef(Ctor.cid)) {\n      asyncFactory = Ctor;\n      Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n      if (Ctor === undefined) {\n        // return a placeholder node for async component, which is rendered\n        // as a comment node but preserves all the raw information for the node.\n        // the information will be used for async server-rendering and hydration.\n        return createAsyncPlaceholder(\n          asyncFactory,\n          data,\n          context,\n          children,\n          tag\n        )\n      }\n    }\n\n    data = data || {};\n\n    // resolve constructor options in case global mixins are applied after\n    // component constructor creation\n    resolveConstructorOptions(Ctor);\n\n    // transform component v-model data into props & events\n    if (isDef(data.model)) {\n      transformModel(Ctor.options, data);\n    }\n\n    // extract props\n    var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n    // functional component\n    if (isTrue(Ctor.options.functional)) {\n      return createFunctionalComponent(Ctor, propsData, data, context, children)\n    }\n\n    // extract listeners, since these needs to be treated as\n    // child component listeners instead of DOM listeners\n    var listeners = data.on;\n    // replace with listeners with .native modifier\n    // so it gets processed during parent component patch.\n    data.on = data.nativeOn;\n\n    if (isTrue(Ctor.options.abstract)) {\n      // abstract components do not keep anything\n      // other than props & listeners & slot\n\n      // work around flow\n      var slot = data.slot;\n      data = {};\n      if (slot) {\n        data.slot = slot;\n      }\n    }\n\n    // install component management hooks onto the placeholder node\n    installComponentHooks(data);\n\n    // return a placeholder vnode\n    var name = Ctor.options.name || tag;\n    var vnode = new VNode(\n      (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n      data, undefined, undefined, undefined, context,\n      { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n      asyncFactory\n    );\n\n    return vnode\n  }\n\n  function createComponentInstanceForVnode (\n    // we know it's MountedComponentVNode but flow doesn't\n    vnode,\n    // activeInstance in lifecycle state\n    parent\n  ) {\n    var options = {\n      _isComponent: true,\n      _parentVnode: vnode,\n      parent: parent\n    };\n    // check inline-template render functions\n    var inlineTemplate = vnode.data.inlineTemplate;\n    if (isDef(inlineTemplate)) {\n      options.render = inlineTemplate.render;\n      options.staticRenderFns = inlineTemplate.staticRenderFns;\n    }\n    return new vnode.componentOptions.Ctor(options)\n  }\n\n  function installComponentHooks (data) {\n    var hooks = data.hook || (data.hook = {});\n    for (var i = 0; i < hooksToMerge.length; i++) {\n      var key = hooksToMerge[i];\n      var existing = hooks[key];\n      var toMerge = componentVNodeHooks[key];\n      if (existing !== toMerge && !(existing && existing._merged)) {\n        hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n      }\n    }\n  }\n\n  function mergeHook$1 (f1, f2) {\n    var merged = function (a, b) {\n      // flow complains about extra args which is why we use any\n      f1(a, b);\n      f2(a, b);\n    };\n    merged._merged = true;\n    return merged\n  }\n\n  // transform component v-model info (value and callback) into\n  // prop and event handler respectively.\n  function transformModel (options, data) {\n    var prop = (options.model && options.model.prop) || 'value';\n    var event = (options.model && options.model.event) || 'input'\n    ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n    var on = data.on || (data.on = {});\n    var existing = on[event];\n    var callback = data.model.callback;\n    if (isDef(existing)) {\n      if (\n        Array.isArray(existing)\n          ? existing.indexOf(callback) === -1\n          : existing !== callback\n      ) {\n        on[event] = [callback].concat(existing);\n      }\n    } else {\n      on[event] = callback;\n    }\n  }\n\n  /*  */\n\n  var SIMPLE_NORMALIZE = 1;\n  var ALWAYS_NORMALIZE = 2;\n\n  // wrapper function for providing a more flexible interface\n  // without getting yelled at by flow\n  function createElement (\n    context,\n    tag,\n    data,\n    children,\n    normalizationType,\n    alwaysNormalize\n  ) {\n    if (Array.isArray(data) || isPrimitive(data)) {\n      normalizationType = children;\n      children = data;\n      data = undefined;\n    }\n    if (isTrue(alwaysNormalize)) {\n      normalizationType = ALWAYS_NORMALIZE;\n    }\n    return _createElement(context, tag, data, children, normalizationType)\n  }\n\n  function _createElement (\n    context,\n    tag,\n    data,\n    children,\n    normalizationType\n  ) {\n    if (isDef(data) && isDef((data).__ob__)) {\n      warn(\n        \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n        'Always create fresh vnode data objects in each render!',\n        context\n      );\n      return createEmptyVNode()\n    }\n    // object syntax in v-bind\n    if (isDef(data) && isDef(data.is)) {\n      tag = data.is;\n    }\n    if (!tag) {\n      // in case of component :is set to falsy value\n      return createEmptyVNode()\n    }\n    // warn against non-primitive key\n    if (isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n    ) {\n      {\n        warn(\n          'Avoid using non-primitive value as key, ' +\n          'use string/number value instead.',\n          context\n        );\n      }\n    }\n    // support single function children as default scoped slot\n    if (Array.isArray(children) &&\n      typeof children[0] === 'function'\n    ) {\n      data = data || {};\n      data.scopedSlots = { default: children[0] };\n      children.length = 0;\n    }\n    if (normalizationType === ALWAYS_NORMALIZE) {\n      children = normalizeChildren(children);\n    } else if (normalizationType === SIMPLE_NORMALIZE) {\n      children = simpleNormalizeChildren(children);\n    }\n    var vnode, ns;\n    if (typeof tag === 'string') {\n      var Ctor;\n      ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n      if (config.isReservedTag(tag)) {\n        // platform built-in elements\n        if (isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {\n          warn(\n            (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n            context\n          );\n        }\n        vnode = new VNode(\n          config.parsePlatformTagName(tag), data, children,\n          undefined, undefined, context\n        );\n      } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n        // component\n        vnode = createComponent(Ctor, data, context, children, tag);\n      } else {\n        // unknown or unlisted namespaced elements\n        // check at runtime because it may get assigned a namespace when its\n        // parent normalizes children\n        vnode = new VNode(\n          tag, data, children,\n          undefined, undefined, context\n        );\n      }\n    } else {\n      // direct component options / constructor\n      vnode = createComponent(tag, data, context, children);\n    }\n    if (Array.isArray(vnode)) {\n      return vnode\n    } else if (isDef(vnode)) {\n      if (isDef(ns)) { applyNS(vnode, ns); }\n      if (isDef(data)) { registerDeepBindings(data); }\n      return vnode\n    } else {\n      return createEmptyVNode()\n    }\n  }\n\n  function applyNS (vnode, ns, force) {\n    vnode.ns = ns;\n    if (vnode.tag === 'foreignObject') {\n      // use default namespace inside foreignObject\n      ns = undefined;\n      force = true;\n    }\n    if (isDef(vnode.children)) {\n      for (var i = 0, l = vnode.children.length; i < l; i++) {\n        var child = vnode.children[i];\n        if (isDef(child.tag) && (\n          isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n          applyNS(child, ns, force);\n        }\n      }\n    }\n  }\n\n  // ref #5318\n  // necessary to ensure parent re-render when deep bindings like :style and\n  // :class are used on slot nodes\n  function registerDeepBindings (data) {\n    if (isObject(data.style)) {\n      traverse(data.style);\n    }\n    if (isObject(data.class)) {\n      traverse(data.class);\n    }\n  }\n\n  /*  */\n\n  function initRender (vm) {\n    vm._vnode = null; // the root of the child tree\n    vm._staticTrees = null; // v-once cached trees\n    var options = vm.$options;\n    var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n    var renderContext = parentVnode && parentVnode.context;\n    vm.$slots = resolveSlots(options._renderChildren, renderContext);\n    vm.$scopedSlots = emptyObject;\n    // bind the createElement fn to this instance\n    // so that we get proper render context inside it.\n    // args order: tag, data, children, normalizationType, alwaysNormalize\n    // internal version is used by render functions compiled from templates\n    vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n    // normalization is always applied for the public version, used in\n    // user-written render functions.\n    vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n    // $attrs & $listeners are exposed for easier HOC creation.\n    // they need to be reactive so that HOCs using them are always updated\n    var parentData = parentVnode && parentVnode.data;\n\n    /* istanbul ignore else */\n    {\n      defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n        !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n      }, true);\n      defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n        !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n      }, true);\n    }\n  }\n\n  var currentRenderingInstance = null;\n\n  function renderMixin (Vue) {\n    // install runtime convenience helpers\n    installRenderHelpers(Vue.prototype);\n\n    Vue.prototype.$nextTick = function (fn) {\n      return nextTick(fn, this)\n    };\n\n    Vue.prototype._render = function () {\n      var vm = this;\n      var ref = vm.$options;\n      var render = ref.render;\n      var _parentVnode = ref._parentVnode;\n\n      if (_parentVnode) {\n        vm.$scopedSlots = normalizeScopedSlots(\n          _parentVnode.data.scopedSlots,\n          vm.$slots,\n          vm.$scopedSlots\n        );\n      }\n\n      // set parent vnode. this allows render functions to have access\n      // to the data on the placeholder node.\n      vm.$vnode = _parentVnode;\n      // render self\n      var vnode;\n      try {\n        // There's no need to maintain a stack because all render fns are called\n        // separately from one another. Nested component's render fns are called\n        // when parent component is patched.\n        currentRenderingInstance = vm;\n        vnode = render.call(vm._renderProxy, vm.$createElement);\n      } catch (e) {\n        handleError(e, vm, \"render\");\n        // return error render result,\n        // or previous vnode to prevent render error causing blank component\n        /* istanbul ignore else */\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } finally {\n        currentRenderingInstance = null;\n      }\n      // if the returned array contains only a single node, allow it\n      if (Array.isArray(vnode) && vnode.length === 1) {\n        vnode = vnode[0];\n      }\n      // return empty vnode in case the render function errored out\n      if (!(vnode instanceof VNode)) {\n        if (Array.isArray(vnode)) {\n          warn(\n            'Multiple root nodes returned from render function. Render function ' +\n            'should return a single root node.',\n            vm\n          );\n        }\n        vnode = createEmptyVNode();\n      }\n      // set parent\n      vnode.parent = _parentVnode;\n      return vnode\n    };\n  }\n\n  /*  */\n\n  function ensureCtor (comp, base) {\n    if (\n      comp.__esModule ||\n      (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n    ) {\n      comp = comp.default;\n    }\n    return isObject(comp)\n      ? base.extend(comp)\n      : comp\n  }\n\n  function createAsyncPlaceholder (\n    factory,\n    data,\n    context,\n    children,\n    tag\n  ) {\n    var node = createEmptyVNode();\n    node.asyncFactory = factory;\n    node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n    return node\n  }\n\n  function resolveAsyncComponent (\n    factory,\n    baseCtor\n  ) {\n    if (isTrue(factory.error) && isDef(factory.errorComp)) {\n      return factory.errorComp\n    }\n\n    if (isDef(factory.resolved)) {\n      return factory.resolved\n    }\n\n    var owner = currentRenderingInstance;\n    if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n      // already pending\n      factory.owners.push(owner);\n    }\n\n    if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n      return factory.loadingComp\n    }\n\n    if (owner && !isDef(factory.owners)) {\n      var owners = factory.owners = [owner];\n      var sync = true;\n      var timerLoading = null;\n      var timerTimeout = null\n\n      ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n      var forceRender = function (renderCompleted) {\n        for (var i = 0, l = owners.length; i < l; i++) {\n          (owners[i]).$forceUpdate();\n        }\n\n        if (renderCompleted) {\n          owners.length = 0;\n          if (timerLoading !== null) {\n            clearTimeout(timerLoading);\n            timerLoading = null;\n          }\n          if (timerTimeout !== null) {\n            clearTimeout(timerTimeout);\n            timerTimeout = null;\n          }\n        }\n      };\n\n      var resolve = once(function (res) {\n        // cache resolved\n        factory.resolved = ensureCtor(res, baseCtor);\n        // invoke callbacks only if this is not a synchronous resolve\n        // (async resolves are shimmed as synchronous during SSR)\n        if (!sync) {\n          forceRender(true);\n        } else {\n          owners.length = 0;\n        }\n      });\n\n      var reject = once(function (reason) {\n        warn(\n          \"Failed to resolve async component: \" + (String(factory)) +\n          (reason ? (\"\\nReason: \" + reason) : '')\n        );\n        if (isDef(factory.errorComp)) {\n          factory.error = true;\n          forceRender(true);\n        }\n      });\n\n      var res = factory(resolve, reject);\n\n      if (isObject(res)) {\n        if (isPromise(res)) {\n          // () => Promise\n          if (isUndef(factory.resolved)) {\n            res.then(resolve, reject);\n          }\n        } else if (isPromise(res.component)) {\n          res.component.then(resolve, reject);\n\n          if (isDef(res.error)) {\n            factory.errorComp = ensureCtor(res.error, baseCtor);\n          }\n\n          if (isDef(res.loading)) {\n            factory.loadingComp = ensureCtor(res.loading, baseCtor);\n            if (res.delay === 0) {\n              factory.loading = true;\n            } else {\n              timerLoading = setTimeout(function () {\n                timerLoading = null;\n                if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                  factory.loading = true;\n                  forceRender(false);\n                }\n              }, res.delay || 200);\n            }\n          }\n\n          if (isDef(res.timeout)) {\n            timerTimeout = setTimeout(function () {\n              timerTimeout = null;\n              if (isUndef(factory.resolved)) {\n                reject(\n                  \"timeout (\" + (res.timeout) + \"ms)\"\n                );\n              }\n            }, res.timeout);\n          }\n        }\n      }\n\n      sync = false;\n      // return in case resolved synchronously\n      return factory.loading\n        ? factory.loadingComp\n        : factory.resolved\n    }\n  }\n\n  /*  */\n\n  function getFirstComponentChild (children) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; i++) {\n        var c = children[i];\n        if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n          return c\n        }\n      }\n    }\n  }\n\n  /*  */\n\n  /*  */\n\n  function initEvents (vm) {\n    vm._events = Object.create(null);\n    vm._hasHookEvent = false;\n    // init parent attached events\n    var listeners = vm.$options._parentListeners;\n    if (listeners) {\n      updateComponentListeners(vm, listeners);\n    }\n  }\n\n  var target;\n\n  function add (event, fn) {\n    target.$on(event, fn);\n  }\n\n  function remove$1 (event, fn) {\n    target.$off(event, fn);\n  }\n\n  function createOnceHandler (event, fn) {\n    var _target = target;\n    return function onceHandler () {\n      var res = fn.apply(null, arguments);\n      if (res !== null) {\n        _target.$off(event, onceHandler);\n      }\n    }\n  }\n\n  function updateComponentListeners (\n    vm,\n    listeners,\n    oldListeners\n  ) {\n    target = vm;\n    updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n    target = undefined;\n  }\n\n  function eventsMixin (Vue) {\n    var hookRE = /^hook:/;\n    Vue.prototype.$on = function (event, fn) {\n      var vm = this;\n      if (Array.isArray(event)) {\n        for (var i = 0, l = event.length; i < l; i++) {\n          vm.$on(event[i], fn);\n        }\n      } else {\n        (vm._events[event] || (vm._events[event] = [])).push(fn);\n        // optimize hook:event cost by using a boolean flag marked at registration\n        // instead of a hash lookup\n        if (hookRE.test(event)) {\n          vm._hasHookEvent = true;\n        }\n      }\n      return vm\n    };\n\n    Vue.prototype.$once = function (event, fn) {\n      var vm = this;\n      function on () {\n        vm.$off(event, on);\n        fn.apply(vm, arguments);\n      }\n      on.fn = fn;\n      vm.$on(event, on);\n      return vm\n    };\n\n    Vue.prototype.$off = function (event, fn) {\n      var vm = this;\n      // all\n      if (!arguments.length) {\n        vm._events = Object.create(null);\n        return vm\n      }\n      // array of events\n      if (Array.isArray(event)) {\n        for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n          vm.$off(event[i$1], fn);\n        }\n        return vm\n      }\n      // specific event\n      var cbs = vm._events[event];\n      if (!cbs) {\n        return vm\n      }\n      if (!fn) {\n        vm._events[event] = null;\n        return vm\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i, 1);\n          break\n        }\n      }\n      return vm\n    };\n\n    Vue.prototype.$emit = function (event) {\n      var vm = this;\n      {\n        var lowerCaseEvent = event.toLowerCase();\n        if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n          tip(\n            \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n            (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and you cannot use \" +\n            \"v-on to listen to camelCase events when using in-DOM templates. \" +\n            \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n          );\n        }\n      }\n      var cbs = vm._events[event];\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        var args = toArray(arguments, 1);\n        var info = \"event handler for \\\"\" + event + \"\\\"\";\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n        }\n      }\n      return vm\n    };\n  }\n\n  /*  */\n\n  var activeInstance = null;\n  var isUpdatingChildComponent = false;\n\n  function setActiveInstance(vm) {\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    return function () {\n      activeInstance = prevActiveInstance;\n    }\n  }\n\n  function initLifecycle (vm) {\n    var options = vm.$options;\n\n    // locate first non-abstract parent\n    var parent = options.parent;\n    if (parent && !options.abstract) {\n      while (parent.$options.abstract && parent.$parent) {\n        parent = parent.$parent;\n      }\n      parent.$children.push(vm);\n    }\n\n    vm.$parent = parent;\n    vm.$root = parent ? parent.$root : vm;\n\n    vm.$children = [];\n    vm.$refs = {};\n\n    vm._watcher = null;\n    vm._inactive = null;\n    vm._directInactive = false;\n    vm._isMounted = false;\n    vm._isDestroyed = false;\n    vm._isBeingDestroyed = false;\n  }\n\n  function lifecycleMixin (Vue) {\n    Vue.prototype._update = function (vnode, hydrating) {\n      var vm = this;\n      var prevEl = vm.$el;\n      var prevVnode = vm._vnode;\n      var restoreActiveInstance = setActiveInstance(vm);\n      vm._vnode = vnode;\n      // Vue.prototype.__patch__ is injected in entry points\n      // based on the rendering backend used.\n      if (!prevVnode) {\n        // initial render\n        vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n      } else {\n        // updates\n        vm.$el = vm.__patch__(prevVnode, vnode);\n      }\n      restoreActiveInstance();\n      // update __vue__ reference\n      if (prevEl) {\n        prevEl.__vue__ = null;\n      }\n      if (vm.$el) {\n        vm.$el.__vue__ = vm;\n      }\n      // if parent is an HOC, update its $el as well\n      if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n        vm.$parent.$el = vm.$el;\n      }\n      // updated hook is called by the scheduler to ensure that children are\n      // updated in a parent's updated hook.\n    };\n\n    Vue.prototype.$forceUpdate = function () {\n      var vm = this;\n      if (vm._watcher) {\n        vm._watcher.update();\n      }\n    };\n\n    Vue.prototype.$destroy = function () {\n      var vm = this;\n      if (vm._isBeingDestroyed) {\n        return\n      }\n      callHook(vm, 'beforeDestroy');\n      vm._isBeingDestroyed = true;\n      // remove self from parent\n      var parent = vm.$parent;\n      if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n        remove(parent.$children, vm);\n      }\n      // teardown watchers\n      if (vm._watcher) {\n        vm._watcher.teardown();\n      }\n      var i = vm._watchers.length;\n      while (i--) {\n        vm._watchers[i].teardown();\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (vm._data.__ob__) {\n        vm._data.__ob__.vmCount--;\n      }\n      // call the last hook...\n      vm._isDestroyed = true;\n      // invoke destroy hooks on current rendered tree\n      vm.__patch__(vm._vnode, null);\n      // fire destroyed hook\n      callHook(vm, 'destroyed');\n      // turn off all instance listeners.\n      vm.$off();\n      // remove __vue__ reference\n      if (vm.$el) {\n        vm.$el.__vue__ = null;\n      }\n      // release circular reference (#6759)\n      if (vm.$vnode) {\n        vm.$vnode.parent = null;\n      }\n    };\n  }\n\n  function mountComponent (\n    vm,\n    el,\n    hydrating\n  ) {\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      {\n        /* istanbul ignore if */\n        if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n          vm.$options.el || el) {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'compiler is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n\n    var updateComponent;\n    /* istanbul ignore if */\n    if (config.performance && mark) {\n      updateComponent = function () {\n        var name = vm._name;\n        var id = vm._uid;\n        var startTag = \"vue-perf-start:\" + id;\n        var endTag = \"vue-perf-end:\" + id;\n\n        mark(startTag);\n        var vnode = vm._render();\n        mark(endTag);\n        measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n        mark(startTag);\n        vm._update(vnode, hydrating);\n        mark(endTag);\n        measure((\"vue \" + name + \" patch\"), startTag, endTag);\n      };\n    } else {\n      updateComponent = function () {\n        vm._update(vm._render(), hydrating);\n      };\n    }\n\n    // we set this to vm._watcher inside the watcher's constructor\n    // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n    // component's mounted hook), which relies on vm._watcher being already defined\n    new Watcher(vm, updateComponent, noop, {\n      before: function before () {\n        if (vm._isMounted && !vm._isDestroyed) {\n          callHook(vm, 'beforeUpdate');\n        }\n      }\n    }, true /* isRenderWatcher */);\n    hydrating = false;\n\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  }\n\n  function updateChildComponent (\n    vm,\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    {\n      isUpdatingChildComponent = true;\n    }\n\n    // determine whether component has slot children\n    // we need to do this before overwriting $options._renderChildren.\n\n    // check if there are dynamic scopedSlots (hand-written or compiled but with\n    // dynamic slot names). Static scoped slots compiled from template has the\n    // \"$stable\" marker.\n    var newScopedSlots = parentVnode.data.scopedSlots;\n    var oldScopedSlots = vm.$scopedSlots;\n    var hasDynamicScopedSlot = !!(\n      (newScopedSlots && !newScopedSlots.$stable) ||\n      (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n      (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||\n      (!newScopedSlots && vm.$scopedSlots.$key)\n    );\n\n    // Any static slot children from the parent may have changed during parent's\n    // update. Dynamic scoped slots may also have changed. In such cases, a forced\n    // update is necessary to ensure correctness.\n    var needsForceUpdate = !!(\n      renderChildren ||               // has new static slots\n      vm.$options._renderChildren ||  // has old static slots\n      hasDynamicScopedSlot\n    );\n\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n\n    // update $attrs and $listeners hash\n    // these are also reactive so they may trigger child update if the child\n    // used them during render\n    vm.$attrs = parentVnode.data.attrs || emptyObject;\n    vm.$listeners = listeners || emptyObject;\n\n    // update props\n    if (propsData && vm.$options.props) {\n      toggleObserving(false);\n      var props = vm._props;\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        var propOptions = vm.$options.props; // wtf flow?\n        props[key] = validateProp(key, propOptions, propsData, vm);\n      }\n      toggleObserving(true);\n      // keep a copy of raw propsData\n      vm.$options.propsData = propsData;\n    }\n\n    // update listeners\n    listeners = listeners || emptyObject;\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n\n    // resolve slots + force update if has children\n    if (needsForceUpdate) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n\n    {\n      isUpdatingChildComponent = false;\n    }\n  }\n\n  function isInInactiveTree (vm) {\n    while (vm && (vm = vm.$parent)) {\n      if (vm._inactive) { return true }\n    }\n    return false\n  }\n\n  function activateChildComponent (vm, direct) {\n    if (direct) {\n      vm._directInactive = false;\n      if (isInInactiveTree(vm)) {\n        return\n      }\n    } else if (vm._directInactive) {\n      return\n    }\n    if (vm._inactive || vm._inactive === null) {\n      vm._inactive = false;\n      for (var i = 0; i < vm.$children.length; i++) {\n        activateChildComponent(vm.$children[i]);\n      }\n      callHook(vm, 'activated');\n    }\n  }\n\n  function deactivateChildComponent (vm, direct) {\n    if (direct) {\n      vm._directInactive = true;\n      if (isInInactiveTree(vm)) {\n        return\n      }\n    }\n    if (!vm._inactive) {\n      vm._inactive = true;\n      for (var i = 0; i < vm.$children.length; i++) {\n        deactivateChildComponent(vm.$children[i]);\n      }\n      callHook(vm, 'deactivated');\n    }\n  }\n\n  function callHook (vm, hook) {\n    // #7573 disable dep collection when invoking lifecycle hooks\n    pushTarget();\n    var handlers = vm.$options[hook];\n    var info = hook + \" hook\";\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n      }\n    }\n    if (vm._hasHookEvent) {\n      vm.$emit('hook:' + hook);\n    }\n    popTarget();\n  }\n\n  /*  */\n\n  var MAX_UPDATE_COUNT = 100;\n\n  var queue = [];\n  var activatedChildren = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n  var flushing = false;\n  var index = 0;\n\n  /**\n   * Reset the scheduler's state.\n   */\n  function resetSchedulerState () {\n    index = queue.length = activatedChildren.length = 0;\n    has = {};\n    {\n      circular = {};\n    }\n    waiting = flushing = false;\n  }\n\n  // Async edge case #6566 requires saving the timestamp when event listeners are\n  // attached. However, calling performance.now() has a perf overhead especially\n  // if the page has thousands of event listeners. Instead, we take a timestamp\n  // every time the scheduler flushes and use that for all event listeners\n  // attached during that flush.\n  var currentFlushTimestamp = 0;\n\n  // Async edge case fix requires storing an event listener's attach timestamp.\n  var getNow = Date.now;\n\n  // Determine what event timestamp the browser is using. Annoyingly, the\n  // timestamp can either be hi-res (relative to page load) or low-res\n  // (relative to UNIX epoch), so in order to compare time we have to use the\n  // same timestamp type when saving the flush timestamp.\n  // All IE versions use low-res event timestamps, and have problematic clock\n  // implementations (#9632)\n  if (inBrowser && !isIE) {\n    var performance = window.performance;\n    if (\n      performance &&\n      typeof performance.now === 'function' &&\n      getNow() > document.createEvent('Event').timeStamp\n    ) {\n      // if the event timestamp, although evaluated AFTER the Date.now(), is\n      // smaller than it, it means the event is using a hi-res timestamp,\n      // and we need to use the hi-res version for event listener timestamps as\n      // well.\n      getNow = function () { return performance.now(); };\n    }\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n  function flushSchedulerQueue () {\n    currentFlushTimestamp = getNow();\n    flushing = true;\n    var watcher, id;\n\n    // Sort queue before flush.\n    // This ensures that:\n    // 1. Components are updated from parent to child. (because parent is always\n    //    created before the child)\n    // 2. A component's user watchers are run before its render watcher (because\n    //    user watchers are created before the render watcher)\n    // 3. If a component is destroyed during a parent component's watcher run,\n    //    its watchers can be skipped.\n    queue.sort(function (a, b) { return a.id - b.id; });\n\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (index = 0; index < queue.length; index++) {\n      watcher = queue[index];\n      if (watcher.before) {\n        watcher.before();\n      }\n      id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if (has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > MAX_UPDATE_COUNT) {\n          warn(\n            'You may have an infinite update loop ' + (\n              watcher.user\n                ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n                : \"in a component render function.\"\n            ),\n            watcher.vm\n          );\n          break\n        }\n      }\n    }\n\n    // keep copies of post queues before resetting state\n    var activatedQueue = activatedChildren.slice();\n    var updatedQueue = queue.slice();\n\n    resetSchedulerState();\n\n    // call component updated and activated hooks\n    callActivatedHooks(activatedQueue);\n    callUpdatedHooks(updatedQueue);\n\n    // devtool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n  }\n\n  function callUpdatedHooks (queue) {\n    var i = queue.length;\n    while (i--) {\n      var watcher = queue[i];\n      var vm = watcher.vm;\n      if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'updated');\n      }\n    }\n  }\n\n  /**\n   * Queue a kept-alive component that was activated during patch.\n   * The queue will be processed after the entire tree has been patched.\n   */\n  function queueActivatedComponent (vm) {\n    // setting _inactive to false here so that a render function can\n    // rely on checking whether it's in an inactive tree (e.g. router-view)\n    vm._inactive = false;\n    activatedChildren.push(vm);\n  }\n\n  function callActivatedHooks (queue) {\n    for (var i = 0; i < queue.length; i++) {\n      queue[i]._inactive = true;\n      activateChildComponent(queue[i], true /* true */);\n    }\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   */\n  function queueWatcher (watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      has[id] = true;\n      if (!flushing) {\n        queue.push(watcher);\n      } else {\n        // if already flushing, splice the watcher based on its id\n        // if already past its id, it will be run next immediately.\n        var i = queue.length - 1;\n        while (i > index && queue[i].id > watcher.id) {\n          i--;\n        }\n        queue.splice(i + 1, 0, watcher);\n      }\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n\n        if (!config.async) {\n          flushSchedulerQueue();\n          return\n        }\n        nextTick(flushSchedulerQueue);\n      }\n    }\n  }\n\n  /*  */\n\n\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   */\n  var Watcher = function Watcher (\n    vm,\n    expOrFn,\n    cb,\n    options,\n    isRenderWatcher\n  ) {\n    this.vm = vm;\n    if (isRenderWatcher) {\n      vm._watcher = this;\n    }\n    vm._watchers.push(this);\n    // options\n    if (options) {\n      this.deep = !!options.deep;\n      this.user = !!options.user;\n      this.lazy = !!options.lazy;\n      this.sync = !!options.sync;\n      this.before = options.before;\n    } else {\n      this.deep = this.user = this.lazy = this.sync = false;\n    }\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = [];\n    this.newDeps = [];\n    this.depIds = new _Set();\n    this.newDepIds = new _Set();\n    this.expression = expOrFn.toString();\n    // parse expression for getter\n    if (typeof expOrFn === 'function') {\n      this.getter = expOrFn;\n    } else {\n      this.getter = parsePath(expOrFn);\n      if (!this.getter) {\n        this.getter = noop;\n        warn(\n          \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n          'Watcher only accepts simple dot-delimited paths. ' +\n          'For full control, use a function instead.',\n          vm\n        );\n      }\n    }\n    this.value = this.lazy\n      ? undefined\n      : this.get();\n  };\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n  Watcher.prototype.get = function get () {\n    pushTarget(this);\n    var value;\n    var vm = this.vm;\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      if (this.user) {\n        handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n      } else {\n        throw e\n      }\n    } finally {\n      // \"touch\" every property so they are all tracked as\n      // dependencies for deep watching\n      if (this.deep) {\n        traverse(value);\n      }\n      popTarget();\n      this.cleanupDeps();\n    }\n    return value\n  };\n\n  /**\n   * Add a dependency to this directive.\n   */\n  Watcher.prototype.addDep = function addDep (dep) {\n    var id = dep.id;\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id);\n      this.newDeps.push(dep);\n      if (!this.depIds.has(id)) {\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n  Watcher.prototype.cleanupDeps = function cleanupDeps () {\n    var i = this.deps.length;\n    while (i--) {\n      var dep = this.deps[i];\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this);\n      }\n    }\n    var tmp = this.depIds;\n    this.depIds = this.newDepIds;\n    this.newDepIds = tmp;\n    this.newDepIds.clear();\n    tmp = this.deps;\n    this.deps = this.newDeps;\n    this.newDeps = tmp;\n    this.newDeps.length = 0;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   */\n  Watcher.prototype.update = function update () {\n    /* istanbul ignore else */\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync) {\n      this.run();\n    } else {\n      queueWatcher(this);\n    }\n  };\n\n  /**\n   * Scheduler job interface.\n   * Will be called by the scheduler.\n   */\n  Watcher.prototype.run = function run () {\n    if (this.active) {\n      var value = this.get();\n      if (\n        value !== this.value ||\n        // Deep watchers and watchers on Object/Arrays should fire even\n        // when the value is the same, because the value may\n        // have mutated.\n        isObject(value) ||\n        this.deep\n      ) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        if (this.user) {\n          var info = \"callback for watcher \\\"\" + (this.expression) + \"\\\"\";\n          invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n  Watcher.prototype.evaluate = function evaluate () {\n    this.value = this.get();\n    this.dirty = false;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n  Watcher.prototype.depend = function depend () {\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subscriber list.\n   */\n  Watcher.prototype.teardown = function teardown () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed.\n      if (!this.vm._isBeingDestroyed) {\n        remove(this.vm._watchers, this);\n      }\n      var i = this.deps.length;\n      while (i--) {\n        this.deps[i].removeSub(this);\n      }\n      this.active = false;\n    }\n  };\n\n  /*  */\n\n  var sharedPropertyDefinition = {\n    enumerable: true,\n    configurable: true,\n    get: noop,\n    set: noop\n  };\n\n  function proxy (target, sourceKey, key) {\n    sharedPropertyDefinition.get = function proxyGetter () {\n      return this[sourceKey][key]\n    };\n    sharedPropertyDefinition.set = function proxySetter (val) {\n      this[sourceKey][key] = val;\n    };\n    Object.defineProperty(target, key, sharedPropertyDefinition);\n  }\n\n  function initState (vm) {\n    vm._watchers = [];\n    var opts = vm.$options;\n    if (opts.props) { initProps(vm, opts.props); }\n    if (opts.methods) { initMethods(vm, opts.methods); }\n    if (opts.data) {\n      initData(vm);\n    } else {\n      observe(vm._data = {}, true /* asRootData */);\n    }\n    if (opts.computed) { initComputed(vm, opts.computed); }\n    if (opts.watch && opts.watch !== nativeWatch) {\n      initWatch(vm, opts.watch);\n    }\n  }\n\n  function initProps (vm, propsOptions) {\n    var propsData = vm.$options.propsData || {};\n    var props = vm._props = {};\n    // cache prop keys so that future props updates can iterate using Array\n    // instead of dynamic object key enumeration.\n    var keys = vm.$options._propKeys = [];\n    var isRoot = !vm.$parent;\n    // root instance props should be converted\n    if (!isRoot) {\n      toggleObserving(false);\n    }\n    var loop = function ( key ) {\n      keys.push(key);\n      var value = validateProp(key, propsOptions, propsData, vm);\n      /* istanbul ignore else */\n      {\n        var hyphenatedKey = hyphenate(key);\n        if (isReservedAttribute(hyphenatedKey) ||\n            config.isReservedAttr(hyphenatedKey)) {\n          warn(\n            (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n            vm\n          );\n        }\n        defineReactive$$1(props, key, value, function () {\n          if (!isRoot && !isUpdatingChildComponent) {\n            warn(\n              \"Avoid mutating a prop directly since the value will be \" +\n              \"overwritten whenever the parent component re-renders. \" +\n              \"Instead, use a data or computed property based on the prop's \" +\n              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n              vm\n            );\n          }\n        });\n      }\n      // static props are already proxied on the component's prototype\n      // during Vue.extend(). We only need to proxy props defined at\n      // instantiation here.\n      if (!(key in vm)) {\n        proxy(vm, \"_props\", key);\n      }\n    };\n\n    for (var key in propsOptions) loop( key );\n    toggleObserving(true);\n  }\n\n  function initData (vm) {\n    var data = vm.$options.data;\n    data = vm._data = typeof data === 'function'\n      ? getData(data, vm)\n      : data || {};\n    if (!isPlainObject(data)) {\n      data = {};\n      warn(\n        'data functions should return an object:\\n' +\n        'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n        vm\n      );\n    }\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var props = vm.$options.props;\n    var methods = vm.$options.methods;\n    var i = keys.length;\n    while (i--) {\n      var key = keys[i];\n      {\n        if (methods && hasOwn(methods, key)) {\n          warn(\n            (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n            vm\n          );\n        }\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n          \"Use prop default value instead.\",\n          vm\n        );\n      } else if (!isReserved(key)) {\n        proxy(vm, \"_data\", key);\n      }\n    }\n    // observe data\n    observe(data, true /* asRootData */);\n  }\n\n  function getData (data, vm) {\n    // #7573 disable dep collection when invoking data getters\n    pushTarget();\n    try {\n      return data.call(vm, vm)\n    } catch (e) {\n      handleError(e, vm, \"data()\");\n      return {}\n    } finally {\n      popTarget();\n    }\n  }\n\n  var computedWatcherOptions = { lazy: true };\n\n  function initComputed (vm, computed) {\n    // $flow-disable-line\n    var watchers = vm._computedWatchers = Object.create(null);\n    // computed properties are just getters during SSR\n    var isSSR = isServerRendering();\n\n    for (var key in computed) {\n      var userDef = computed[key];\n      var getter = typeof userDef === 'function' ? userDef : userDef.get;\n      if (getter == null) {\n        warn(\n          (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n      }\n\n      if (!isSSR) {\n        // create internal watcher for the computed property.\n        watchers[key] = new Watcher(\n          vm,\n          getter || noop,\n          noop,\n          computedWatcherOptions\n        );\n      }\n\n      // component-defined computed properties are already defined on the\n      // component prototype. We only need to define computed properties defined\n      // at instantiation here.\n      if (!(key in vm)) {\n        defineComputed(vm, key, userDef);\n      } else {\n        if (key in vm.$data) {\n          warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n        } else if (vm.$options.props && key in vm.$options.props) {\n          warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n        } else if (vm.$options.methods && key in vm.$options.methods) {\n          warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a method.\"), vm);\n        }\n      }\n    }\n  }\n\n  function defineComputed (\n    target,\n    key,\n    userDef\n  ) {\n    var shouldCache = !isServerRendering();\n    if (typeof userDef === 'function') {\n      sharedPropertyDefinition.get = shouldCache\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef);\n      sharedPropertyDefinition.set = noop;\n    } else {\n      sharedPropertyDefinition.get = userDef.get\n        ? shouldCache && userDef.cache !== false\n          ? createComputedGetter(key)\n          : createGetterInvoker(userDef.get)\n        : noop;\n      sharedPropertyDefinition.set = userDef.set || noop;\n    }\n    if (sharedPropertyDefinition.set === noop) {\n      sharedPropertyDefinition.set = function () {\n        warn(\n          (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n          this\n        );\n      };\n    }\n    Object.defineProperty(target, key, sharedPropertyDefinition);\n  }\n\n  function createComputedGetter (key) {\n    return function computedGetter () {\n      var watcher = this._computedWatchers && this._computedWatchers[key];\n      if (watcher) {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value\n      }\n    }\n  }\n\n  function createGetterInvoker(fn) {\n    return function computedGetter () {\n      return fn.call(this, this)\n    }\n  }\n\n  function initMethods (vm, methods) {\n    var props = vm.$options.props;\n    for (var key in methods) {\n      {\n        if (typeof methods[key] !== 'function') {\n          warn(\n            \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n            \"Did you reference the function correctly?\",\n            vm\n          );\n        }\n        if (props && hasOwn(props, key)) {\n          warn(\n            (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n            vm\n          );\n        }\n        if ((key in vm) && isReserved(key)) {\n          warn(\n            \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n            \"Avoid defining component methods that start with _ or $.\"\n          );\n        }\n      }\n      vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n    }\n  }\n\n  function initWatch (vm, watch) {\n    for (var key in watch) {\n      var handler = watch[key];\n      if (Array.isArray(handler)) {\n        for (var i = 0; i < handler.length; i++) {\n          createWatcher(vm, key, handler[i]);\n        }\n      } else {\n        createWatcher(vm, key, handler);\n      }\n    }\n  }\n\n  function createWatcher (\n    vm,\n    expOrFn,\n    handler,\n    options\n  ) {\n    if (isPlainObject(handler)) {\n      options = handler;\n      handler = handler.handler;\n    }\n    if (typeof handler === 'string') {\n      handler = vm[handler];\n    }\n    return vm.$watch(expOrFn, handler, options)\n  }\n\n  function stateMixin (Vue) {\n    // flow somehow has problems with directly declared definition object\n    // when using Object.defineProperty, so we have to procedurally build up\n    // the object here.\n    var dataDef = {};\n    dataDef.get = function () { return this._data };\n    var propsDef = {};\n    propsDef.get = function () { return this._props };\n    {\n      dataDef.set = function () {\n        warn(\n          'Avoid replacing instance root $data. ' +\n          'Use nested data properties instead.',\n          this\n        );\n      };\n      propsDef.set = function () {\n        warn(\"$props is readonly.\", this);\n      };\n    }\n    Object.defineProperty(Vue.prototype, '$data', dataDef);\n    Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n    Vue.prototype.$set = set;\n    Vue.prototype.$delete = del;\n\n    Vue.prototype.$watch = function (\n      expOrFn,\n      cb,\n      options\n    ) {\n      var vm = this;\n      if (isPlainObject(cb)) {\n        return createWatcher(vm, expOrFn, cb, options)\n      }\n      options = options || {};\n      options.user = true;\n      var watcher = new Watcher(vm, expOrFn, cb, options);\n      if (options.immediate) {\n        var info = \"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\";\n        pushTarget();\n        invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n        popTarget();\n      }\n      return function unwatchFn () {\n        watcher.teardown();\n      }\n    };\n  }\n\n  /*  */\n\n  var uid$3 = 0;\n\n  function initMixin (Vue) {\n    Vue.prototype._init = function (options) {\n      var vm = this;\n      // a uid\n      vm._uid = uid$3++;\n\n      var startTag, endTag;\n      /* istanbul ignore if */\n      if (config.performance && mark) {\n        startTag = \"vue-perf-start:\" + (vm._uid);\n        endTag = \"vue-perf-end:\" + (vm._uid);\n        mark(startTag);\n      }\n\n      // a flag to avoid this being observed\n      vm._isVue = true;\n      // merge options\n      if (options && options._isComponent) {\n        // optimize internal component instantiation\n        // since dynamic options merging is pretty slow, and none of the\n        // internal component options needs special treatment.\n        initInternalComponent(vm, options);\n      } else {\n        vm.$options = mergeOptions(\n          resolveConstructorOptions(vm.constructor),\n          options || {},\n          vm\n        );\n      }\n      /* istanbul ignore else */\n      {\n        initProxy(vm);\n      }\n      // expose real self\n      vm._self = vm;\n      initLifecycle(vm);\n      initEvents(vm);\n      initRender(vm);\n      callHook(vm, 'beforeCreate');\n      initInjections(vm); // resolve injections before data/props\n      initState(vm);\n      initProvide(vm); // resolve provide after data/props\n      callHook(vm, 'created');\n\n      /* istanbul ignore if */\n      if (config.performance && mark) {\n        vm._name = formatComponentName(vm, false);\n        mark(endTag);\n        measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n      }\n\n      if (vm.$options.el) {\n        vm.$mount(vm.$options.el);\n      }\n    };\n  }\n\n  function initInternalComponent (vm, options) {\n    var opts = vm.$options = Object.create(vm.constructor.options);\n    // doing this because it's faster than dynamic enumeration.\n    var parentVnode = options._parentVnode;\n    opts.parent = options.parent;\n    opts._parentVnode = parentVnode;\n\n    var vnodeComponentOptions = parentVnode.componentOptions;\n    opts.propsData = vnodeComponentOptions.propsData;\n    opts._parentListeners = vnodeComponentOptions.listeners;\n    opts._renderChildren = vnodeComponentOptions.children;\n    opts._componentTag = vnodeComponentOptions.tag;\n\n    if (options.render) {\n      opts.render = options.render;\n      opts.staticRenderFns = options.staticRenderFns;\n    }\n  }\n\n  function resolveConstructorOptions (Ctor) {\n    var options = Ctor.options;\n    if (Ctor.super) {\n      var superOptions = resolveConstructorOptions(Ctor.super);\n      var cachedSuperOptions = Ctor.superOptions;\n      if (superOptions !== cachedSuperOptions) {\n        // super option changed,\n        // need to resolve new options.\n        Ctor.superOptions = superOptions;\n        // check if there are any late-modified/attached options (#4976)\n        var modifiedOptions = resolveModifiedOptions(Ctor);\n        // update base extend options\n        if (modifiedOptions) {\n          extend(Ctor.extendOptions, modifiedOptions);\n        }\n        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n        if (options.name) {\n          options.components[options.name] = Ctor;\n        }\n      }\n    }\n    return options\n  }\n\n  function resolveModifiedOptions (Ctor) {\n    var modified;\n    var latest = Ctor.options;\n    var sealed = Ctor.sealedOptions;\n    for (var key in latest) {\n      if (latest[key] !== sealed[key]) {\n        if (!modified) { modified = {}; }\n        modified[key] = latest[key];\n      }\n    }\n    return modified\n  }\n\n  function Vue (options) {\n    if (!(this instanceof Vue)\n    ) {\n      warn('Vue is a constructor and should be called with the `new` keyword');\n    }\n    this._init(options);\n  }\n\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  renderMixin(Vue);\n\n  /*  */\n\n  function initUse (Vue) {\n    Vue.use = function (plugin) {\n      var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n      if (installedPlugins.indexOf(plugin) > -1) {\n        return this\n      }\n\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else if (typeof plugin === 'function') {\n        plugin.apply(null, args);\n      }\n      installedPlugins.push(plugin);\n      return this\n    };\n  }\n\n  /*  */\n\n  function initMixin$1 (Vue) {\n    Vue.mixin = function (mixin) {\n      this.options = mergeOptions(this.options, mixin);\n      return this\n    };\n  }\n\n  /*  */\n\n  function initExtend (Vue) {\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     */\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var SuperId = Super.cid;\n      var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n      if (cachedCtors[SuperId]) {\n        return cachedCtors[SuperId]\n      }\n\n      var name = extendOptions.name || Super.options.name;\n      if (name) {\n        validateComponentName(name);\n      }\n\n      var Sub = function VueComponent (options) {\n        this._init(options);\n      };\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(\n        Super.options,\n        extendOptions\n      );\n      Sub['super'] = Super;\n\n      // For props and computed properties, we define the proxy getters on\n      // the Vue instances at extension time, on the extended prototype. This\n      // avoids Object.defineProperty calls for each instance created.\n      if (Sub.options.props) {\n        initProps$1(Sub);\n      }\n      if (Sub.options.computed) {\n        initComputed$1(Sub);\n      }\n\n      // allow further extension/mixin/plugin usage\n      Sub.extend = Super.extend;\n      Sub.mixin = Super.mixin;\n      Sub.use = Super.use;\n\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      ASSET_TYPES.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n\n      // keep a reference to the super options at extension time.\n      // later at instantiation we can check if Super's options have\n      // been updated.\n      Sub.superOptions = Super.options;\n      Sub.extendOptions = extendOptions;\n      Sub.sealedOptions = extend({}, Sub.options);\n\n      // cache constructor\n      cachedCtors[SuperId] = Sub;\n      return Sub\n    };\n  }\n\n  function initProps$1 (Comp) {\n    var props = Comp.options.props;\n    for (var key in props) {\n      proxy(Comp.prototype, \"_props\", key);\n    }\n  }\n\n  function initComputed$1 (Comp) {\n    var computed = Comp.options.computed;\n    for (var key in computed) {\n      defineComputed(Comp.prototype, key, computed[key]);\n    }\n  }\n\n  /*  */\n\n  function initAssetRegisters (Vue) {\n    /**\n     * Create asset registration methods.\n     */\n    ASSET_TYPES.forEach(function (type) {\n      Vue[type] = function (\n        id,\n        definition\n      ) {\n        if (!definition) {\n          return this.options[type + 's'][id]\n        } else {\n          /* istanbul ignore if */\n          if (type === 'component') {\n            validateComponentName(id);\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            definition.name = definition.name || id;\n            definition = this.options._base.extend(definition);\n          }\n          if (type === 'directive' && typeof definition === 'function') {\n            definition = { bind: definition, update: definition };\n          }\n          this.options[type + 's'][id] = definition;\n          return definition\n        }\n      };\n    });\n  }\n\n  /*  */\n\n\n\n\n\n  function getComponentName (opts) {\n    return opts && (opts.Ctor.options.name || opts.tag)\n  }\n\n  function matches (pattern, name) {\n    if (Array.isArray(pattern)) {\n      return pattern.indexOf(name) > -1\n    } else if (typeof pattern === 'string') {\n      return pattern.split(',').indexOf(name) > -1\n    } else if (isRegExp(pattern)) {\n      return pattern.test(name)\n    }\n    /* istanbul ignore next */\n    return false\n  }\n\n  function pruneCache (keepAliveInstance, filter) {\n    var cache = keepAliveInstance.cache;\n    var keys = keepAliveInstance.keys;\n    var _vnode = keepAliveInstance._vnode;\n    for (var key in cache) {\n      var entry = cache[key];\n      if (entry) {\n        var name = entry.name;\n        if (name && !filter(name)) {\n          pruneCacheEntry(cache, key, keys, _vnode);\n        }\n      }\n    }\n  }\n\n  function pruneCacheEntry (\n    cache,\n    key,\n    keys,\n    current\n  ) {\n    var entry = cache[key];\n    if (entry && (!current || entry.tag !== current.tag)) {\n      entry.componentInstance.$destroy();\n    }\n    cache[key] = null;\n    remove(keys, key);\n  }\n\n  var patternTypes = [String, RegExp, Array];\n\n  var KeepAlive = {\n    name: 'keep-alive',\n    abstract: true,\n\n    props: {\n      include: patternTypes,\n      exclude: patternTypes,\n      max: [String, Number]\n    },\n\n    methods: {\n      cacheVNode: function cacheVNode() {\n        var ref = this;\n        var cache = ref.cache;\n        var keys = ref.keys;\n        var vnodeToCache = ref.vnodeToCache;\n        var keyToCache = ref.keyToCache;\n        if (vnodeToCache) {\n          var tag = vnodeToCache.tag;\n          var componentInstance = vnodeToCache.componentInstance;\n          var componentOptions = vnodeToCache.componentOptions;\n          cache[keyToCache] = {\n            name: getComponentName(componentOptions),\n            tag: tag,\n            componentInstance: componentInstance,\n          };\n          keys.push(keyToCache);\n          // prune oldest entry\n          if (this.max && keys.length > parseInt(this.max)) {\n            pruneCacheEntry(cache, keys[0], keys, this._vnode);\n          }\n          this.vnodeToCache = null;\n        }\n      }\n    },\n\n    created: function created () {\n      this.cache = Object.create(null);\n      this.keys = [];\n    },\n\n    destroyed: function destroyed () {\n      for (var key in this.cache) {\n        pruneCacheEntry(this.cache, key, this.keys);\n      }\n    },\n\n    mounted: function mounted () {\n      var this$1 = this;\n\n      this.cacheVNode();\n      this.$watch('include', function (val) {\n        pruneCache(this$1, function (name) { return matches(val, name); });\n      });\n      this.$watch('exclude', function (val) {\n        pruneCache(this$1, function (name) { return !matches(val, name); });\n      });\n    },\n\n    updated: function updated () {\n      this.cacheVNode();\n    },\n\n    render: function render () {\n      var slot = this.$slots.default;\n      var vnode = getFirstComponentChild(slot);\n      var componentOptions = vnode && vnode.componentOptions;\n      if (componentOptions) {\n        // check pattern\n        var name = getComponentName(componentOptions);\n        var ref = this;\n        var include = ref.include;\n        var exclude = ref.exclude;\n        if (\n          // not included\n          (include && (!name || !matches(include, name))) ||\n          // excluded\n          (exclude && name && matches(exclude, name))\n        ) {\n          return vnode\n        }\n\n        var ref$1 = this;\n        var cache = ref$1.cache;\n        var keys = ref$1.keys;\n        var key = vnode.key == null\n          // same constructor may get registered as different local components\n          // so cid alone is not enough (#3269)\n          ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n          : vnode.key;\n        if (cache[key]) {\n          vnode.componentInstance = cache[key].componentInstance;\n          // make current key freshest\n          remove(keys, key);\n          keys.push(key);\n        } else {\n          // delay setting the cache until update\n          this.vnodeToCache = vnode;\n          this.keyToCache = key;\n        }\n\n        vnode.data.keepAlive = true;\n      }\n      return vnode || (slot && slot[0])\n    }\n  };\n\n  var builtInComponents = {\n    KeepAlive: KeepAlive\n  };\n\n  /*  */\n\n  function initGlobalAPI (Vue) {\n    // config\n    var configDef = {};\n    configDef.get = function () { return config; };\n    {\n      configDef.set = function () {\n        warn(\n          'Do not replace the Vue.config object, set individual fields instead.'\n        );\n      };\n    }\n    Object.defineProperty(Vue, 'config', configDef);\n\n    // exposed util methods.\n    // NOTE: these are not considered part of the public API - avoid relying on\n    // them unless you are aware of the risk.\n    Vue.util = {\n      warn: warn,\n      extend: extend,\n      mergeOptions: mergeOptions,\n      defineReactive: defineReactive$$1\n    };\n\n    Vue.set = set;\n    Vue.delete = del;\n    Vue.nextTick = nextTick;\n\n    // 2.6 explicit observable API\n    Vue.observable = function (obj) {\n      observe(obj);\n      return obj\n    };\n\n    Vue.options = Object.create(null);\n    ASSET_TYPES.forEach(function (type) {\n      Vue.options[type + 's'] = Object.create(null);\n    });\n\n    // this is used to identify the \"base\" constructor to extend all plain-object\n    // components with in Weex's multi-instance scenarios.\n    Vue.options._base = Vue;\n\n    extend(Vue.options.components, builtInComponents);\n\n    initUse(Vue);\n    initMixin$1(Vue);\n    initExtend(Vue);\n    initAssetRegisters(Vue);\n  }\n\n  initGlobalAPI(Vue);\n\n  Object.defineProperty(Vue.prototype, '$isServer', {\n    get: isServerRendering\n  });\n\n  Object.defineProperty(Vue.prototype, '$ssrContext', {\n    get: function get () {\n      /* istanbul ignore next */\n      return this.$vnode && this.$vnode.ssrContext\n    }\n  });\n\n  // expose FunctionalRenderContext for ssr runtime helper installation\n  Object.defineProperty(Vue, 'FunctionalRenderContext', {\n    value: FunctionalRenderContext\n  });\n\n  Vue.version = '2.6.14';\n\n  /*  */\n\n  // these are reserved for web because they are directly compiled away\n  // during template compilation\n  var isReservedAttr = makeMap('style,class');\n\n  // attributes that should be using props for binding\n  var acceptValue = makeMap('input,textarea,option,select,progress');\n  var mustUseProp = function (tag, type, attr) {\n    return (\n      (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n      (attr === 'selected' && tag === 'option') ||\n      (attr === 'checked' && tag === 'input') ||\n      (attr === 'muted' && tag === 'video')\n    )\n  };\n\n  var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\n  var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\n  var convertEnumeratedValue = function (key, value) {\n    return isFalsyAttrValue(value) || value === 'false'\n      ? 'false'\n      // allow arbitrary string value for contenteditable\n      : key === 'contenteditable' && isValidContentEditableValue(value)\n        ? value\n        : 'true'\n  };\n\n  var isBooleanAttr = makeMap(\n    'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n    'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n    'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n    'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n    'required,reversed,scoped,seamless,selected,sortable,' +\n    'truespeed,typemustmatch,visible'\n  );\n\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n\n  var isXlink = function (name) {\n    return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n  };\n\n  var getXlinkProp = function (name) {\n    return isXlink(name) ? name.slice(6, name.length) : ''\n  };\n\n  var isFalsyAttrValue = function (val) {\n    return val == null || val === false\n  };\n\n  /*  */\n\n  function genClassForVnode (vnode) {\n    var data = vnode.data;\n    var parentNode = vnode;\n    var childNode = vnode;\n    while (isDef(childNode.componentInstance)) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode && childNode.data) {\n        data = mergeClassData(childNode.data, data);\n      }\n    }\n    while (isDef(parentNode = parentNode.parent)) {\n      if (parentNode && parentNode.data) {\n        data = mergeClassData(data, parentNode.data);\n      }\n    }\n    return renderClass(data.staticClass, data.class)\n  }\n\n  function mergeClassData (child, parent) {\n    return {\n      staticClass: concat(child.staticClass, parent.staticClass),\n      class: isDef(child.class)\n        ? [child.class, parent.class]\n        : parent.class\n    }\n  }\n\n  function renderClass (\n    staticClass,\n    dynamicClass\n  ) {\n    if (isDef(staticClass) || isDef(dynamicClass)) {\n      return concat(staticClass, stringifyClass(dynamicClass))\n    }\n    /* istanbul ignore next */\n    return ''\n  }\n\n  function concat (a, b) {\n    return a ? b ? (a + ' ' + b) : a : (b || '')\n  }\n\n  function stringifyClass (value) {\n    if (Array.isArray(value)) {\n      return stringifyArray(value)\n    }\n    if (isObject(value)) {\n      return stringifyObject(value)\n    }\n    if (typeof value === 'string') {\n      return value\n    }\n    /* istanbul ignore next */\n    return ''\n  }\n\n  function stringifyArray (value) {\n    var res = '';\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n        if (res) { res += ' '; }\n        res += stringified;\n      }\n    }\n    return res\n  }\n\n  function stringifyObject (value) {\n    var res = '';\n    for (var key in value) {\n      if (value[key]) {\n        if (res) { res += ' '; }\n        res += key;\n      }\n    }\n    return res\n  }\n\n  /*  */\n\n  var namespaceMap = {\n    svg: 'http://www.w3.org/2000/svg',\n    math: 'http://www.w3.org/1998/Math/MathML'\n  };\n\n  var isHTMLTag = makeMap(\n    'html,body,base,head,link,meta,style,title,' +\n    'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n    'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n    'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n    's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n    'embed,object,param,source,canvas,script,noscript,del,ins,' +\n    'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n    'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n    'output,progress,select,textarea,' +\n    'details,dialog,menu,menuitem,summary,' +\n    'content,element,shadow,template,blockquote,iframe,tfoot'\n  );\n\n  // this map is intentionally selective, only covering SVG elements that may\n  // contain child elements.\n  var isSVG = makeMap(\n    'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n    'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n    'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n    true\n  );\n\n  var isPreTag = function (tag) { return tag === 'pre'; };\n\n  var isReservedTag = function (tag) {\n    return isHTMLTag(tag) || isSVG(tag)\n  };\n\n  function getTagNamespace (tag) {\n    if (isSVG(tag)) {\n      return 'svg'\n    }\n    // basic support for MathML\n    // note it doesn't support other MathML elements being component roots\n    if (tag === 'math') {\n      return 'math'\n    }\n  }\n\n  var unknownElementCache = Object.create(null);\n  function isUnknownElement (tag) {\n    /* istanbul ignore if */\n    if (!inBrowser) {\n      return true\n    }\n    if (isReservedTag(tag)) {\n      return false\n    }\n    tag = tag.toLowerCase();\n    /* istanbul ignore if */\n    if (unknownElementCache[tag] != null) {\n      return unknownElementCache[tag]\n    }\n    var el = document.createElement(tag);\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return (unknownElementCache[tag] = (\n        el.constructor === window.HTMLUnknownElement ||\n        el.constructor === window.HTMLElement\n      ))\n    } else {\n      return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n    }\n  }\n\n  var isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n  /*  */\n\n  /**\n   * Query an element selector if it's not an element already.\n   */\n  function query (el) {\n    if (typeof el === 'string') {\n      var selected = document.querySelector(el);\n      if (!selected) {\n        warn(\n          'Cannot find element: ' + el\n        );\n        return document.createElement('div')\n      }\n      return selected\n    } else {\n      return el\n    }\n  }\n\n  /*  */\n\n  function createElement$1 (tagName, vnode) {\n    var elm = document.createElement(tagName);\n    if (tagName !== 'select') {\n      return elm\n    }\n    // false or null will remove the attribute but undefined will not\n    if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n      elm.setAttribute('multiple', 'multiple');\n    }\n    return elm\n  }\n\n  function createElementNS (namespace, tagName) {\n    return document.createElementNS(namespaceMap[namespace], tagName)\n  }\n\n  function createTextNode (text) {\n    return document.createTextNode(text)\n  }\n\n  function createComment (text) {\n    return document.createComment(text)\n  }\n\n  function insertBefore (parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n  }\n\n  function removeChild (node, child) {\n    node.removeChild(child);\n  }\n\n  function appendChild (node, child) {\n    node.appendChild(child);\n  }\n\n  function parentNode (node) {\n    return node.parentNode\n  }\n\n  function nextSibling (node) {\n    return node.nextSibling\n  }\n\n  function tagName (node) {\n    return node.tagName\n  }\n\n  function setTextContent (node, text) {\n    node.textContent = text;\n  }\n\n  function setStyleScope (node, scopeId) {\n    node.setAttribute(scopeId, '');\n  }\n\n  var nodeOps = /*#__PURE__*/Object.freeze({\n    createElement: createElement$1,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    setStyleScope: setStyleScope\n  });\n\n  /*  */\n\n  var ref = {\n    create: function create (_, vnode) {\n      registerRef(vnode);\n    },\n    update: function update (oldVnode, vnode) {\n      if (oldVnode.data.ref !== vnode.data.ref) {\n        registerRef(oldVnode, true);\n        registerRef(vnode);\n      }\n    },\n    destroy: function destroy (vnode) {\n      registerRef(vnode, true);\n    }\n  };\n\n  function registerRef (vnode, isRemoval) {\n    var key = vnode.data.ref;\n    if (!isDef(key)) { return }\n\n    var vm = vnode.context;\n    var ref = vnode.componentInstance || vnode.elm;\n    var refs = vm.$refs;\n    if (isRemoval) {\n      if (Array.isArray(refs[key])) {\n        remove(refs[key], ref);\n      } else if (refs[key] === ref) {\n        refs[key] = undefined;\n      }\n    } else {\n      if (vnode.data.refInFor) {\n        if (!Array.isArray(refs[key])) {\n          refs[key] = [ref];\n        } else if (refs[key].indexOf(ref) < 0) {\n          // $flow-disable-line\n          refs[key].push(ref);\n        }\n      } else {\n        refs[key] = ref;\n      }\n    }\n  }\n\n  /**\n   * Virtual DOM patching algorithm based on Snabbdom by\n   * Simon Friis Vindum (@paldepind)\n   * Licensed under the MIT License\n   * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n   *\n   * modified by Evan You (@yyx990803)\n   *\n   * Not type-checking this because this file is perf-critical and the cost\n   * of making flow understand it is not worth it.\n   */\n\n  var emptyNode = new VNode('', {}, []);\n\n  var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\n  function sameVnode (a, b) {\n    return (\n      a.key === b.key &&\n      a.asyncFactory === b.asyncFactory && (\n        (\n          a.tag === b.tag &&\n          a.isComment === b.isComment &&\n          isDef(a.data) === isDef(b.data) &&\n          sameInputType(a, b)\n        ) || (\n          isTrue(a.isAsyncPlaceholder) &&\n          isUndef(b.asyncFactory.error)\n        )\n      )\n    )\n  }\n\n  function sameInputType (a, b) {\n    if (a.tag !== 'input') { return true }\n    var i;\n    var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n    var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n    return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n  }\n\n  function createKeyToOldIdx (children, beginIdx, endIdx) {\n    var i, key;\n    var map = {};\n    for (i = beginIdx; i <= endIdx; ++i) {\n      key = children[i].key;\n      if (isDef(key)) { map[key] = i; }\n    }\n    return map\n  }\n\n  function createPatchFunction (backend) {\n    var i, j;\n    var cbs = {};\n\n    var modules = backend.modules;\n    var nodeOps = backend.nodeOps;\n\n    for (i = 0; i < hooks.length; ++i) {\n      cbs[hooks[i]] = [];\n      for (j = 0; j < modules.length; ++j) {\n        if (isDef(modules[j][hooks[i]])) {\n          cbs[hooks[i]].push(modules[j][hooks[i]]);\n        }\n      }\n    }\n\n    function emptyNodeAt (elm) {\n      return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n    }\n\n    function createRmCb (childElm, listeners) {\n      function remove$$1 () {\n        if (--remove$$1.listeners === 0) {\n          removeNode(childElm);\n        }\n      }\n      remove$$1.listeners = listeners;\n      return remove$$1\n    }\n\n    function removeNode (el) {\n      var parent = nodeOps.parentNode(el);\n      // element may have already been removed due to v-html / v-text\n      if (isDef(parent)) {\n        nodeOps.removeChild(parent, el);\n      }\n    }\n\n    function isUnknownElement$$1 (vnode, inVPre) {\n      return (\n        !inVPre &&\n        !vnode.ns &&\n        !(\n          config.ignoredElements.length &&\n          config.ignoredElements.some(function (ignore) {\n            return isRegExp(ignore)\n              ? ignore.test(vnode.tag)\n              : ignore === vnode.tag\n          })\n        ) &&\n        config.isUnknownElement(vnode.tag)\n      )\n    }\n\n    var creatingElmInVPre = 0;\n\n    function createElm (\n      vnode,\n      insertedVnodeQueue,\n      parentElm,\n      refElm,\n      nested,\n      ownerArray,\n      index\n    ) {\n      if (isDef(vnode.elm) && isDef(ownerArray)) {\n        // This vnode was used in a previous render!\n        // now it's used as a new node, overwriting its elm would cause\n        // potential patch errors down the road when it's used as an insertion\n        // reference node. Instead, we clone the node on-demand before creating\n        // associated DOM element for it.\n        vnode = ownerArray[index] = cloneVNode(vnode);\n      }\n\n      vnode.isRootInsert = !nested; // for transition enter check\n      if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n        return\n      }\n\n      var data = vnode.data;\n      var children = vnode.children;\n      var tag = vnode.tag;\n      if (isDef(tag)) {\n        {\n          if (data && data.pre) {\n            creatingElmInVPre++;\n          }\n          if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n            warn(\n              'Unknown custom element: <' + tag + '> - did you ' +\n              'register the component correctly? For recursive components, ' +\n              'make sure to provide the \"name\" option.',\n              vnode.context\n            );\n          }\n        }\n\n        vnode.elm = vnode.ns\n          ? nodeOps.createElementNS(vnode.ns, tag)\n          : nodeOps.createElement(tag, vnode);\n        setScope(vnode);\n\n        /* istanbul ignore if */\n        {\n          createChildren(vnode, children, insertedVnodeQueue);\n          if (isDef(data)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n          }\n          insert(parentElm, vnode.elm, refElm);\n        }\n\n        if (data && data.pre) {\n          creatingElmInVPre--;\n        }\n      } else if (isTrue(vnode.isComment)) {\n        vnode.elm = nodeOps.createComment(vnode.text);\n        insert(parentElm, vnode.elm, refElm);\n      } else {\n        vnode.elm = nodeOps.createTextNode(vnode.text);\n        insert(parentElm, vnode.elm, refElm);\n      }\n    }\n\n    function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n      var i = vnode.data;\n      if (isDef(i)) {\n        var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n        if (isDef(i = i.hook) && isDef(i = i.init)) {\n          i(vnode, false /* hydrating */);\n        }\n        // after calling the init hook, if the vnode is a child component\n        // it should've created a child instance and mounted it. the child\n        // component also has set the placeholder vnode's elm.\n        // in that case we can just return the element and be done.\n        if (isDef(vnode.componentInstance)) {\n          initComponent(vnode, insertedVnodeQueue);\n          insert(parentElm, vnode.elm, refElm);\n          if (isTrue(isReactivated)) {\n            reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n          }\n          return true\n        }\n      }\n    }\n\n    function initComponent (vnode, insertedVnodeQueue) {\n      if (isDef(vnode.data.pendingInsert)) {\n        insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n        vnode.data.pendingInsert = null;\n      }\n      vnode.elm = vnode.componentInstance.$el;\n      if (isPatchable(vnode)) {\n        invokeCreateHooks(vnode, insertedVnodeQueue);\n        setScope(vnode);\n      } else {\n        // empty component root.\n        // skip all element-related modules except for ref (#3455)\n        registerRef(vnode);\n        // make sure to invoke the insert hook\n        insertedVnodeQueue.push(vnode);\n      }\n    }\n\n    function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n      var i;\n      // hack for #4339: a reactivated component with inner transition\n      // does not trigger because the inner node's created hooks are not called\n      // again. It's not ideal to involve module-specific logic in here but\n      // there doesn't seem to be a better way to do it.\n      var innerNode = vnode;\n      while (innerNode.componentInstance) {\n        innerNode = innerNode.componentInstance._vnode;\n        if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n          for (i = 0; i < cbs.activate.length; ++i) {\n            cbs.activate[i](emptyNode, innerNode);\n          }\n          insertedVnodeQueue.push(innerNode);\n          break\n        }\n      }\n      // unlike a newly created component,\n      // a reactivated keep-alive component doesn't insert itself\n      insert(parentElm, vnode.elm, refElm);\n    }\n\n    function insert (parent, elm, ref$$1) {\n      if (isDef(parent)) {\n        if (isDef(ref$$1)) {\n          if (nodeOps.parentNode(ref$$1) === parent) {\n            nodeOps.insertBefore(parent, elm, ref$$1);\n          }\n        } else {\n          nodeOps.appendChild(parent, elm);\n        }\n      }\n    }\n\n    function createChildren (vnode, children, insertedVnodeQueue) {\n      if (Array.isArray(children)) {\n        {\n          checkDuplicateKeys(children);\n        }\n        for (var i = 0; i < children.length; ++i) {\n          createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n        }\n      } else if (isPrimitive(vnode.text)) {\n        nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n      }\n    }\n\n    function isPatchable (vnode) {\n      while (vnode.componentInstance) {\n        vnode = vnode.componentInstance._vnode;\n      }\n      return isDef(vnode.tag)\n    }\n\n    function invokeCreateHooks (vnode, insertedVnodeQueue) {\n      for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n        cbs.create[i$1](emptyNode, vnode);\n      }\n      i = vnode.data.hook; // Reuse variable\n      if (isDef(i)) {\n        if (isDef(i.create)) { i.create(emptyNode, vnode); }\n        if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n      }\n    }\n\n    // set scope id attribute for scoped CSS.\n    // this is implemented as a special case to avoid the overhead\n    // of going through the normal attribute patching process.\n    function setScope (vnode) {\n      var i;\n      if (isDef(i = vnode.fnScopeId)) {\n        nodeOps.setStyleScope(vnode.elm, i);\n      } else {\n        var ancestor = vnode;\n        while (ancestor) {\n          if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n            nodeOps.setStyleScope(vnode.elm, i);\n          }\n          ancestor = ancestor.parent;\n        }\n      }\n      // for slot content they should also get the scopeId from the host instance.\n      if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        i !== vnode.fnContext &&\n        isDef(i = i.$options._scopeId)\n      ) {\n        nodeOps.setStyleScope(vnode.elm, i);\n      }\n    }\n\n    function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n      for (; startIdx <= endIdx; ++startIdx) {\n        createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n      }\n    }\n\n    function invokeDestroyHook (vnode) {\n      var i, j;\n      var data = vnode.data;\n      if (isDef(data)) {\n        if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n        for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n      }\n      if (isDef(i = vnode.children)) {\n        for (j = 0; j < vnode.children.length; ++j) {\n          invokeDestroyHook(vnode.children[j]);\n        }\n      }\n    }\n\n    function removeVnodes (vnodes, startIdx, endIdx) {\n      for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (isDef(ch)) {\n          if (isDef(ch.tag)) {\n            removeAndInvokeRemoveHook(ch);\n            invokeDestroyHook(ch);\n          } else { // Text node\n            removeNode(ch.elm);\n          }\n        }\n      }\n    }\n\n    function removeAndInvokeRemoveHook (vnode, rm) {\n      if (isDef(rm) || isDef(vnode.data)) {\n        var i;\n        var listeners = cbs.remove.length + 1;\n        if (isDef(rm)) {\n          // we have a recursively passed down rm callback\n          // increase the listeners count\n          rm.listeners += listeners;\n        } else {\n          // directly removing\n          rm = createRmCb(vnode.elm, listeners);\n        }\n        // recursively invoke hooks on child component root node\n        if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n          removeAndInvokeRemoveHook(i, rm);\n        }\n        for (i = 0; i < cbs.remove.length; ++i) {\n          cbs.remove[i](vnode, rm);\n        }\n        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n          i(vnode, rm);\n        } else {\n          rm();\n        }\n      } else {\n        removeNode(vnode.elm);\n      }\n    }\n\n    function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n      var oldStartIdx = 0;\n      var newStartIdx = 0;\n      var oldEndIdx = oldCh.length - 1;\n      var oldStartVnode = oldCh[0];\n      var oldEndVnode = oldCh[oldEndIdx];\n      var newEndIdx = newCh.length - 1;\n      var newStartVnode = newCh[0];\n      var newEndVnode = newCh[newEndIdx];\n      var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n      // removeOnly is a special flag used only by <transition-group>\n      // to ensure removed elements stay in correct relative positions\n      // during leaving transitions\n      var canMove = !removeOnly;\n\n      {\n        checkDuplicateKeys(newCh);\n      }\n\n      while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (isUndef(oldStartVnode)) {\n          oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n        } else if (isUndef(oldEndVnode)) {\n          oldEndVnode = oldCh[--oldEndIdx];\n        } else if (sameVnode(oldStartVnode, newStartVnode)) {\n          patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n          oldStartVnode = oldCh[++oldStartIdx];\n          newStartVnode = newCh[++newStartIdx];\n        } else if (sameVnode(oldEndVnode, newEndVnode)) {\n          patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n          oldEndVnode = oldCh[--oldEndIdx];\n          newEndVnode = newCh[--newEndIdx];\n        } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n          patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n          canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n          oldStartVnode = oldCh[++oldStartIdx];\n          newEndVnode = newCh[--newEndIdx];\n        } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n          patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n          canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n          oldEndVnode = oldCh[--oldEndIdx];\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n          idxInOld = isDef(newStartVnode.key)\n            ? oldKeyToIdx[newStartVnode.key]\n            : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n          if (isUndef(idxInOld)) { // New element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          } else {\n            vnodeToMove = oldCh[idxInOld];\n            if (sameVnode(vnodeToMove, newStartVnode)) {\n              patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n              oldCh[idxInOld] = undefined;\n              canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n            } else {\n              // same key but different element. treat as new element\n              createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n            }\n          }\n          newStartVnode = newCh[++newStartIdx];\n        }\n      }\n      if (oldStartIdx > oldEndIdx) {\n        refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n        addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n      } else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n      }\n    }\n\n    function checkDuplicateKeys (children) {\n      var seenKeys = {};\n      for (var i = 0; i < children.length; i++) {\n        var vnode = children[i];\n        var key = vnode.key;\n        if (isDef(key)) {\n          if (seenKeys[key]) {\n            warn(\n              (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n              vnode.context\n            );\n          } else {\n            seenKeys[key] = true;\n          }\n        }\n      }\n    }\n\n    function findIdxInOld (node, oldCh, start, end) {\n      for (var i = start; i < end; i++) {\n        var c = oldCh[i];\n        if (isDef(c) && sameVnode(node, c)) { return i }\n      }\n    }\n\n    function patchVnode (\n      oldVnode,\n      vnode,\n      insertedVnodeQueue,\n      ownerArray,\n      index,\n      removeOnly\n    ) {\n      if (oldVnode === vnode) {\n        return\n      }\n\n      if (isDef(vnode.elm) && isDef(ownerArray)) {\n        // clone reused vnode\n        vnode = ownerArray[index] = cloneVNode(vnode);\n      }\n\n      var elm = vnode.elm = oldVnode.elm;\n\n      if (isTrue(oldVnode.isAsyncPlaceholder)) {\n        if (isDef(vnode.asyncFactory.resolved)) {\n          hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n        } else {\n          vnode.isAsyncPlaceholder = true;\n        }\n        return\n      }\n\n      // reuse element for static trees.\n      // note we only do this if the vnode is cloned -\n      // if the new node is not cloned it means the render functions have been\n      // reset by the hot-reload-api and we need to do a proper re-render.\n      if (isTrue(vnode.isStatic) &&\n        isTrue(oldVnode.isStatic) &&\n        vnode.key === oldVnode.key &&\n        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n      ) {\n        vnode.componentInstance = oldVnode.componentInstance;\n        return\n      }\n\n      var i;\n      var data = vnode.data;\n      if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n        i(oldVnode, vnode);\n      }\n\n      var oldCh = oldVnode.children;\n      var ch = vnode.children;\n      if (isDef(data) && isPatchable(vnode)) {\n        for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n        if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n      }\n      if (isUndef(vnode.text)) {\n        if (isDef(oldCh) && isDef(ch)) {\n          if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n        } else if (isDef(ch)) {\n          {\n            checkDuplicateKeys(ch);\n          }\n          if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n          addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n        } else if (isDef(oldCh)) {\n          removeVnodes(oldCh, 0, oldCh.length - 1);\n        } else if (isDef(oldVnode.text)) {\n          nodeOps.setTextContent(elm, '');\n        }\n      } else if (oldVnode.text !== vnode.text) {\n        nodeOps.setTextContent(elm, vnode.text);\n      }\n      if (isDef(data)) {\n        if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n      }\n    }\n\n    function invokeInsertHook (vnode, queue, initial) {\n      // delay insert hooks for component root nodes, invoke them after the\n      // element is really inserted\n      if (isTrue(initial) && isDef(vnode.parent)) {\n        vnode.parent.data.pendingInsert = queue;\n      } else {\n        for (var i = 0; i < queue.length; ++i) {\n          queue[i].data.hook.insert(queue[i]);\n        }\n      }\n    }\n\n    var hydrationBailed = false;\n    // list of modules that can skip create hook during hydration because they\n    // are already rendered on the client or has no need for initialization\n    // Note: style is excluded because it relies on initial clone for future\n    // deep updates (#7063).\n    var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n    // Note: this is a browser-only function so we can assume elms are DOM nodes.\n    function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n      var i;\n      var tag = vnode.tag;\n      var data = vnode.data;\n      var children = vnode.children;\n      inVPre = inVPre || (data && data.pre);\n      vnode.elm = elm;\n\n      if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n        vnode.isAsyncPlaceholder = true;\n        return true\n      }\n      // assert node match\n      {\n        if (!assertNodeMatch(elm, vnode, inVPre)) {\n          return false\n        }\n      }\n      if (isDef(data)) {\n        if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n        if (isDef(i = vnode.componentInstance)) {\n          // child component. it should have hydrated its own tree.\n          initComponent(vnode, insertedVnodeQueue);\n          return true\n        }\n      }\n      if (isDef(tag)) {\n        if (isDef(children)) {\n          // empty element, allow client to pick up and populate children\n          if (!elm.hasChildNodes()) {\n            createChildren(vnode, children, insertedVnodeQueue);\n          } else {\n            // v-html and domProps: innerHTML\n            if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n              if (i !== elm.innerHTML) {\n                /* istanbul ignore if */\n                if (typeof console !== 'undefined' &&\n                  !hydrationBailed\n                ) {\n                  hydrationBailed = true;\n                  console.warn('Parent: ', elm);\n                  console.warn('server innerHTML: ', i);\n                  console.warn('client innerHTML: ', elm.innerHTML);\n                }\n                return false\n              }\n            } else {\n              // iterate and compare children lists\n              var childrenMatch = true;\n              var childNode = elm.firstChild;\n              for (var i$1 = 0; i$1 < children.length; i$1++) {\n                if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                  childrenMatch = false;\n                  break\n                }\n                childNode = childNode.nextSibling;\n              }\n              // if childNode is not null, it means the actual childNodes list is\n              // longer than the virtual children list.\n              if (!childrenMatch || childNode) {\n                /* istanbul ignore if */\n                if (typeof console !== 'undefined' &&\n                  !hydrationBailed\n                ) {\n                  hydrationBailed = true;\n                  console.warn('Parent: ', elm);\n                  console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n                }\n                return false\n              }\n            }\n          }\n        }\n        if (isDef(data)) {\n          var fullInvoke = false;\n          for (var key in data) {\n            if (!isRenderedModule(key)) {\n              fullInvoke = true;\n              invokeCreateHooks(vnode, insertedVnodeQueue);\n              break\n            }\n          }\n          if (!fullInvoke && data['class']) {\n            // ensure collecting deps for deep class bindings for future updates\n            traverse(data['class']);\n          }\n        }\n      } else if (elm.data !== vnode.text) {\n        elm.data = vnode.text;\n      }\n      return true\n    }\n\n    function assertNodeMatch (node, vnode, inVPre) {\n      if (isDef(vnode.tag)) {\n        return vnode.tag.indexOf('vue-component') === 0 || (\n          !isUnknownElement$$1(vnode, inVPre) &&\n          vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n        )\n      } else {\n        return node.nodeType === (vnode.isComment ? 8 : 3)\n      }\n    }\n\n    return function patch (oldVnode, vnode, hydrating, removeOnly) {\n      if (isUndef(vnode)) {\n        if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n        return\n      }\n\n      var isInitialPatch = false;\n      var insertedVnodeQueue = [];\n\n      if (isUndef(oldVnode)) {\n        // empty mount (likely as component), create new root element\n        isInitialPatch = true;\n        createElm(vnode, insertedVnodeQueue);\n      } else {\n        var isRealElement = isDef(oldVnode.nodeType);\n        if (!isRealElement && sameVnode(oldVnode, vnode)) {\n          // patch existing root node\n          patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n        } else {\n          if (isRealElement) {\n            // mounting to a real element\n            // check if this is server-rendered content and if we can perform\n            // a successful hydration.\n            if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n              oldVnode.removeAttribute(SSR_ATTR);\n              hydrating = true;\n            }\n            if (isTrue(hydrating)) {\n              if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n                invokeInsertHook(vnode, insertedVnodeQueue, true);\n                return oldVnode\n              } else {\n                warn(\n                  'The client-side rendered virtual DOM tree is not matching ' +\n                  'server-rendered content. This is likely caused by incorrect ' +\n                  'HTML markup, for example nesting block-level elements inside ' +\n                  '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                  'full client-side render.'\n                );\n              }\n            }\n            // either not server-rendered, or hydration failed.\n            // create an empty node and replace it\n            oldVnode = emptyNodeAt(oldVnode);\n          }\n\n          // replacing existing element\n          var oldElm = oldVnode.elm;\n          var parentElm = nodeOps.parentNode(oldElm);\n\n          // create new node\n          createElm(\n            vnode,\n            insertedVnodeQueue,\n            // extremely rare edge case: do not insert if old element is in a\n            // leaving transition. Only happens when combining transition +\n            // keep-alive + HOCs. (#4590)\n            oldElm._leaveCb ? null : parentElm,\n            nodeOps.nextSibling(oldElm)\n          );\n\n          // update parent placeholder node element, recursively\n          if (isDef(vnode.parent)) {\n            var ancestor = vnode.parent;\n            var patchable = isPatchable(vnode);\n            while (ancestor) {\n              for (var i = 0; i < cbs.destroy.length; ++i) {\n                cbs.destroy[i](ancestor);\n              }\n              ancestor.elm = vnode.elm;\n              if (patchable) {\n                for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                  cbs.create[i$1](emptyNode, ancestor);\n                }\n                // #6513\n                // invoke insert hooks that may have been merged by create hooks.\n                // e.g. for directives that uses the \"inserted\" hook.\n                var insert = ancestor.data.hook.insert;\n                if (insert.merged) {\n                  // start at index 1 to avoid re-invoking component mounted hook\n                  for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                    insert.fns[i$2]();\n                  }\n                }\n              } else {\n                registerRef(ancestor);\n              }\n              ancestor = ancestor.parent;\n            }\n          }\n\n          // destroy old node\n          if (isDef(parentElm)) {\n            removeVnodes([oldVnode], 0, 0);\n          } else if (isDef(oldVnode.tag)) {\n            invokeDestroyHook(oldVnode);\n          }\n        }\n      }\n\n      invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n      return vnode.elm\n    }\n  }\n\n  /*  */\n\n  var directives = {\n    create: updateDirectives,\n    update: updateDirectives,\n    destroy: function unbindDirectives (vnode) {\n      updateDirectives(vnode, emptyNode);\n    }\n  };\n\n  function updateDirectives (oldVnode, vnode) {\n    if (oldVnode.data.directives || vnode.data.directives) {\n      _update(oldVnode, vnode);\n    }\n  }\n\n  function _update (oldVnode, vnode) {\n    var isCreate = oldVnode === emptyNode;\n    var isDestroy = vnode === emptyNode;\n    var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n    var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n    var dirsWithInsert = [];\n    var dirsWithPostpatch = [];\n\n    var key, oldDir, dir;\n    for (key in newDirs) {\n      oldDir = oldDirs[key];\n      dir = newDirs[key];\n      if (!oldDir) {\n        // new directive, bind\n        callHook$1(dir, 'bind', vnode, oldVnode);\n        if (dir.def && dir.def.inserted) {\n          dirsWithInsert.push(dir);\n        }\n      } else {\n        // existing directive, update\n        dir.oldValue = oldDir.value;\n        dir.oldArg = oldDir.arg;\n        callHook$1(dir, 'update', vnode, oldVnode);\n        if (dir.def && dir.def.componentUpdated) {\n          dirsWithPostpatch.push(dir);\n        }\n      }\n    }\n\n    if (dirsWithInsert.length) {\n      var callInsert = function () {\n        for (var i = 0; i < dirsWithInsert.length; i++) {\n          callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n        }\n      };\n      if (isCreate) {\n        mergeVNodeHook(vnode, 'insert', callInsert);\n      } else {\n        callInsert();\n      }\n    }\n\n    if (dirsWithPostpatch.length) {\n      mergeVNodeHook(vnode, 'postpatch', function () {\n        for (var i = 0; i < dirsWithPostpatch.length; i++) {\n          callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n        }\n      });\n    }\n\n    if (!isCreate) {\n      for (key in oldDirs) {\n        if (!newDirs[key]) {\n          // no longer present, unbind\n          callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n        }\n      }\n    }\n  }\n\n  var emptyModifiers = Object.create(null);\n\n  function normalizeDirectives$1 (\n    dirs,\n    vm\n  ) {\n    var res = Object.create(null);\n    if (!dirs) {\n      // $flow-disable-line\n      return res\n    }\n    var i, dir;\n    for (i = 0; i < dirs.length; i++) {\n      dir = dirs[i];\n      if (!dir.modifiers) {\n        // $flow-disable-line\n        dir.modifiers = emptyModifiers;\n      }\n      res[getRawDirName(dir)] = dir;\n      dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n    }\n    // $flow-disable-line\n    return res\n  }\n\n  function getRawDirName (dir) {\n    return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n  }\n\n  function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n    var fn = dir.def && dir.def[hook];\n    if (fn) {\n      try {\n        fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n      } catch (e) {\n        handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n      }\n    }\n  }\n\n  var baseModules = [\n    ref,\n    directives\n  ];\n\n  /*  */\n\n  function updateAttrs (oldVnode, vnode) {\n    var opts = vnode.componentOptions;\n    if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n      return\n    }\n    if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n      return\n    }\n    var key, cur, old;\n    var elm = vnode.elm;\n    var oldAttrs = oldVnode.data.attrs || {};\n    var attrs = vnode.data.attrs || {};\n    // clone observed objects, as the user probably wants to mutate it\n    if (isDef(attrs.__ob__)) {\n      attrs = vnode.data.attrs = extend({}, attrs);\n    }\n\n    for (key in attrs) {\n      cur = attrs[key];\n      old = oldAttrs[key];\n      if (old !== cur) {\n        setAttr(elm, key, cur, vnode.data.pre);\n      }\n    }\n    // #4391: in IE9, setting type can reset value for input[type=radio]\n    // #6666: IE/Edge forces progress value down to 1 before setting a max\n    /* istanbul ignore if */\n    if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n      setAttr(elm, 'value', attrs.value);\n    }\n    for (key in oldAttrs) {\n      if (isUndef(attrs[key])) {\n        if (isXlink(key)) {\n          elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n        } else if (!isEnumeratedAttr(key)) {\n          elm.removeAttribute(key);\n        }\n      }\n    }\n  }\n\n  function setAttr (el, key, value, isInPre) {\n    if (isInPre || el.tagName.indexOf('-') > -1) {\n      baseSetAttr(el, key, value);\n    } else if (isBooleanAttr(key)) {\n      // set attribute for blank value\n      // e.g. <option disabled>Select one</option>\n      if (isFalsyAttrValue(value)) {\n        el.removeAttribute(key);\n      } else {\n        // technically allowfullscreen is a boolean attribute for <iframe>,\n        // but Flash expects a value of \"true\" when used on <embed> tag\n        value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n          ? 'true'\n          : key;\n        el.setAttribute(key, value);\n      }\n    } else if (isEnumeratedAttr(key)) {\n      el.setAttribute(key, convertEnumeratedValue(key, value));\n    } else if (isXlink(key)) {\n      if (isFalsyAttrValue(value)) {\n        el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else {\n        el.setAttributeNS(xlinkNS, key, value);\n      }\n    } else {\n      baseSetAttr(el, key, value);\n    }\n  }\n\n  function baseSetAttr (el, key, value) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // #7138: IE10 & 11 fires input event when setting placeholder on\n      // <textarea>... block the first input event and remove the blocker\n      // immediately.\n      /* istanbul ignore if */\n      if (\n        isIE && !isIE9 &&\n        el.tagName === 'TEXTAREA' &&\n        key === 'placeholder' && value !== '' && !el.__ieph\n      ) {\n        var blocker = function (e) {\n          e.stopImmediatePropagation();\n          el.removeEventListener('input', blocker);\n        };\n        el.addEventListener('input', blocker);\n        // $flow-disable-line\n        el.__ieph = true; /* IE placeholder patched */\n      }\n      el.setAttribute(key, value);\n    }\n  }\n\n  var attrs = {\n    create: updateAttrs,\n    update: updateAttrs\n  };\n\n  /*  */\n\n  function updateClass (oldVnode, vnode) {\n    var el = vnode.elm;\n    var data = vnode.data;\n    var oldData = oldVnode.data;\n    if (\n      isUndef(data.staticClass) &&\n      isUndef(data.class) && (\n        isUndef(oldData) || (\n          isUndef(oldData.staticClass) &&\n          isUndef(oldData.class)\n        )\n      )\n    ) {\n      return\n    }\n\n    var cls = genClassForVnode(vnode);\n\n    // handle transition classes\n    var transitionClass = el._transitionClasses;\n    if (isDef(transitionClass)) {\n      cls = concat(cls, stringifyClass(transitionClass));\n    }\n\n    // set the class\n    if (cls !== el._prevClass) {\n      el.setAttribute('class', cls);\n      el._prevClass = cls;\n    }\n  }\n\n  var klass = {\n    create: updateClass,\n    update: updateClass\n  };\n\n  /*  */\n\n  var validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\n  function parseFilters (exp) {\n    var inSingle = false;\n    var inDouble = false;\n    var inTemplateString = false;\n    var inRegex = false;\n    var curly = 0;\n    var square = 0;\n    var paren = 0;\n    var lastFilterIndex = 0;\n    var c, prev, i, expression, filters;\n\n    for (i = 0; i < exp.length; i++) {\n      prev = c;\n      c = exp.charCodeAt(i);\n      if (inSingle) {\n        if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n      } else if (inDouble) {\n        if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n      } else if (inTemplateString) {\n        if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n      } else if (inRegex) {\n        if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n      } else if (\n        c === 0x7C && // pipe\n        exp.charCodeAt(i + 1) !== 0x7C &&\n        exp.charCodeAt(i - 1) !== 0x7C &&\n        !curly && !square && !paren\n      ) {\n        if (expression === undefined) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          expression = exp.slice(0, i).trim();\n        } else {\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22: inDouble = true; break         // \"\n          case 0x27: inSingle = true; break         // '\n          case 0x60: inTemplateString = true; break // `\n          case 0x28: paren++; break                 // (\n          case 0x29: paren--; break                 // )\n          case 0x5B: square++; break                // [\n          case 0x5D: square--; break                // ]\n          case 0x7B: curly++; break                 // {\n          case 0x7D: curly--; break                 // }\n        }\n        if (c === 0x2f) { // /\n          var j = i - 1;\n          var p = (void 0);\n          // find first non-whitespace prev char\n          for (; j >= 0; j--) {\n            p = exp.charAt(j);\n            if (p !== ' ') { break }\n          }\n          if (!p || !validDivisionCharRE.test(p)) {\n            inRegex = true;\n          }\n        }\n      }\n    }\n\n    if (expression === undefined) {\n      expression = exp.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    function pushFilter () {\n      (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n      lastFilterIndex = i + 1;\n    }\n\n    if (filters) {\n      for (i = 0; i < filters.length; i++) {\n        expression = wrapFilter(expression, filters[i]);\n      }\n    }\n\n    return expression\n  }\n\n  function wrapFilter (exp, filter) {\n    var i = filter.indexOf('(');\n    if (i < 0) {\n      // _f: resolveFilter\n      return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n    } else {\n      var name = filter.slice(0, i);\n      var args = filter.slice(i + 1);\n      return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n    }\n  }\n\n  /*  */\n\n\n\n  /* eslint-disable no-unused-vars */\n  function baseWarn (msg, range) {\n    console.error((\"[Vue compiler]: \" + msg));\n  }\n  /* eslint-enable no-unused-vars */\n\n  function pluckModuleFunction (\n    modules,\n    key\n  ) {\n    return modules\n      ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n      : []\n  }\n\n  function addProp (el, name, value, range, dynamic) {\n    (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n    el.plain = false;\n  }\n\n  function addAttr (el, name, value, range, dynamic) {\n    var attrs = dynamic\n      ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n      : (el.attrs || (el.attrs = []));\n    attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n    el.plain = false;\n  }\n\n  // add a raw attr (use this in preTransforms)\n  function addRawAttr (el, name, value, range) {\n    el.attrsMap[name] = value;\n    el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n  }\n\n  function addDirective (\n    el,\n    name,\n    rawName,\n    value,\n    arg,\n    isDynamicArg,\n    modifiers,\n    range\n  ) {\n    (el.directives || (el.directives = [])).push(rangeSetItem({\n      name: name,\n      rawName: rawName,\n      value: value,\n      arg: arg,\n      isDynamicArg: isDynamicArg,\n      modifiers: modifiers\n    }, range));\n    el.plain = false;\n  }\n\n  function prependModifierMarker (symbol, name, dynamic) {\n    return dynamic\n      ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n      : symbol + name // mark the event as captured\n  }\n\n  function addHandler (\n    el,\n    name,\n    value,\n    modifiers,\n    important,\n    warn,\n    range,\n    dynamic\n  ) {\n    modifiers = modifiers || emptyObject;\n    // warn prevent and passive modifier\n    /* istanbul ignore if */\n    if (\n      warn &&\n      modifiers.prevent && modifiers.passive\n    ) {\n      warn(\n        'passive and prevent can\\'t be used together. ' +\n        'Passive handler can\\'t prevent default event.',\n        range\n      );\n    }\n\n    // normalize click.right and click.middle since they don't actually fire\n    // this is technically browser-specific, but at least for now browsers are\n    // the only target envs that have right/middle clicks.\n    if (modifiers.right) {\n      if (dynamic) {\n        name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n      } else if (name === 'click') {\n        name = 'contextmenu';\n        delete modifiers.right;\n      }\n    } else if (modifiers.middle) {\n      if (dynamic) {\n        name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n      } else if (name === 'click') {\n        name = 'mouseup';\n      }\n    }\n\n    // check capture modifier\n    if (modifiers.capture) {\n      delete modifiers.capture;\n      name = prependModifierMarker('!', name, dynamic);\n    }\n    if (modifiers.once) {\n      delete modifiers.once;\n      name = prependModifierMarker('~', name, dynamic);\n    }\n    /* istanbul ignore if */\n    if (modifiers.passive) {\n      delete modifiers.passive;\n      name = prependModifierMarker('&', name, dynamic);\n    }\n\n    var events;\n    if (modifiers.native) {\n      delete modifiers.native;\n      events = el.nativeEvents || (el.nativeEvents = {});\n    } else {\n      events = el.events || (el.events = {});\n    }\n\n    var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n    if (modifiers !== emptyObject) {\n      newHandler.modifiers = modifiers;\n    }\n\n    var handlers = events[name];\n    /* istanbul ignore if */\n    if (Array.isArray(handlers)) {\n      important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n    } else if (handlers) {\n      events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n    } else {\n      events[name] = newHandler;\n    }\n\n    el.plain = false;\n  }\n\n  function getRawBindingAttr (\n    el,\n    name\n  ) {\n    return el.rawAttrsMap[':' + name] ||\n      el.rawAttrsMap['v-bind:' + name] ||\n      el.rawAttrsMap[name]\n  }\n\n  function getBindingAttr (\n    el,\n    name,\n    getStatic\n  ) {\n    var dynamicValue =\n      getAndRemoveAttr(el, ':' + name) ||\n      getAndRemoveAttr(el, 'v-bind:' + name);\n    if (dynamicValue != null) {\n      return parseFilters(dynamicValue)\n    } else if (getStatic !== false) {\n      var staticValue = getAndRemoveAttr(el, name);\n      if (staticValue != null) {\n        return JSON.stringify(staticValue)\n      }\n    }\n  }\n\n  // note: this only removes the attr from the Array (attrsList) so that it\n  // doesn't get processed by processAttrs.\n  // By default it does NOT remove it from the map (attrsMap) because the map is\n  // needed during codegen.\n  function getAndRemoveAttr (\n    el,\n    name,\n    removeFromMap\n  ) {\n    var val;\n    if ((val = el.attrsMap[name]) != null) {\n      var list = el.attrsList;\n      for (var i = 0, l = list.length; i < l; i++) {\n        if (list[i].name === name) {\n          list.splice(i, 1);\n          break\n        }\n      }\n    }\n    if (removeFromMap) {\n      delete el.attrsMap[name];\n    }\n    return val\n  }\n\n  function getAndRemoveAttrByRegex (\n    el,\n    name\n  ) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      var attr = list[i];\n      if (name.test(attr.name)) {\n        list.splice(i, 1);\n        return attr\n      }\n    }\n  }\n\n  function rangeSetItem (\n    item,\n    range\n  ) {\n    if (range) {\n      if (range.start != null) {\n        item.start = range.start;\n      }\n      if (range.end != null) {\n        item.end = range.end;\n      }\n    }\n    return item\n  }\n\n  /*  */\n\n  /**\n   * Cross-platform code generation for component v-model\n   */\n  function genComponentModel (\n    el,\n    value,\n    modifiers\n  ) {\n    var ref = modifiers || {};\n    var number = ref.number;\n    var trim = ref.trim;\n\n    var baseValueExpression = '$$v';\n    var valueExpression = baseValueExpression;\n    if (trim) {\n      valueExpression =\n        \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n    }\n    if (number) {\n      valueExpression = \"_n(\" + valueExpression + \")\";\n    }\n    var assignment = genAssignmentCode(value, valueExpression);\n\n    el.model = {\n      value: (\"(\" + value + \")\"),\n      expression: JSON.stringify(value),\n      callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n    };\n  }\n\n  /**\n   * Cross-platform codegen helper for generating v-model value assignment code.\n   */\n  function genAssignmentCode (\n    value,\n    assignment\n  ) {\n    var res = parseModel(value);\n    if (res.key === null) {\n      return (value + \"=\" + assignment)\n    } else {\n      return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n    }\n  }\n\n  /**\n   * Parse a v-model expression into a base path and a final key segment.\n   * Handles both dot-path and possible square brackets.\n   *\n   * Possible cases:\n   *\n   * - test\n   * - test[key]\n   * - test[test1[key]]\n   * - test[\"a\"][key]\n   * - xxx.test[a[a].test1[key]]\n   * - test.xxx.a[\"asa\"][test1[key]]\n   *\n   */\n\n  var len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\n  function parseModel (val) {\n    // Fix https://github.com/vuejs/vue/pull/7730\n    // allow v-model=\"obj.val \" (trailing whitespace)\n    val = val.trim();\n    len = val.length;\n\n    if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n      index$1 = val.lastIndexOf('.');\n      if (index$1 > -1) {\n        return {\n          exp: val.slice(0, index$1),\n          key: '\"' + val.slice(index$1 + 1) + '\"'\n        }\n      } else {\n        return {\n          exp: val,\n          key: null\n        }\n      }\n    }\n\n    str = val;\n    index$1 = expressionPos = expressionEndPos = 0;\n\n    while (!eof()) {\n      chr = next();\n      /* istanbul ignore if */\n      if (isStringStart(chr)) {\n        parseString(chr);\n      } else if (chr === 0x5B) {\n        parseBracket(chr);\n      }\n    }\n\n    return {\n      exp: val.slice(0, expressionPos),\n      key: val.slice(expressionPos + 1, expressionEndPos)\n    }\n  }\n\n  function next () {\n    return str.charCodeAt(++index$1)\n  }\n\n  function eof () {\n    return index$1 >= len\n  }\n\n  function isStringStart (chr) {\n    return chr === 0x22 || chr === 0x27\n  }\n\n  function parseBracket (chr) {\n    var inBracket = 1;\n    expressionPos = index$1;\n    while (!eof()) {\n      chr = next();\n      if (isStringStart(chr)) {\n        parseString(chr);\n        continue\n      }\n      if (chr === 0x5B) { inBracket++; }\n      if (chr === 0x5D) { inBracket--; }\n      if (inBracket === 0) {\n        expressionEndPos = index$1;\n        break\n      }\n    }\n  }\n\n  function parseString (chr) {\n    var stringQuote = chr;\n    while (!eof()) {\n      chr = next();\n      if (chr === stringQuote) {\n        break\n      }\n    }\n  }\n\n  /*  */\n\n  var warn$1;\n\n  // in some cases, the event used has to be determined at runtime\n  // so we used some reserved tokens during compile.\n  var RANGE_TOKEN = '__r';\n  var CHECKBOX_RADIO_TOKEN = '__c';\n\n  function model (\n    el,\n    dir,\n    _warn\n  ) {\n    warn$1 = _warn;\n    var value = dir.value;\n    var modifiers = dir.modifiers;\n    var tag = el.tag;\n    var type = el.attrsMap.type;\n\n    {\n      // inputs with type=\"file\" are read only and setting the input's\n      // value will throw an error.\n      if (tag === 'input' && type === 'file') {\n        warn$1(\n          \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n          \"File inputs are read only. Use a v-on:change listener instead.\",\n          el.rawAttrsMap['v-model']\n        );\n      }\n    }\n\n    if (el.component) {\n      genComponentModel(el, value, modifiers);\n      // component v-model doesn't need extra runtime\n      return false\n    } else if (tag === 'select') {\n      genSelect(el, value, modifiers);\n    } else if (tag === 'input' && type === 'checkbox') {\n      genCheckboxModel(el, value, modifiers);\n    } else if (tag === 'input' && type === 'radio') {\n      genRadioModel(el, value, modifiers);\n    } else if (tag === 'input' || tag === 'textarea') {\n      genDefaultModel(el, value, modifiers);\n    } else if (!config.isReservedTag(tag)) {\n      genComponentModel(el, value, modifiers);\n      // component v-model doesn't need extra runtime\n      return false\n    } else {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"v-model is not supported on this element type. \" +\n        'If you are working with contenteditable, it\\'s recommended to ' +\n        'wrap a library dedicated for that purpose inside a custom component.',\n        el.rawAttrsMap['v-model']\n      );\n    }\n\n    // ensure runtime directive metadata\n    return true\n  }\n\n  function genCheckboxModel (\n    el,\n    value,\n    modifiers\n  ) {\n    var number = modifiers && modifiers.number;\n    var valueBinding = getBindingAttr(el, 'value') || 'null';\n    var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n    var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n    addProp(el, 'checked',\n      \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n    );\n    addHandler(el, 'change',\n      \"var $$a=\" + value + \",\" +\n          '$$el=$event.target,' +\n          \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n      'if(Array.isArray($$a)){' +\n        \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n            '$$i=_i($$a,$$v);' +\n        \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n        \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n      \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n      null, true\n    );\n  }\n\n  function genRadioModel (\n    el,\n    value,\n    modifiers\n  ) {\n    var number = modifiers && modifiers.number;\n    var valueBinding = getBindingAttr(el, 'value') || 'null';\n    valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n    addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n    addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n  }\n\n  function genSelect (\n    el,\n    value,\n    modifiers\n  ) {\n    var number = modifiers && modifiers.number;\n    var selectedVal = \"Array.prototype.filter\" +\n      \".call($event.target.options,function(o){return o.selected})\" +\n      \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n      \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n    var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n    var code = \"var $$selectedVal = \" + selectedVal + \";\";\n    code = code + \" \" + (genAssignmentCode(value, assignment));\n    addHandler(el, 'change', code, null, true);\n  }\n\n  function genDefaultModel (\n    el,\n    value,\n    modifiers\n  ) {\n    var type = el.attrsMap.type;\n\n    // warn if v-bind:value conflicts with v-model\n    // except for inputs with v-bind:type\n    {\n      var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n      var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n      if (value$1 && !typeBinding) {\n        var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n        warn$1(\n          binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n          'because the latter already expands to a value binding internally',\n          el.rawAttrsMap[binding]\n        );\n      }\n    }\n\n    var ref = modifiers || {};\n    var lazy = ref.lazy;\n    var number = ref.number;\n    var trim = ref.trim;\n    var needCompositionGuard = !lazy && type !== 'range';\n    var event = lazy\n      ? 'change'\n      : type === 'range'\n        ? RANGE_TOKEN\n        : 'input';\n\n    var valueExpression = '$event.target.value';\n    if (trim) {\n      valueExpression = \"$event.target.value.trim()\";\n    }\n    if (number) {\n      valueExpression = \"_n(\" + valueExpression + \")\";\n    }\n\n    var code = genAssignmentCode(value, valueExpression);\n    if (needCompositionGuard) {\n      code = \"if($event.target.composing)return;\" + code;\n    }\n\n    addProp(el, 'value', (\"(\" + value + \")\"));\n    addHandler(el, event, code, null, true);\n    if (trim || number) {\n      addHandler(el, 'blur', '$forceUpdate()');\n    }\n  }\n\n  /*  */\n\n  // normalize v-model event tokens that can only be determined at runtime.\n  // it's important to place the event as the first in the array because\n  // the whole point is ensuring the v-model callback gets called before\n  // user-attached handlers.\n  function normalizeEvents (on) {\n    /* istanbul ignore if */\n    if (isDef(on[RANGE_TOKEN])) {\n      // IE input[type=range] only supports `change` event\n      var event = isIE ? 'change' : 'input';\n      on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n      delete on[RANGE_TOKEN];\n    }\n    // This was originally intended to fix #4521 but no longer necessary\n    // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n    /* istanbul ignore if */\n    if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n      on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n      delete on[CHECKBOX_RADIO_TOKEN];\n    }\n  }\n\n  var target$1;\n\n  function createOnceHandler$1 (event, handler, capture) {\n    var _target = target$1; // save current target element in closure\n    return function onceHandler () {\n      var res = handler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, onceHandler, capture, _target);\n      }\n    }\n  }\n\n  // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n  // implementation and does not fire microtasks in between event propagation, so\n  // safe to exclude.\n  var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\n  function add$1 (\n    name,\n    handler,\n    capture,\n    passive\n  ) {\n    // async edge case #6566: inner click event triggers patch, event handler\n    // attached to outer element during patch, and triggered again. This\n    // happens because browsers fire microtask ticks between event propagation.\n    // the solution is simple: we save the timestamp when a handler is attached,\n    // and the handler would only fire if the event passed to it was fired\n    // AFTER it was attached.\n    if (useMicrotaskFix) {\n      var attachedTimestamp = currentFlushTimestamp;\n      var original = handler;\n      handler = original._wrapper = function (e) {\n        if (\n          // no bubbling, should always fire.\n          // this is just a safety net in case event.timeStamp is unreliable in\n          // certain weird environments...\n          e.target === e.currentTarget ||\n          // event is fired after handler attachment\n          e.timeStamp >= attachedTimestamp ||\n          // bail for environments that have buggy event.timeStamp implementations\n          // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n          // #9681 QtWebEngine event.timeStamp is negative value\n          e.timeStamp <= 0 ||\n          // #9448 bail if event is fired in another document in a multi-page\n          // electron/nw.js app, since event.timeStamp will be using a different\n          // starting reference\n          e.target.ownerDocument !== document\n        ) {\n          return original.apply(this, arguments)\n        }\n      };\n    }\n    target$1.addEventListener(\n      name,\n      handler,\n      supportsPassive\n        ? { capture: capture, passive: passive }\n        : capture\n    );\n  }\n\n  function remove$2 (\n    name,\n    handler,\n    capture,\n    _target\n  ) {\n    (_target || target$1).removeEventListener(\n      name,\n      handler._wrapper || handler,\n      capture\n    );\n  }\n\n  function updateDOMListeners (oldVnode, vnode) {\n    if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n      return\n    }\n    var on = vnode.data.on || {};\n    var oldOn = oldVnode.data.on || {};\n    target$1 = vnode.elm;\n    normalizeEvents(on);\n    updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n    target$1 = undefined;\n  }\n\n  var events = {\n    create: updateDOMListeners,\n    update: updateDOMListeners\n  };\n\n  /*  */\n\n  var svgContainer;\n\n  function updateDOMProps (oldVnode, vnode) {\n    if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n      return\n    }\n    var key, cur;\n    var elm = vnode.elm;\n    var oldProps = oldVnode.data.domProps || {};\n    var props = vnode.data.domProps || {};\n    // clone observed objects, as the user probably wants to mutate it\n    if (isDef(props.__ob__)) {\n      props = vnode.data.domProps = extend({}, props);\n    }\n\n    for (key in oldProps) {\n      if (!(key in props)) {\n        elm[key] = '';\n      }\n    }\n\n    for (key in props) {\n      cur = props[key];\n      // ignore children if the node has textContent or innerHTML,\n      // as these will throw away existing DOM nodes and cause removal errors\n      // on subsequent patches (#3360)\n      if (key === 'textContent' || key === 'innerHTML') {\n        if (vnode.children) { vnode.children.length = 0; }\n        if (cur === oldProps[key]) { continue }\n        // #6601 work around Chrome version <= 55 bug where single textNode\n        // replaced by innerHTML/textContent retains its parentNode property\n        if (elm.childNodes.length === 1) {\n          elm.removeChild(elm.childNodes[0]);\n        }\n      }\n\n      if (key === 'value' && elm.tagName !== 'PROGRESS') {\n        // store value as _value as well since\n        // non-string values will be stringified\n        elm._value = cur;\n        // avoid resetting cursor position when value is the same\n        var strCur = isUndef(cur) ? '' : String(cur);\n        if (shouldUpdateValue(elm, strCur)) {\n          elm.value = strCur;\n        }\n      } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n        // IE doesn't support innerHTML for SVG elements\n        svgContainer = svgContainer || document.createElement('div');\n        svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n        var svg = svgContainer.firstChild;\n        while (elm.firstChild) {\n          elm.removeChild(elm.firstChild);\n        }\n        while (svg.firstChild) {\n          elm.appendChild(svg.firstChild);\n        }\n      } else if (\n        // skip the update if old and new VDOM state is the same.\n        // `value` is handled separately because the DOM value may be temporarily\n        // out of sync with VDOM state due to focus, composition and modifiers.\n        // This  #4521 by skipping the unnecessary `checked` update.\n        cur !== oldProps[key]\n      ) {\n        // some property updates can throw\n        // e.g. `value` on <progress> w/ non-finite value\n        try {\n          elm[key] = cur;\n        } catch (e) {}\n      }\n    }\n  }\n\n  // check platforms/web/util/attrs.js acceptValue\n\n\n  function shouldUpdateValue (elm, checkVal) {\n    return (!elm.composing && (\n      elm.tagName === 'OPTION' ||\n      isNotInFocusAndDirty(elm, checkVal) ||\n      isDirtyWithModifiers(elm, checkVal)\n    ))\n  }\n\n  function isNotInFocusAndDirty (elm, checkVal) {\n    // return true when textbox (.number and .trim) loses focus and its value is\n    // not equal to the updated value\n    var notInFocus = true;\n    // #6157\n    // work around IE bug when accessing document.activeElement in an iframe\n    try { notInFocus = document.activeElement !== elm; } catch (e) {}\n    return notInFocus && elm.value !== checkVal\n  }\n\n  function isDirtyWithModifiers (elm, newVal) {\n    var value = elm.value;\n    var modifiers = elm._vModifiers; // injected by v-model runtime\n    if (isDef(modifiers)) {\n      if (modifiers.number) {\n        return toNumber(value) !== toNumber(newVal)\n      }\n      if (modifiers.trim) {\n        return value.trim() !== newVal.trim()\n      }\n    }\n    return value !== newVal\n  }\n\n  var domProps = {\n    create: updateDOMProps,\n    update: updateDOMProps\n  };\n\n  /*  */\n\n  var parseStyleText = cached(function (cssText) {\n    var res = {};\n    var listDelimiter = /;(?![^(]*\\))/g;\n    var propertyDelimiter = /:(.+)/;\n    cssText.split(listDelimiter).forEach(function (item) {\n      if (item) {\n        var tmp = item.split(propertyDelimiter);\n        tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n      }\n    });\n    return res\n  });\n\n  // merge static and dynamic style data on the same vnode\n  function normalizeStyleData (data) {\n    var style = normalizeStyleBinding(data.style);\n    // static style is pre-processed into an object during compilation\n    // and is always a fresh object, so it's safe to merge into it\n    return data.staticStyle\n      ? extend(data.staticStyle, style)\n      : style\n  }\n\n  // normalize possible array / string values into Object\n  function normalizeStyleBinding (bindingStyle) {\n    if (Array.isArray(bindingStyle)) {\n      return toObject(bindingStyle)\n    }\n    if (typeof bindingStyle === 'string') {\n      return parseStyleText(bindingStyle)\n    }\n    return bindingStyle\n  }\n\n  /**\n   * parent component style should be after child's\n   * so that parent component's style could override it\n   */\n  function getStyle (vnode, checkChild) {\n    var res = {};\n    var styleData;\n\n    if (checkChild) {\n      var childNode = vnode;\n      while (childNode.componentInstance) {\n        childNode = childNode.componentInstance._vnode;\n        if (\n          childNode && childNode.data &&\n          (styleData = normalizeStyleData(childNode.data))\n        ) {\n          extend(res, styleData);\n        }\n      }\n    }\n\n    if ((styleData = normalizeStyleData(vnode.data))) {\n      extend(res, styleData);\n    }\n\n    var parentNode = vnode;\n    while ((parentNode = parentNode.parent)) {\n      if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n        extend(res, styleData);\n      }\n    }\n    return res\n  }\n\n  /*  */\n\n  var cssVarRE = /^--/;\n  var importantRE = /\\s*!important$/;\n  var setProp = function (el, name, val) {\n    /* istanbul ignore if */\n    if (cssVarRE.test(name)) {\n      el.style.setProperty(name, val);\n    } else if (importantRE.test(val)) {\n      el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n    } else {\n      var normalizedName = normalize(name);\n      if (Array.isArray(val)) {\n        // Support values array created by autoprefixer, e.g.\n        // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n        // Set them one by one, and the browser will only set those it can recognize\n        for (var i = 0, len = val.length; i < len; i++) {\n          el.style[normalizedName] = val[i];\n        }\n      } else {\n        el.style[normalizedName] = val;\n      }\n    }\n  };\n\n  var vendorNames = ['Webkit', 'Moz', 'ms'];\n\n  var emptyStyle;\n  var normalize = cached(function (prop) {\n    emptyStyle = emptyStyle || document.createElement('div').style;\n    prop = camelize(prop);\n    if (prop !== 'filter' && (prop in emptyStyle)) {\n      return prop\n    }\n    var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n    for (var i = 0; i < vendorNames.length; i++) {\n      var name = vendorNames[i] + capName;\n      if (name in emptyStyle) {\n        return name\n      }\n    }\n  });\n\n  function updateStyle (oldVnode, vnode) {\n    var data = vnode.data;\n    var oldData = oldVnode.data;\n\n    if (isUndef(data.staticStyle) && isUndef(data.style) &&\n      isUndef(oldData.staticStyle) && isUndef(oldData.style)\n    ) {\n      return\n    }\n\n    var cur, name;\n    var el = vnode.elm;\n    var oldStaticStyle = oldData.staticStyle;\n    var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n    // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n    var oldStyle = oldStaticStyle || oldStyleBinding;\n\n    var style = normalizeStyleBinding(vnode.data.style) || {};\n\n    // store normalized style under a different key for next diff\n    // make sure to clone it if it's reactive, since the user likely wants\n    // to mutate it.\n    vnode.data.normalizedStyle = isDef(style.__ob__)\n      ? extend({}, style)\n      : style;\n\n    var newStyle = getStyle(vnode, true);\n\n    for (name in oldStyle) {\n      if (isUndef(newStyle[name])) {\n        setProp(el, name, '');\n      }\n    }\n    for (name in newStyle) {\n      cur = newStyle[name];\n      if (cur !== oldStyle[name]) {\n        // ie9 setting to null has no effect, must use empty string\n        setProp(el, name, cur == null ? '' : cur);\n      }\n    }\n  }\n\n  var style = {\n    create: updateStyle,\n    update: updateStyle\n  };\n\n  /*  */\n\n  var whitespaceRE = /\\s+/;\n\n  /**\n   * Add class with compatibility for SVG since classList is not supported on\n   * SVG elements in IE\n   */\n  function addClass (el, cls) {\n    /* istanbul ignore if */\n    if (!cls || !(cls = cls.trim())) {\n      return\n    }\n\n    /* istanbul ignore else */\n    if (el.classList) {\n      if (cls.indexOf(' ') > -1) {\n        cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n      } else {\n        el.classList.add(cls);\n      }\n    } else {\n      var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        el.setAttribute('class', (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for SVG since classList is not supported on\n   * SVG elements in IE\n   */\n  function removeClass (el, cls) {\n    /* istanbul ignore if */\n    if (!cls || !(cls = cls.trim())) {\n      return\n    }\n\n    /* istanbul ignore else */\n    if (el.classList) {\n      if (cls.indexOf(' ') > -1) {\n        cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n      } else {\n        el.classList.remove(cls);\n      }\n      if (!el.classList.length) {\n        el.removeAttribute('class');\n      }\n    } else {\n      var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      cur = cur.trim();\n      if (cur) {\n        el.setAttribute('class', cur);\n      } else {\n        el.removeAttribute('class');\n      }\n    }\n  }\n\n  /*  */\n\n  function resolveTransition (def$$1) {\n    if (!def$$1) {\n      return\n    }\n    /* istanbul ignore else */\n    if (typeof def$$1 === 'object') {\n      var res = {};\n      if (def$$1.css !== false) {\n        extend(res, autoCssTransition(def$$1.name || 'v'));\n      }\n      extend(res, def$$1);\n      return res\n    } else if (typeof def$$1 === 'string') {\n      return autoCssTransition(def$$1)\n    }\n  }\n\n  var autoCssTransition = cached(function (name) {\n    return {\n      enterClass: (name + \"-enter\"),\n      enterToClass: (name + \"-enter-to\"),\n      enterActiveClass: (name + \"-enter-active\"),\n      leaveClass: (name + \"-leave\"),\n      leaveToClass: (name + \"-leave-to\"),\n      leaveActiveClass: (name + \"-leave-active\")\n    }\n  });\n\n  var hasTransition = inBrowser && !isIE9;\n  var TRANSITION = 'transition';\n  var ANIMATION = 'animation';\n\n  // Transition property/event sniffing\n  var transitionProp = 'transition';\n  var transitionEndEvent = 'transitionend';\n  var animationProp = 'animation';\n  var animationEndEvent = 'animationend';\n  if (hasTransition) {\n    /* istanbul ignore if */\n    if (window.ontransitionend === undefined &&\n      window.onwebkittransitionend !== undefined\n    ) {\n      transitionProp = 'WebkitTransition';\n      transitionEndEvent = 'webkitTransitionEnd';\n    }\n    if (window.onanimationend === undefined &&\n      window.onwebkitanimationend !== undefined\n    ) {\n      animationProp = 'WebkitAnimation';\n      animationEndEvent = 'webkitAnimationEnd';\n    }\n  }\n\n  // binding to window is necessary to make hot reload work in IE in strict mode\n  var raf = inBrowser\n    ? window.requestAnimationFrame\n      ? window.requestAnimationFrame.bind(window)\n      : setTimeout\n    : /* istanbul ignore next */ function (fn) { return fn(); };\n\n  function nextFrame (fn) {\n    raf(function () {\n      raf(fn);\n    });\n  }\n\n  function addTransitionClass (el, cls) {\n    var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n    if (transitionClasses.indexOf(cls) < 0) {\n      transitionClasses.push(cls);\n      addClass(el, cls);\n    }\n  }\n\n  function removeTransitionClass (el, cls) {\n    if (el._transitionClasses) {\n      remove(el._transitionClasses, cls);\n    }\n    removeClass(el, cls);\n  }\n\n  function whenTransitionEnds (\n    el,\n    expectedType,\n    cb\n  ) {\n    var ref = getTransitionInfo(el, expectedType);\n    var type = ref.type;\n    var timeout = ref.timeout;\n    var propCount = ref.propCount;\n    if (!type) { return cb() }\n    var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n    var ended = 0;\n    var end = function () {\n      el.removeEventListener(event, onEnd);\n      cb();\n    };\n    var onEnd = function (e) {\n      if (e.target === el) {\n        if (++ended >= propCount) {\n          end();\n        }\n      }\n    };\n    setTimeout(function () {\n      if (ended < propCount) {\n        end();\n      }\n    }, timeout + 1);\n    el.addEventListener(event, onEnd);\n  }\n\n  var transformRE = /\\b(transform|all)(,|$)/;\n\n  function getTransitionInfo (el, expectedType) {\n    var styles = window.getComputedStyle(el);\n    // JSDOM may return undefined for transition properties\n    var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n    var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n    var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n    var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n    var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n    var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n    var type;\n    var timeout = 0;\n    var propCount = 0;\n    /* istanbul ignore if */\n    if (expectedType === TRANSITION) {\n      if (transitionTimeout > 0) {\n        type = TRANSITION;\n        timeout = transitionTimeout;\n        propCount = transitionDurations.length;\n      }\n    } else if (expectedType === ANIMATION) {\n      if (animationTimeout > 0) {\n        type = ANIMATION;\n        timeout = animationTimeout;\n        propCount = animationDurations.length;\n      }\n    } else {\n      timeout = Math.max(transitionTimeout, animationTimeout);\n      type = timeout > 0\n        ? transitionTimeout > animationTimeout\n          ? TRANSITION\n          : ANIMATION\n        : null;\n      propCount = type\n        ? type === TRANSITION\n          ? transitionDurations.length\n          : animationDurations.length\n        : 0;\n    }\n    var hasTransform =\n      type === TRANSITION &&\n      transformRE.test(styles[transitionProp + 'Property']);\n    return {\n      type: type,\n      timeout: timeout,\n      propCount: propCount,\n      hasTransform: hasTransform\n    }\n  }\n\n  function getTimeout (delays, durations) {\n    /* istanbul ignore next */\n    while (delays.length < durations.length) {\n      delays = delays.concat(delays);\n    }\n\n    return Math.max.apply(null, durations.map(function (d, i) {\n      return toMs(d) + toMs(delays[i])\n    }))\n  }\n\n  // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n  // in a locale-dependent way, using a comma instead of a dot.\n  // If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n  // as a floor function) causing unexpected behaviors\n  function toMs (s) {\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000\n  }\n\n  /*  */\n\n  function enter (vnode, toggleDisplay) {\n    var el = vnode.elm;\n\n    // call leave callback now\n    if (isDef(el._leaveCb)) {\n      el._leaveCb.cancelled = true;\n      el._leaveCb();\n    }\n\n    var data = resolveTransition(vnode.data.transition);\n    if (isUndef(data)) {\n      return\n    }\n\n    /* istanbul ignore if */\n    if (isDef(el._enterCb) || el.nodeType !== 1) {\n      return\n    }\n\n    var css = data.css;\n    var type = data.type;\n    var enterClass = data.enterClass;\n    var enterToClass = data.enterToClass;\n    var enterActiveClass = data.enterActiveClass;\n    var appearClass = data.appearClass;\n    var appearToClass = data.appearToClass;\n    var appearActiveClass = data.appearActiveClass;\n    var beforeEnter = data.beforeEnter;\n    var enter = data.enter;\n    var afterEnter = data.afterEnter;\n    var enterCancelled = data.enterCancelled;\n    var beforeAppear = data.beforeAppear;\n    var appear = data.appear;\n    var afterAppear = data.afterAppear;\n    var appearCancelled = data.appearCancelled;\n    var duration = data.duration;\n\n    // activeInstance will always be the <transition> component managing this\n    // transition. One edge case to check is when the <transition> is placed\n    // as the root node of a child component. In that case we need to check\n    // <transition>'s parent for appear check.\n    var context = activeInstance;\n    var transitionNode = activeInstance.$vnode;\n    while (transitionNode && transitionNode.parent) {\n      context = transitionNode.context;\n      transitionNode = transitionNode.parent;\n    }\n\n    var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n    if (isAppear && !appear && appear !== '') {\n      return\n    }\n\n    var startClass = isAppear && appearClass\n      ? appearClass\n      : enterClass;\n    var activeClass = isAppear && appearActiveClass\n      ? appearActiveClass\n      : enterActiveClass;\n    var toClass = isAppear && appearToClass\n      ? appearToClass\n      : enterToClass;\n\n    var beforeEnterHook = isAppear\n      ? (beforeAppear || beforeEnter)\n      : beforeEnter;\n    var enterHook = isAppear\n      ? (typeof appear === 'function' ? appear : enter)\n      : enter;\n    var afterEnterHook = isAppear\n      ? (afterAppear || afterEnter)\n      : afterEnter;\n    var enterCancelledHook = isAppear\n      ? (appearCancelled || enterCancelled)\n      : enterCancelled;\n\n    var explicitEnterDuration = toNumber(\n      isObject(duration)\n        ? duration.enter\n        : duration\n    );\n\n    if (explicitEnterDuration != null) {\n      checkDuration(explicitEnterDuration, 'enter', vnode);\n    }\n\n    var expectsCSS = css !== false && !isIE9;\n    var userWantsControl = getHookArgumentsLength(enterHook);\n\n    var cb = el._enterCb = once(function () {\n      if (expectsCSS) {\n        removeTransitionClass(el, toClass);\n        removeTransitionClass(el, activeClass);\n      }\n      if (cb.cancelled) {\n        if (expectsCSS) {\n          removeTransitionClass(el, startClass);\n        }\n        enterCancelledHook && enterCancelledHook(el);\n      } else {\n        afterEnterHook && afterEnterHook(el);\n      }\n      el._enterCb = null;\n    });\n\n    if (!vnode.data.show) {\n      // remove pending leave element on enter by injecting an insert hook\n      mergeVNodeHook(vnode, 'insert', function () {\n        var parent = el.parentNode;\n        var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n        if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb\n        ) {\n          pendingNode.elm._leaveCb();\n        }\n        enterHook && enterHook(el, cb);\n      });\n    }\n\n    // start enter transition\n    beforeEnterHook && beforeEnterHook(el);\n    if (expectsCSS) {\n      addTransitionClass(el, startClass);\n      addTransitionClass(el, activeClass);\n      nextFrame(function () {\n        removeTransitionClass(el, startClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, toClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitEnterDuration)) {\n              setTimeout(cb, explicitEnterDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n\n    if (vnode.data.show) {\n      toggleDisplay && toggleDisplay();\n      enterHook && enterHook(el, cb);\n    }\n\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n\n  function leave (vnode, rm) {\n    var el = vnode.elm;\n\n    // call enter callback now\n    if (isDef(el._enterCb)) {\n      el._enterCb.cancelled = true;\n      el._enterCb();\n    }\n\n    var data = resolveTransition(vnode.data.transition);\n    if (isUndef(data) || el.nodeType !== 1) {\n      return rm()\n    }\n\n    /* istanbul ignore if */\n    if (isDef(el._leaveCb)) {\n      return\n    }\n\n    var css = data.css;\n    var type = data.type;\n    var leaveClass = data.leaveClass;\n    var leaveToClass = data.leaveToClass;\n    var leaveActiveClass = data.leaveActiveClass;\n    var beforeLeave = data.beforeLeave;\n    var leave = data.leave;\n    var afterLeave = data.afterLeave;\n    var leaveCancelled = data.leaveCancelled;\n    var delayLeave = data.delayLeave;\n    var duration = data.duration;\n\n    var expectsCSS = css !== false && !isIE9;\n    var userWantsControl = getHookArgumentsLength(leave);\n\n    var explicitLeaveDuration = toNumber(\n      isObject(duration)\n        ? duration.leave\n        : duration\n    );\n\n    if (isDef(explicitLeaveDuration)) {\n      checkDuration(explicitLeaveDuration, 'leave', vnode);\n    }\n\n    var cb = el._leaveCb = once(function () {\n      if (el.parentNode && el.parentNode._pending) {\n        el.parentNode._pending[vnode.key] = null;\n      }\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveActiveClass);\n      }\n      if (cb.cancelled) {\n        if (expectsCSS) {\n          removeTransitionClass(el, leaveClass);\n        }\n        leaveCancelled && leaveCancelled(el);\n      } else {\n        rm();\n        afterLeave && afterLeave(el);\n      }\n      el._leaveCb = null;\n    });\n\n    if (delayLeave) {\n      delayLeave(performLeave);\n    } else {\n      performLeave();\n    }\n\n    function performLeave () {\n      // the delayed leave may have already been cancelled\n      if (cb.cancelled) {\n        return\n      }\n      // record leaving element\n      if (!vnode.data.show && el.parentNode) {\n        (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n      }\n      beforeLeave && beforeLeave(el);\n      if (expectsCSS) {\n        addTransitionClass(el, leaveClass);\n        addTransitionClass(el, leaveActiveClass);\n        nextFrame(function () {\n          removeTransitionClass(el, leaveClass);\n          if (!cb.cancelled) {\n            addTransitionClass(el, leaveToClass);\n            if (!userWantsControl) {\n              if (isValidDuration(explicitLeaveDuration)) {\n                setTimeout(cb, explicitLeaveDuration);\n              } else {\n                whenTransitionEnds(el, type, cb);\n              }\n            }\n          }\n        });\n      }\n      leave && leave(el, cb);\n      if (!expectsCSS && !userWantsControl) {\n        cb();\n      }\n    }\n  }\n\n  // only used in dev mode\n  function checkDuration (val, name, vnode) {\n    if (typeof val !== 'number') {\n      warn(\n        \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n        \"got \" + (JSON.stringify(val)) + \".\",\n        vnode.context\n      );\n    } else if (isNaN(val)) {\n      warn(\n        \"<transition> explicit \" + name + \" duration is NaN - \" +\n        'the duration expression might be incorrect.',\n        vnode.context\n      );\n    }\n  }\n\n  function isValidDuration (val) {\n    return typeof val === 'number' && !isNaN(val)\n  }\n\n  /**\n   * Normalize a transition hook's argument length. The hook may be:\n   * - a merged hook (invoker) with the original in .fns\n   * - a wrapped component method (check ._length)\n   * - a plain function (.length)\n   */\n  function getHookArgumentsLength (fn) {\n    if (isUndef(fn)) {\n      return false\n    }\n    var invokerFns = fn.fns;\n    if (isDef(invokerFns)) {\n      // invoker\n      return getHookArgumentsLength(\n        Array.isArray(invokerFns)\n          ? invokerFns[0]\n          : invokerFns\n      )\n    } else {\n      return (fn._length || fn.length) > 1\n    }\n  }\n\n  function _enter (_, vnode) {\n    if (vnode.data.show !== true) {\n      enter(vnode);\n    }\n  }\n\n  var transition = inBrowser ? {\n    create: _enter,\n    activate: _enter,\n    remove: function remove$$1 (vnode, rm) {\n      /* istanbul ignore else */\n      if (vnode.data.show !== true) {\n        leave(vnode, rm);\n      } else {\n        rm();\n      }\n    }\n  } : {};\n\n  var platformModules = [\n    attrs,\n    klass,\n    events,\n    domProps,\n    style,\n    transition\n  ];\n\n  /*  */\n\n  // the directive module should be applied last, after all\n  // built-in modules have been applied.\n  var modules = platformModules.concat(baseModules);\n\n  var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n  /**\n   * Not type checking this file because flow doesn't like attaching\n   * properties to Elements.\n   */\n\n  /* istanbul ignore if */\n  if (isIE9) {\n    // http://www.matts411.com/post/internet-explorer-9-oninput/\n    document.addEventListener('selectionchange', function () {\n      var el = document.activeElement;\n      if (el && el.vmodel) {\n        trigger(el, 'input');\n      }\n    });\n  }\n\n  var directive = {\n    inserted: function inserted (el, binding, vnode, oldVnode) {\n      if (vnode.tag === 'select') {\n        // #6903\n        if (oldVnode.elm && !oldVnode.elm._vOptions) {\n          mergeVNodeHook(vnode, 'postpatch', function () {\n            directive.componentUpdated(el, binding, vnode);\n          });\n        } else {\n          setSelected(el, binding, vnode.context);\n        }\n        el._vOptions = [].map.call(el.options, getValue);\n      } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n        el._vModifiers = binding.modifiers;\n        if (!binding.modifiers.lazy) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n          // Safari < 10.2 & UIWebView doesn't fire compositionend when\n          // switching focus before confirming composition choice\n          // this also fixes the issue where some browsers e.g. iOS Chrome\n          // fires \"change\" instead of \"input\" on autocomplete.\n          el.addEventListener('change', onCompositionEnd);\n          /* istanbul ignore if */\n          if (isIE9) {\n            el.vmodel = true;\n          }\n        }\n      }\n    },\n\n    componentUpdated: function componentUpdated (el, binding, vnode) {\n      if (vnode.tag === 'select') {\n        setSelected(el, binding, vnode.context);\n        // in case the options rendered by v-for have changed,\n        // it's possible that the value is out-of-sync with the rendered options.\n        // detect such cases and filter out values that no longer has a matching\n        // option in the DOM.\n        var prevOptions = el._vOptions;\n        var curOptions = el._vOptions = [].map.call(el.options, getValue);\n        if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n          // trigger change event if\n          // no matching option found for at least one value\n          var needReset = el.multiple\n            ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n            : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n          if (needReset) {\n            trigger(el, 'change');\n          }\n        }\n      }\n    }\n  };\n\n  function setSelected (el, binding, vm) {\n    actuallySetSelected(el, binding, vm);\n    /* istanbul ignore if */\n    if (isIE || isEdge) {\n      setTimeout(function () {\n        actuallySetSelected(el, binding, vm);\n      }, 0);\n    }\n  }\n\n  function actuallySetSelected (el, binding, vm) {\n    var value = binding.value;\n    var isMultiple = el.multiple;\n    if (isMultiple && !Array.isArray(value)) {\n      warn(\n        \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n        \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n        vm\n      );\n      return\n    }\n    var selected, option;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      option = el.options[i];\n      if (isMultiple) {\n        selected = looseIndexOf(value, getValue(option)) > -1;\n        if (option.selected !== selected) {\n          option.selected = selected;\n        }\n      } else {\n        if (looseEqual(getValue(option), value)) {\n          if (el.selectedIndex !== i) {\n            el.selectedIndex = i;\n          }\n          return\n        }\n      }\n    }\n    if (!isMultiple) {\n      el.selectedIndex = -1;\n    }\n  }\n\n  function hasNoMatchingOption (value, options) {\n    return options.every(function (o) { return !looseEqual(o, value); })\n  }\n\n  function getValue (option) {\n    return '_value' in option\n      ? option._value\n      : option.value\n  }\n\n  function onCompositionStart (e) {\n    e.target.composing = true;\n  }\n\n  function onCompositionEnd (e) {\n    // prevent triggering an input event for no reason\n    if (!e.target.composing) { return }\n    e.target.composing = false;\n    trigger(e.target, 'input');\n  }\n\n  function trigger (el, type) {\n    var e = document.createEvent('HTMLEvents');\n    e.initEvent(type, true, true);\n    el.dispatchEvent(e);\n  }\n\n  /*  */\n\n  // recursively search for possible transition defined inside the component root\n  function locateNode (vnode) {\n    return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n      ? locateNode(vnode.componentInstance._vnode)\n      : vnode\n  }\n\n  var show = {\n    bind: function bind (el, ref, vnode) {\n      var value = ref.value;\n\n      vnode = locateNode(vnode);\n      var transition$$1 = vnode.data && vnode.data.transition;\n      var originalDisplay = el.__vOriginalDisplay =\n        el.style.display === 'none' ? '' : el.style.display;\n      if (value && transition$$1) {\n        vnode.data.show = true;\n        enter(vnode, function () {\n          el.style.display = originalDisplay;\n        });\n      } else {\n        el.style.display = value ? originalDisplay : 'none';\n      }\n    },\n\n    update: function update (el, ref, vnode) {\n      var value = ref.value;\n      var oldValue = ref.oldValue;\n\n      /* istanbul ignore if */\n      if (!value === !oldValue) { return }\n      vnode = locateNode(vnode);\n      var transition$$1 = vnode.data && vnode.data.transition;\n      if (transition$$1) {\n        vnode.data.show = true;\n        if (value) {\n          enter(vnode, function () {\n            el.style.display = el.__vOriginalDisplay;\n          });\n        } else {\n          leave(vnode, function () {\n            el.style.display = 'none';\n          });\n        }\n      } else {\n        el.style.display = value ? el.__vOriginalDisplay : 'none';\n      }\n    },\n\n    unbind: function unbind (\n      el,\n      binding,\n      vnode,\n      oldVnode,\n      isDestroy\n    ) {\n      if (!isDestroy) {\n        el.style.display = el.__vOriginalDisplay;\n      }\n    }\n  };\n\n  var platformDirectives = {\n    model: directive,\n    show: show\n  };\n\n  /*  */\n\n  var transitionProps = {\n    name: String,\n    appear: Boolean,\n    css: Boolean,\n    mode: String,\n    type: String,\n    enterClass: String,\n    leaveClass: String,\n    enterToClass: String,\n    leaveToClass: String,\n    enterActiveClass: String,\n    leaveActiveClass: String,\n    appearClass: String,\n    appearActiveClass: String,\n    appearToClass: String,\n    duration: [Number, String, Object]\n  };\n\n  // in case the child is also an abstract component, e.g. <keep-alive>\n  // we want to recursively retrieve the real component to be rendered\n  function getRealChild (vnode) {\n    var compOptions = vnode && vnode.componentOptions;\n    if (compOptions && compOptions.Ctor.options.abstract) {\n      return getRealChild(getFirstComponentChild(compOptions.children))\n    } else {\n      return vnode\n    }\n  }\n\n  function extractTransitionData (comp) {\n    var data = {};\n    var options = comp.$options;\n    // props\n    for (var key in options.propsData) {\n      data[key] = comp[key];\n    }\n    // events.\n    // extract listeners and pass them directly to the transition methods\n    var listeners = options._parentListeners;\n    for (var key$1 in listeners) {\n      data[camelize(key$1)] = listeners[key$1];\n    }\n    return data\n  }\n\n  function placeholder (h, rawChild) {\n    if (/\\d-keep-alive$/.test(rawChild.tag)) {\n      return h('keep-alive', {\n        props: rawChild.componentOptions.propsData\n      })\n    }\n  }\n\n  function hasParentTransition (vnode) {\n    while ((vnode = vnode.parent)) {\n      if (vnode.data.transition) {\n        return true\n      }\n    }\n  }\n\n  function isSameChild (child, oldChild) {\n    return oldChild.key === child.key && oldChild.tag === child.tag\n  }\n\n  var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\n  var isVShowDirective = function (d) { return d.name === 'show'; };\n\n  var Transition = {\n    name: 'transition',\n    props: transitionProps,\n    abstract: true,\n\n    render: function render (h) {\n      var this$1 = this;\n\n      var children = this.$slots.default;\n      if (!children) {\n        return\n      }\n\n      // filter out text nodes (possible whitespaces)\n      children = children.filter(isNotTextNode);\n      /* istanbul ignore if */\n      if (!children.length) {\n        return\n      }\n\n      // warn multiple elements\n      if (children.length > 1) {\n        warn(\n          '<transition> can only be used on a single element. Use ' +\n          '<transition-group> for lists.',\n          this.$parent\n        );\n      }\n\n      var mode = this.mode;\n\n      // warn invalid mode\n      if (mode && mode !== 'in-out' && mode !== 'out-in'\n      ) {\n        warn(\n          'invalid <transition> mode: ' + mode,\n          this.$parent\n        );\n      }\n\n      var rawChild = children[0];\n\n      // if this is a component root node and the component's\n      // parent container node also has transition, skip.\n      if (hasParentTransition(this.$vnode)) {\n        return rawChild\n      }\n\n      // apply transition data to child\n      // use getRealChild() to ignore abstract components e.g. keep-alive\n      var child = getRealChild(rawChild);\n      /* istanbul ignore if */\n      if (!child) {\n        return rawChild\n      }\n\n      if (this._leaving) {\n        return placeholder(h, rawChild)\n      }\n\n      // ensure a key that is unique to the vnode type and to this transition\n      // component instance. This key will be used to remove pending leaving nodes\n      // during entering.\n      var id = \"__transition-\" + (this._uid) + \"-\";\n      child.key = child.key == null\n        ? child.isComment\n          ? id + 'comment'\n          : id + child.tag\n        : isPrimitive(child.key)\n          ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n          : child.key;\n\n      var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n      var oldRawChild = this._vnode;\n      var oldChild = getRealChild(oldRawChild);\n\n      // mark v-show\n      // so that the transition module can hand over the control to the directive\n      if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n        child.data.show = true;\n      }\n\n      if (\n        oldChild &&\n        oldChild.data &&\n        !isSameChild(child, oldChild) &&\n        !isAsyncPlaceholder(oldChild) &&\n        // #6687 component root is a comment node\n        !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n      ) {\n        // replace old child transition data with fresh one\n        // important for dynamic transitions!\n        var oldData = oldChild.data.transition = extend({}, data);\n        // handle transition mode\n        if (mode === 'out-in') {\n          // return placeholder node and queue update when leave finishes\n          this._leaving = true;\n          mergeVNodeHook(oldData, 'afterLeave', function () {\n            this$1._leaving = false;\n            this$1.$forceUpdate();\n          });\n          return placeholder(h, rawChild)\n        } else if (mode === 'in-out') {\n          if (isAsyncPlaceholder(child)) {\n            return oldRawChild\n          }\n          var delayedLeave;\n          var performLeave = function () { delayedLeave(); };\n          mergeVNodeHook(data, 'afterEnter', performLeave);\n          mergeVNodeHook(data, 'enterCancelled', performLeave);\n          mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n        }\n      }\n\n      return rawChild\n    }\n  };\n\n  /*  */\n\n  var props = extend({\n    tag: String,\n    moveClass: String\n  }, transitionProps);\n\n  delete props.mode;\n\n  var TransitionGroup = {\n    props: props,\n\n    beforeMount: function beforeMount () {\n      var this$1 = this;\n\n      var update = this._update;\n      this._update = function (vnode, hydrating) {\n        var restoreActiveInstance = setActiveInstance(this$1);\n        // force removing pass\n        this$1.__patch__(\n          this$1._vnode,\n          this$1.kept,\n          false, // hydrating\n          true // removeOnly (!important, avoids unnecessary moves)\n        );\n        this$1._vnode = this$1.kept;\n        restoreActiveInstance();\n        update.call(this$1, vnode, hydrating);\n      };\n    },\n\n    render: function render (h) {\n      var tag = this.tag || this.$vnode.data.tag || 'span';\n      var map = Object.create(null);\n      var prevChildren = this.prevChildren = this.children;\n      var rawChildren = this.$slots.default || [];\n      var children = this.children = [];\n      var transitionData = extractTransitionData(this);\n\n      for (var i = 0; i < rawChildren.length; i++) {\n        var c = rawChildren[i];\n        if (c.tag) {\n          if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n            children.push(c);\n            map[c.key] = c\n            ;(c.data || (c.data = {})).transition = transitionData;\n          } else {\n            var opts = c.componentOptions;\n            var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n            warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n          }\n        }\n      }\n\n      if (prevChildren) {\n        var kept = [];\n        var removed = [];\n        for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n          var c$1 = prevChildren[i$1];\n          c$1.data.transition = transitionData;\n          c$1.data.pos = c$1.elm.getBoundingClientRect();\n          if (map[c$1.key]) {\n            kept.push(c$1);\n          } else {\n            removed.push(c$1);\n          }\n        }\n        this.kept = h(tag, null, kept);\n        this.removed = removed;\n      }\n\n      return h(tag, null, children)\n    },\n\n    updated: function updated () {\n      var children = this.prevChildren;\n      var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n      if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n        return\n      }\n\n      // we divide the work into three loops to avoid mixing DOM reads and writes\n      // in each iteration - which helps prevent layout thrashing.\n      children.forEach(callPendingCbs);\n      children.forEach(recordPosition);\n      children.forEach(applyTranslation);\n\n      // force reflow to put everything in position\n      // assign to this to avoid being removed in tree-shaking\n      // $flow-disable-line\n      this._reflow = document.body.offsetHeight;\n\n      children.forEach(function (c) {\n        if (c.data.moved) {\n          var el = c.elm;\n          var s = el.style;\n          addTransitionClass(el, moveClass);\n          s.transform = s.WebkitTransform = s.transitionDuration = '';\n          el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n            if (e && e.target !== el) {\n              return\n            }\n            if (!e || /transform$/.test(e.propertyName)) {\n              el.removeEventListener(transitionEndEvent, cb);\n              el._moveCb = null;\n              removeTransitionClass(el, moveClass);\n            }\n          });\n        }\n      });\n    },\n\n    methods: {\n      hasMove: function hasMove (el, moveClass) {\n        /* istanbul ignore if */\n        if (!hasTransition) {\n          return false\n        }\n        /* istanbul ignore if */\n        if (this._hasMove) {\n          return this._hasMove\n        }\n        // Detect whether an element with the move class applied has\n        // CSS transitions. Since the element may be inside an entering\n        // transition at this very moment, we make a clone of it and remove\n        // all other transition classes applied to ensure only the move class\n        // is applied.\n        var clone = el.cloneNode();\n        if (el._transitionClasses) {\n          el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n        }\n        addClass(clone, moveClass);\n        clone.style.display = 'none';\n        this.$el.appendChild(clone);\n        var info = getTransitionInfo(clone);\n        this.$el.removeChild(clone);\n        return (this._hasMove = info.hasTransform)\n      }\n    }\n  };\n\n  function callPendingCbs (c) {\n    /* istanbul ignore if */\n    if (c.elm._moveCb) {\n      c.elm._moveCb();\n    }\n    /* istanbul ignore if */\n    if (c.elm._enterCb) {\n      c.elm._enterCb();\n    }\n  }\n\n  function recordPosition (c) {\n    c.data.newPos = c.elm.getBoundingClientRect();\n  }\n\n  function applyTranslation (c) {\n    var oldPos = c.data.pos;\n    var newPos = c.data.newPos;\n    var dx = oldPos.left - newPos.left;\n    var dy = oldPos.top - newPos.top;\n    if (dx || dy) {\n      c.data.moved = true;\n      var s = c.elm.style;\n      s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n      s.transitionDuration = '0s';\n    }\n  }\n\n  var platformComponents = {\n    Transition: Transition,\n    TransitionGroup: TransitionGroup\n  };\n\n  /*  */\n\n  // install platform specific utils\n  Vue.config.mustUseProp = mustUseProp;\n  Vue.config.isReservedTag = isReservedTag;\n  Vue.config.isReservedAttr = isReservedAttr;\n  Vue.config.getTagNamespace = getTagNamespace;\n  Vue.config.isUnknownElement = isUnknownElement;\n\n  // install platform runtime directives & components\n  extend(Vue.options.directives, platformDirectives);\n  extend(Vue.options.components, platformComponents);\n\n  // install platform patch function\n  Vue.prototype.__patch__ = inBrowser ? patch : noop;\n\n  // public mount method\n  Vue.prototype.$mount = function (\n    el,\n    hydrating\n  ) {\n    el = el && inBrowser ? query(el) : undefined;\n    return mountComponent(this, el, hydrating)\n  };\n\n  // devtools global hook\n  /* istanbul ignore next */\n  if (inBrowser) {\n    setTimeout(function () {\n      if (config.devtools) {\n        if (devtools) {\n          devtools.emit('init', Vue);\n        } else {\n          console[console.info ? 'info' : 'log'](\n            'Download the Vue Devtools extension for a better development experience:\\n' +\n            'https://github.com/vuejs/vue-devtools'\n          );\n        }\n      }\n      if (config.productionTip !== false &&\n        typeof console !== 'undefined'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          \"You are running Vue in development mode.\\n\" +\n          \"Make sure to turn on production mode when deploying for production.\\n\" +\n          \"See more tips at https://vuejs.org/guide/deployment.html\"\n        );\n      }\n    }, 0);\n  }\n\n  /*  */\n\n  var defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\n  var buildRegex = cached(function (delimiters) {\n    var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n    var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n    return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n  });\n\n\n\n  function parseText (\n    text,\n    delimiters\n  ) {\n    var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n    if (!tagRE.test(text)) {\n      return\n    }\n    var tokens = [];\n    var rawTokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, tokenValue;\n    while ((match = tagRE.exec(text))) {\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        rawTokens.push(tokenValue = text.slice(lastIndex, index));\n        tokens.push(JSON.stringify(tokenValue));\n      }\n      // tag token\n      var exp = parseFilters(match[1].trim());\n      tokens.push((\"_s(\" + exp + \")\"));\n      rawTokens.push({ '@binding': exp });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      rawTokens.push(tokenValue = text.slice(lastIndex));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    return {\n      expression: tokens.join('+'),\n      tokens: rawTokens\n    }\n  }\n\n  /*  */\n\n  function transformNode (el, options) {\n    var warn = options.warn || baseWarn;\n    var staticClass = getAndRemoveAttr(el, 'class');\n    if (staticClass) {\n      var res = parseText(staticClass, options.delimiters);\n      if (res) {\n        warn(\n          \"class=\\\"\" + staticClass + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n          el.rawAttrsMap['class']\n        );\n      }\n    }\n    if (staticClass) {\n      el.staticClass = JSON.stringify(staticClass);\n    }\n    var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n    if (classBinding) {\n      el.classBinding = classBinding;\n    }\n  }\n\n  function genData (el) {\n    var data = '';\n    if (el.staticClass) {\n      data += \"staticClass:\" + (el.staticClass) + \",\";\n    }\n    if (el.classBinding) {\n      data += \"class:\" + (el.classBinding) + \",\";\n    }\n    return data\n  }\n\n  var klass$1 = {\n    staticKeys: ['staticClass'],\n    transformNode: transformNode,\n    genData: genData\n  };\n\n  /*  */\n\n  function transformNode$1 (el, options) {\n    var warn = options.warn || baseWarn;\n    var staticStyle = getAndRemoveAttr(el, 'style');\n    if (staticStyle) {\n      /* istanbul ignore if */\n      {\n        var res = parseText(staticStyle, options.delimiters);\n        if (res) {\n          warn(\n            \"style=\\\"\" + staticStyle + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n            el.rawAttrsMap['style']\n          );\n        }\n      }\n      el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n    }\n\n    var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n    if (styleBinding) {\n      el.styleBinding = styleBinding;\n    }\n  }\n\n  function genData$1 (el) {\n    var data = '';\n    if (el.staticStyle) {\n      data += \"staticStyle:\" + (el.staticStyle) + \",\";\n    }\n    if (el.styleBinding) {\n      data += \"style:(\" + (el.styleBinding) + \"),\";\n    }\n    return data\n  }\n\n  var style$1 = {\n    staticKeys: ['staticStyle'],\n    transformNode: transformNode$1,\n    genData: genData$1\n  };\n\n  /*  */\n\n  var decoder;\n\n  var he = {\n    decode: function decode (html) {\n      decoder = decoder || document.createElement('div');\n      decoder.innerHTML = html;\n      return decoder.textContent\n    }\n  };\n\n  /*  */\n\n  var isUnaryTag = makeMap(\n    'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n    'link,meta,param,source,track,wbr'\n  );\n\n  // Elements that you can, intentionally, leave open\n  // (and which close themselves)\n  var canBeLeftOpenTag = makeMap(\n    'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n  );\n\n  // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n  // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n  var isNonPhrasingTag = makeMap(\n    'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n    'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n    'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n    'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n    'title,tr,track'\n  );\n\n  /**\n   * Not type-checking this file because it's mostly vendor code.\n   */\n\n  // Regular Expressions for parsing tags and attributes\n  var attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n  var dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n  var ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\n  var qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\n  var startTagOpen = new RegExp((\"^<\" + qnameCapture));\n  var startTagClose = /^\\s*(\\/?)>/;\n  var endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\n  var doctype = /^<!DOCTYPE [^>]+>/i;\n  // #7298: escape - to avoid being passed as HTML comment when inlined in page\n  var comment = /^<!\\--/;\n  var conditionalComment = /^<!\\[/;\n\n  // Special Elements (can contain anything)\n  var isPlainTextElement = makeMap('script,style,textarea', true);\n  var reCache = {};\n\n  var decodingMap = {\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&amp;': '&',\n    '&#10;': '\\n',\n    '&#9;': '\\t',\n    '&#39;': \"'\"\n  };\n  var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\n  var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n  // #5992\n  var isIgnoreNewlineTag = makeMap('pre,textarea', true);\n  var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\n  function decodeAttr (value, shouldDecodeNewlines) {\n    var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n    return value.replace(re, function (match) { return decodingMap[match]; })\n  }\n\n  function parseHTML (html, options) {\n    var stack = [];\n    var expectHTML = options.expectHTML;\n    var isUnaryTag$$1 = options.isUnaryTag || no;\n    var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n    var index = 0;\n    var last, lastTag;\n    while (html) {\n      last = html;\n      // Make sure we're not in a plaintext content element like script/style\n      if (!lastTag || !isPlainTextElement(lastTag)) {\n        var textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n          // Comment:\n          if (comment.test(html)) {\n            var commentEnd = html.indexOf('-->');\n\n            if (commentEnd >= 0) {\n              if (options.shouldKeepComment) {\n                options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n              }\n              advance(commentEnd + 3);\n              continue\n            }\n          }\n\n          // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n          if (conditionalComment.test(html)) {\n            var conditionalEnd = html.indexOf(']>');\n\n            if (conditionalEnd >= 0) {\n              advance(conditionalEnd + 2);\n              continue\n            }\n          }\n\n          // Doctype:\n          var doctypeMatch = html.match(doctype);\n          if (doctypeMatch) {\n            advance(doctypeMatch[0].length);\n            continue\n          }\n\n          // End tag:\n          var endTagMatch = html.match(endTag);\n          if (endTagMatch) {\n            var curIndex = index;\n            advance(endTagMatch[0].length);\n            parseEndTag(endTagMatch[1], curIndex, index);\n            continue\n          }\n\n          // Start tag:\n          var startTagMatch = parseStartTag();\n          if (startTagMatch) {\n            handleStartTag(startTagMatch);\n            if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n              advance(1);\n            }\n            continue\n          }\n        }\n\n        var text = (void 0), rest = (void 0), next = (void 0);\n        if (textEnd >= 0) {\n          rest = html.slice(textEnd);\n          while (\n            !endTag.test(rest) &&\n            !startTagOpen.test(rest) &&\n            !comment.test(rest) &&\n            !conditionalComment.test(rest)\n          ) {\n            // < in plain text, be forgiving and treat it as text\n            next = rest.indexOf('<', 1);\n            if (next < 0) { break }\n            textEnd += next;\n            rest = html.slice(textEnd);\n          }\n          text = html.substring(0, textEnd);\n        }\n\n        if (textEnd < 0) {\n          text = html;\n        }\n\n        if (text) {\n          advance(text.length);\n        }\n\n        if (options.chars && text) {\n          options.chars(text, index - text.length, index);\n        }\n      } else {\n        var endTagLength = 0;\n        var stackedTag = lastTag.toLowerCase();\n        var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n        var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n          endTagLength = endTag.length;\n          if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n            text = text\n              .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n              .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n          }\n          if (shouldIgnoreFirstNewline(stackedTag, text)) {\n            text = text.slice(1);\n          }\n          if (options.chars) {\n            options.chars(text);\n          }\n          return ''\n        });\n        index += html.length - rest$1.length;\n        html = rest$1;\n        parseEndTag(stackedTag, index - endTagLength, index);\n      }\n\n      if (html === last) {\n        options.chars && options.chars(html);\n        if (!stack.length && options.warn) {\n          options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n        }\n        break\n      }\n    }\n\n    // Clean up any remaining tags\n    parseEndTag();\n\n    function advance (n) {\n      index += n;\n      html = html.substring(n);\n    }\n\n    function parseStartTag () {\n      var start = html.match(startTagOpen);\n      if (start) {\n        var match = {\n          tagName: start[1],\n          attrs: [],\n          start: index\n        };\n        advance(start[0].length);\n        var end, attr;\n        while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n          attr.start = index;\n          advance(attr[0].length);\n          attr.end = index;\n          match.attrs.push(attr);\n        }\n        if (end) {\n          match.unarySlash = end[1];\n          advance(end[0].length);\n          match.end = index;\n          return match\n        }\n      }\n    }\n\n    function handleStartTag (match) {\n      var tagName = match.tagName;\n      var unarySlash = match.unarySlash;\n\n      if (expectHTML) {\n        if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n          parseEndTag(lastTag);\n        }\n        if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n          parseEndTag(tagName);\n        }\n      }\n\n      var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n      var l = match.attrs.length;\n      var attrs = new Array(l);\n      for (var i = 0; i < l; i++) {\n        var args = match.attrs[i];\n        var value = args[3] || args[4] || args[5] || '';\n        var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n          ? options.shouldDecodeNewlinesForHref\n          : options.shouldDecodeNewlines;\n        attrs[i] = {\n          name: args[1],\n          value: decodeAttr(value, shouldDecodeNewlines)\n        };\n        if (options.outputSourceRange) {\n          attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n          attrs[i].end = args.end;\n        }\n      }\n\n      if (!unary) {\n        stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n        lastTag = tagName;\n      }\n\n      if (options.start) {\n        options.start(tagName, attrs, unary, match.start, match.end);\n      }\n    }\n\n    function parseEndTag (tagName, start, end) {\n      var pos, lowerCasedTagName;\n      if (start == null) { start = index; }\n      if (end == null) { end = index; }\n\n      // Find the closest opened tag of the same type\n      if (tagName) {\n        lowerCasedTagName = tagName.toLowerCase();\n        for (pos = stack.length - 1; pos >= 0; pos--) {\n          if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n            break\n          }\n        }\n      } else {\n        // If no tag name is provided, clean shop\n        pos = 0;\n      }\n\n      if (pos >= 0) {\n        // Close all the open elements, up the stack\n        for (var i = stack.length - 1; i >= pos; i--) {\n          if (i > pos || !tagName &&\n            options.warn\n          ) {\n            options.warn(\n              (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n              { start: stack[i].start, end: stack[i].end }\n            );\n          }\n          if (options.end) {\n            options.end(stack[i].tag, start, end);\n          }\n        }\n\n        // Remove the open elements from the stack\n        stack.length = pos;\n        lastTag = pos && stack[pos - 1].tag;\n      } else if (lowerCasedTagName === 'br') {\n        if (options.start) {\n          options.start(tagName, [], true, start, end);\n        }\n      } else if (lowerCasedTagName === 'p') {\n        if (options.start) {\n          options.start(tagName, [], false, start, end);\n        }\n        if (options.end) {\n          options.end(tagName, start, end);\n        }\n      }\n    }\n  }\n\n  /*  */\n\n  var onRE = /^@|^v-on:/;\n  var dirRE = /^v-|^@|^:|^#/;\n  var forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n  var forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n  var stripParensRE = /^\\(|\\)$/g;\n  var dynamicArgRE = /^\\[.*\\]$/;\n\n  var argRE = /:(.*)$/;\n  var bindRE = /^:|^\\.|^v-bind:/;\n  var modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\n  var slotRE = /^v-slot(:|$)|^#/;\n\n  var lineBreakRE = /[\\r\\n]/;\n  var whitespaceRE$1 = /[ \\f\\t\\r\\n]+/g;\n\n  var invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\n  var decodeHTMLCached = cached(he.decode);\n\n  var emptySlotScopeToken = \"_empty_\";\n\n  // configurable state\n  var warn$2;\n  var delimiters;\n  var transforms;\n  var preTransforms;\n  var postTransforms;\n  var platformIsPreTag;\n  var platformMustUseProp;\n  var platformGetTagNamespace;\n  var maybeComponent;\n\n  function createASTElement (\n    tag,\n    attrs,\n    parent\n  ) {\n    return {\n      type: 1,\n      tag: tag,\n      attrsList: attrs,\n      attrsMap: makeAttrsMap(attrs),\n      rawAttrsMap: {},\n      parent: parent,\n      children: []\n    }\n  }\n\n  /**\n   * Convert HTML string to AST.\n   */\n  function parse (\n    template,\n    options\n  ) {\n    warn$2 = options.warn || baseWarn;\n\n    platformIsPreTag = options.isPreTag || no;\n    platformMustUseProp = options.mustUseProp || no;\n    platformGetTagNamespace = options.getTagNamespace || no;\n    var isReservedTag = options.isReservedTag || no;\n    maybeComponent = function (el) { return !!(\n      el.component ||\n      el.attrsMap[':is'] ||\n      el.attrsMap['v-bind:is'] ||\n      !(el.attrsMap.is ? isReservedTag(el.attrsMap.is) : isReservedTag(el.tag))\n    ); };\n    transforms = pluckModuleFunction(options.modules, 'transformNode');\n    preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n    postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n    delimiters = options.delimiters;\n\n    var stack = [];\n    var preserveWhitespace = options.preserveWhitespace !== false;\n    var whitespaceOption = options.whitespace;\n    var root;\n    var currentParent;\n    var inVPre = false;\n    var inPre = false;\n    var warned = false;\n\n    function warnOnce (msg, range) {\n      if (!warned) {\n        warned = true;\n        warn$2(msg, range);\n      }\n    }\n\n    function closeElement (element) {\n      trimEndingWhitespace(element);\n      if (!inVPre && !element.processed) {\n        element = processElement(element, options);\n      }\n      // tree management\n      if (!stack.length && element !== root) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          {\n            checkRootConstraints(element);\n          }\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\",\n            { start: element.start }\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else {\n          if (element.slotScope) {\n            // scoped slot\n            // keep it in the children list so that v-else(-if) conditions can\n            // find it as the prev node.\n            var name = element.slotTarget || '\"default\"'\n            ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n          }\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n\n      // final children cleanup\n      // filter out scoped slots\n      element.children = element.children.filter(function (c) { return !(c).slotScope; });\n      // remove trailing whitespace node again\n      trimEndingWhitespace(element);\n\n      // check pre state\n      if (element.pre) {\n        inVPre = false;\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = false;\n      }\n      // apply post-transforms\n      for (var i = 0; i < postTransforms.length; i++) {\n        postTransforms[i](element, options);\n      }\n    }\n\n    function trimEndingWhitespace (el) {\n      // remove trailing whitespace node\n      if (!inPre) {\n        var lastNode;\n        while (\n          (lastNode = el.children[el.children.length - 1]) &&\n          lastNode.type === 3 &&\n          lastNode.text === ' '\n        ) {\n          el.children.pop();\n        }\n      }\n    }\n\n    function checkRootConstraints (el) {\n      if (el.tag === 'slot' || el.tag === 'template') {\n        warnOnce(\n          \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n          'contain multiple nodes.',\n          { start: el.start }\n        );\n      }\n      if (el.attrsMap.hasOwnProperty('v-for')) {\n        warnOnce(\n          'Cannot use v-for on stateful component root element because ' +\n          'it renders multiple elements.',\n          el.rawAttrsMap['v-for']\n        );\n      }\n    }\n\n    parseHTML(template, {\n      warn: warn$2,\n      expectHTML: options.expectHTML,\n      isUnaryTag: options.isUnaryTag,\n      canBeLeftOpenTag: options.canBeLeftOpenTag,\n      shouldDecodeNewlines: options.shouldDecodeNewlines,\n      shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n      shouldKeepComment: options.comments,\n      outputSourceRange: options.outputSourceRange,\n      start: function start (tag, attrs, unary, start$1, end) {\n        // check namespace.\n        // inherit parent ns if there is one\n        var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n        // handle IE svg bug\n        /* istanbul ignore if */\n        if (isIE && ns === 'svg') {\n          attrs = guardIESVGBug(attrs);\n        }\n\n        var element = createASTElement(tag, attrs, currentParent);\n        if (ns) {\n          element.ns = ns;\n        }\n\n        {\n          if (options.outputSourceRange) {\n            element.start = start$1;\n            element.end = end;\n            element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n              cumulated[attr.name] = attr;\n              return cumulated\n            }, {});\n          }\n          attrs.forEach(function (attr) {\n            if (invalidAttributeRE.test(attr.name)) {\n              warn$2(\n                \"Invalid dynamic argument expression: attribute names cannot contain \" +\n                \"spaces, quotes, <, >, / or =.\",\n                {\n                  start: attr.start + attr.name.indexOf(\"[\"),\n                  end: attr.start + attr.name.length\n                }\n              );\n            }\n          });\n        }\n\n        if (isForbiddenTag(element) && !isServerRendering()) {\n          element.forbidden = true;\n          warn$2(\n            'Templates should only be responsible for mapping the state to the ' +\n            'UI. Avoid placing tags with side-effects in your templates, such as ' +\n            \"<\" + tag + \">\" + ', as they will not be parsed.',\n            { start: element.start }\n          );\n        }\n\n        // apply pre-transforms\n        for (var i = 0; i < preTransforms.length; i++) {\n          element = preTransforms[i](element, options) || element;\n        }\n\n        if (!inVPre) {\n          processPre(element);\n          if (element.pre) {\n            inVPre = true;\n          }\n        }\n        if (platformIsPreTag(element.tag)) {\n          inPre = true;\n        }\n        if (inVPre) {\n          processRawAttrs(element);\n        } else if (!element.processed) {\n          // structural directives\n          processFor(element);\n          processIf(element);\n          processOnce(element);\n        }\n\n        if (!root) {\n          root = element;\n          {\n            checkRootConstraints(root);\n          }\n        }\n\n        if (!unary) {\n          currentParent = element;\n          stack.push(element);\n        } else {\n          closeElement(element);\n        }\n      },\n\n      end: function end (tag, start, end$1) {\n        var element = stack[stack.length - 1];\n        // pop stack\n        stack.length -= 1;\n        currentParent = stack[stack.length - 1];\n        if (options.outputSourceRange) {\n          element.end = end$1;\n        }\n        closeElement(element);\n      },\n\n      chars: function chars (text, start, end) {\n        if (!currentParent) {\n          {\n            if (text === template) {\n              warnOnce(\n                'Component template requires a root element, rather than just text.',\n                { start: start }\n              );\n            } else if ((text = text.trim())) {\n              warnOnce(\n                (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n                { start: start }\n              );\n            }\n          }\n          return\n        }\n        // IE textarea placeholder bug\n        /* istanbul ignore if */\n        if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text\n        ) {\n          return\n        }\n        var children = currentParent.children;\n        if (inPre || text.trim()) {\n          text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n        } else if (!children.length) {\n          // remove the whitespace-only node right after an opening tag\n          text = '';\n        } else if (whitespaceOption) {\n          if (whitespaceOption === 'condense') {\n            // in condense mode, remove the whitespace node if it contains\n            // line break, otherwise condense to a single space\n            text = lineBreakRE.test(text) ? '' : ' ';\n          } else {\n            text = ' ';\n          }\n        } else {\n          text = preserveWhitespace ? ' ' : '';\n        }\n        if (text) {\n          if (!inPre && whitespaceOption === 'condense') {\n            // condense consecutive whitespaces into single space\n            text = text.replace(whitespaceRE$1, ' ');\n          }\n          var res;\n          var child;\n          if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n            child = {\n              type: 2,\n              expression: res.expression,\n              tokens: res.tokens,\n              text: text\n            };\n          } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n            child = {\n              type: 3,\n              text: text\n            };\n          }\n          if (child) {\n            if (options.outputSourceRange) {\n              child.start = start;\n              child.end = end;\n            }\n            children.push(child);\n          }\n        }\n      },\n      comment: function comment (text, start, end) {\n        // adding anything as a sibling to the root node is forbidden\n        // comments should still be allowed, but ignored\n        if (currentParent) {\n          var child = {\n            type: 3,\n            text: text,\n            isComment: true\n          };\n          if (options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          currentParent.children.push(child);\n        }\n      }\n    });\n    return root\n  }\n\n  function processPre (el) {\n    if (getAndRemoveAttr(el, 'v-pre') != null) {\n      el.pre = true;\n    }\n  }\n\n  function processRawAttrs (el) {\n    var list = el.attrsList;\n    var len = list.length;\n    if (len) {\n      var attrs = el.attrs = new Array(len);\n      for (var i = 0; i < len; i++) {\n        attrs[i] = {\n          name: list[i].name,\n          value: JSON.stringify(list[i].value)\n        };\n        if (list[i].start != null) {\n          attrs[i].start = list[i].start;\n          attrs[i].end = list[i].end;\n        }\n      }\n    } else if (!el.pre) {\n      // non root node in pre blocks with no attributes\n      el.plain = true;\n    }\n  }\n\n  function processElement (\n    element,\n    options\n  ) {\n    processKey(element);\n\n    // determine whether this is a plain element after\n    // removing structural attributes\n    element.plain = (\n      !element.key &&\n      !element.scopedSlots &&\n      !element.attrsList.length\n    );\n\n    processRef(element);\n    processSlotContent(element);\n    processSlotOutlet(element);\n    processComponent(element);\n    for (var i = 0; i < transforms.length; i++) {\n      element = transforms[i](element, options) || element;\n    }\n    processAttrs(element);\n    return element\n  }\n\n  function processKey (el) {\n    var exp = getBindingAttr(el, 'key');\n    if (exp) {\n      {\n        if (el.tag === 'template') {\n          warn$2(\n            \"<template> cannot be keyed. Place the key on real elements instead.\",\n            getRawBindingAttr(el, 'key')\n          );\n        }\n        if (el.for) {\n          var iterator = el.iterator2 || el.iterator1;\n          var parent = el.parent;\n          if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n            warn$2(\n              \"Do not use v-for index as key on <transition-group> children, \" +\n              \"this is the same as not using keys.\",\n              getRawBindingAttr(el, 'key'),\n              true /* tip */\n            );\n          }\n        }\n      }\n      el.key = exp;\n    }\n  }\n\n  function processRef (el) {\n    var ref = getBindingAttr(el, 'ref');\n    if (ref) {\n      el.ref = ref;\n      el.refInFor = checkInFor(el);\n    }\n  }\n\n  function processFor (el) {\n    var exp;\n    if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n      var res = parseFor(exp);\n      if (res) {\n        extend(el, res);\n      } else {\n        warn$2(\n          (\"Invalid v-for expression: \" + exp),\n          el.rawAttrsMap['v-for']\n        );\n      }\n    }\n  }\n\n\n\n  function parseFor (exp) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) { return }\n    var res = {};\n    res.for = inMatch[2].trim();\n    var alias = inMatch[1].trim().replace(stripParensRE, '');\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      res.alias = alias.replace(forIteratorRE, '').trim();\n      res.iterator1 = iteratorMatch[1].trim();\n      if (iteratorMatch[2]) {\n        res.iterator2 = iteratorMatch[2].trim();\n      }\n    } else {\n      res.alias = alias;\n    }\n    return res\n  }\n\n  function processIf (el) {\n    var exp = getAndRemoveAttr(el, 'v-if');\n    if (exp) {\n      el.if = exp;\n      addIfCondition(el, {\n        exp: exp,\n        block: el\n      });\n    } else {\n      if (getAndRemoveAttr(el, 'v-else') != null) {\n        el.else = true;\n      }\n      var elseif = getAndRemoveAttr(el, 'v-else-if');\n      if (elseif) {\n        el.elseif = elseif;\n      }\n    }\n  }\n\n  function processIfConditions (el, parent) {\n    var prev = findPrevElement(parent.children);\n    if (prev && prev.if) {\n      addIfCondition(prev, {\n        exp: el.elseif,\n        block: el\n      });\n    } else {\n      warn$2(\n        \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n        \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n        el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n      );\n    }\n  }\n\n  function findPrevElement (children) {\n    var i = children.length;\n    while (i--) {\n      if (children[i].type === 1) {\n        return children[i]\n      } else {\n        if (children[i].text !== ' ') {\n          warn$2(\n            \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n            \"will be ignored.\",\n            children[i]\n          );\n        }\n        children.pop();\n      }\n    }\n  }\n\n  function addIfCondition (el, condition) {\n    if (!el.ifConditions) {\n      el.ifConditions = [];\n    }\n    el.ifConditions.push(condition);\n  }\n\n  function processOnce (el) {\n    var once$$1 = getAndRemoveAttr(el, 'v-once');\n    if (once$$1 != null) {\n      el.once = true;\n    }\n  }\n\n  // handle content being passed to a component as slot,\n  // e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\n  function processSlotContent (el) {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          el.rawAttrsMap['scope'],\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          el.rawAttrsMap['slot-scope'],\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n\n    // slot=\"xxx\"\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n      }\n    }\n\n    // 2.6 v-slot syntax\n    {\n      if (el.tag === 'template') {\n        // v-slot on <template>\n        var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n        if (slotBinding) {\n          {\n            if (el.slotTarget || el.slotScope) {\n              warn$2(\n                \"Unexpected mixed usage of different slot syntaxes.\",\n                el\n              );\n            }\n            if (el.parent && !maybeComponent(el.parent)) {\n              warn$2(\n                \"<template v-slot> can only appear at the root level inside \" +\n                \"the receiving component\",\n                el\n              );\n            }\n          }\n          var ref = getSlotName(slotBinding);\n          var name = ref.name;\n          var dynamic = ref.dynamic;\n          el.slotTarget = name;\n          el.slotTargetDynamic = dynamic;\n          el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n        }\n      } else {\n        // v-slot on component, denotes default slot\n        var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n        if (slotBinding$1) {\n          {\n            if (!maybeComponent(el)) {\n              warn$2(\n                \"v-slot can only be used on components or <template>.\",\n                slotBinding$1\n              );\n            }\n            if (el.slotScope || el.slotTarget) {\n              warn$2(\n                \"Unexpected mixed usage of different slot syntaxes.\",\n                el\n              );\n            }\n            if (el.scopedSlots) {\n              warn$2(\n                \"To avoid scope ambiguity, the default slot should also use \" +\n                \"<template> syntax when there are other named slots.\",\n                slotBinding$1\n              );\n            }\n          }\n          // add the component's children to its default slot\n          var slots = el.scopedSlots || (el.scopedSlots = {});\n          var ref$1 = getSlotName(slotBinding$1);\n          var name$1 = ref$1.name;\n          var dynamic$1 = ref$1.dynamic;\n          var slotContainer = slots[name$1] = createASTElement('template', [], el);\n          slotContainer.slotTarget = name$1;\n          slotContainer.slotTargetDynamic = dynamic$1;\n          slotContainer.children = el.children.filter(function (c) {\n            if (!c.slotScope) {\n              c.parent = slotContainer;\n              return true\n            }\n          });\n          slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n          // remove children as they are returned from scopedSlots now\n          el.children = [];\n          // mark el non-plain so data gets generated\n          el.plain = false;\n        }\n      }\n    }\n  }\n\n  function getSlotName (binding) {\n    var name = binding.name.replace(slotRE, '');\n    if (!name) {\n      if (binding.name[0] !== '#') {\n        name = 'default';\n      } else {\n        warn$2(\n          \"v-slot shorthand syntax requires a slot name.\",\n          binding\n        );\n      }\n    }\n    return dynamicArgRE.test(name)\n      // dynamic [name]\n      ? { name: name.slice(1, -1), dynamic: true }\n      // static name\n      : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n  }\n\n  // handle <slot/> outlets\n  function processSlotOutlet (el) {\n    if (el.tag === 'slot') {\n      el.slotName = getBindingAttr(el, 'name');\n      if (el.key) {\n        warn$2(\n          \"`key` does not work on <slot> because slots are abstract outlets \" +\n          \"and can possibly expand into multiple elements. \" +\n          \"Use the key on a wrapping element instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n    }\n  }\n\n  function processComponent (el) {\n    var binding;\n    if ((binding = getBindingAttr(el, 'is'))) {\n      el.component = binding;\n    }\n    if (getAndRemoveAttr(el, 'inline-template') != null) {\n      el.inlineTemplate = true;\n    }\n  }\n\n  function processAttrs (el) {\n    var list = el.attrsList;\n    var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n    for (i = 0, l = list.length; i < l; i++) {\n      name = rawName = list[i].name;\n      value = list[i].value;\n      if (dirRE.test(name)) {\n        // mark element as dynamic\n        el.hasBindings = true;\n        // modifiers\n        modifiers = parseModifiers(name.replace(dirRE, ''));\n        // support .foo shorthand syntax for the .prop modifier\n        if (modifiers) {\n          name = name.replace(modifierRE, '');\n        }\n        if (bindRE.test(name)) { // v-bind\n          name = name.replace(bindRE, '');\n          value = parseFilters(value);\n          isDynamic = dynamicArgRE.test(name);\n          if (isDynamic) {\n            name = name.slice(1, -1);\n          }\n          if (\n            value.trim().length === 0\n          ) {\n            warn$2(\n              (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n            );\n          }\n          if (modifiers) {\n            if (modifiers.prop && !isDynamic) {\n              name = camelize(name);\n              if (name === 'innerHtml') { name = 'innerHTML'; }\n            }\n            if (modifiers.camel && !isDynamic) {\n              name = camelize(name);\n            }\n            if (modifiers.sync) {\n              syncGen = genAssignmentCode(value, \"$event\");\n              if (!isDynamic) {\n                addHandler(\n                  el,\n                  (\"update:\" + (camelize(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n                if (hyphenate(name) !== camelize(name)) {\n                  addHandler(\n                    el,\n                    (\"update:\" + (hyphenate(name))),\n                    syncGen,\n                    null,\n                    false,\n                    warn$2,\n                    list[i]\n                  );\n                }\n              } else {\n                // handler w/ dynamic event name\n                addHandler(\n                  el,\n                  (\"\\\"update:\\\"+(\" + name + \")\"),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i],\n                  true // dynamic\n                );\n              }\n            }\n          }\n          if ((modifiers && modifiers.prop) || (\n            !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n          )) {\n            addProp(el, name, value, list[i], isDynamic);\n          } else {\n            addAttr(el, name, value, list[i], isDynamic);\n          }\n        } else if (onRE.test(name)) { // v-on\n          name = name.replace(onRE, '');\n          isDynamic = dynamicArgRE.test(name);\n          if (isDynamic) {\n            name = name.slice(1, -1);\n          }\n          addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n        } else { // normal directives\n          name = name.replace(dirRE, '');\n          // parse arg\n          var argMatch = name.match(argRE);\n          var arg = argMatch && argMatch[1];\n          isDynamic = false;\n          if (arg) {\n            name = name.slice(0, -(arg.length + 1));\n            if (dynamicArgRE.test(arg)) {\n              arg = arg.slice(1, -1);\n              isDynamic = true;\n            }\n          }\n          addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n          if (name === 'model') {\n            checkForAliasModel(el, value);\n          }\n        }\n      } else {\n        // literal attribute\n        {\n          var res = parseText(value, delimiters);\n          if (res) {\n            warn$2(\n              name + \"=\\\"\" + value + \"\\\": \" +\n              'Interpolation inside attributes has been removed. ' +\n              'Use v-bind or the colon shorthand instead. For example, ' +\n              'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n              list[i]\n            );\n          }\n        }\n        addAttr(el, name, JSON.stringify(value), list[i]);\n        // #6887 firefox doesn't update muted state if set via attribute\n        // even immediately after element creation\n        if (!el.component &&\n            name === 'muted' &&\n            platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, 'true', list[i]);\n        }\n      }\n    }\n  }\n\n  function checkInFor (el) {\n    var parent = el;\n    while (parent) {\n      if (parent.for !== undefined) {\n        return true\n      }\n      parent = parent.parent;\n    }\n    return false\n  }\n\n  function parseModifiers (name) {\n    var match = name.match(modifierRE);\n    if (match) {\n      var ret = {};\n      match.forEach(function (m) { ret[m.slice(1)] = true; });\n      return ret\n    }\n  }\n\n  function makeAttrsMap (attrs) {\n    var map = {};\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      if (\n        map[attrs[i].name] && !isIE && !isEdge\n      ) {\n        warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n      }\n      map[attrs[i].name] = attrs[i].value;\n    }\n    return map\n  }\n\n  // for script (e.g. type=\"x/template\") or style, do not decode content\n  function isTextTag (el) {\n    return el.tag === 'script' || el.tag === 'style'\n  }\n\n  function isForbiddenTag (el) {\n    return (\n      el.tag === 'style' ||\n      (el.tag === 'script' && (\n        !el.attrsMap.type ||\n        el.attrsMap.type === 'text/javascript'\n      ))\n    )\n  }\n\n  var ieNSBug = /^xmlns:NS\\d+/;\n  var ieNSPrefix = /^NS\\d+:/;\n\n  /* istanbul ignore next */\n  function guardIESVGBug (attrs) {\n    var res = [];\n    for (var i = 0; i < attrs.length; i++) {\n      var attr = attrs[i];\n      if (!ieNSBug.test(attr.name)) {\n        attr.name = attr.name.replace(ieNSPrefix, '');\n        res.push(attr);\n      }\n    }\n    return res\n  }\n\n  function checkForAliasModel (el, value) {\n    var _el = el;\n    while (_el) {\n      if (_el.for && _el.alias === value) {\n        warn$2(\n          \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n          \"You are binding v-model directly to a v-for iteration alias. \" +\n          \"This will not be able to modify the v-for source array because \" +\n          \"writing to the alias is like modifying a function local variable. \" +\n          \"Consider using an array of objects and use v-model on an object property instead.\",\n          el.rawAttrsMap['v-model']\n        );\n      }\n      _el = _el.parent;\n    }\n  }\n\n  /*  */\n\n  function preTransformNode (el, options) {\n    if (el.tag === 'input') {\n      var map = el.attrsMap;\n      if (!map['v-model']) {\n        return\n      }\n\n      var typeBinding;\n      if (map[':type'] || map['v-bind:type']) {\n        typeBinding = getBindingAttr(el, 'type');\n      }\n      if (!map.type && !typeBinding && map['v-bind']) {\n        typeBinding = \"(\" + (map['v-bind']) + \").type\";\n      }\n\n      if (typeBinding) {\n        var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n        var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n        var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n        var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n        // 1. checkbox\n        var branch0 = cloneASTElement(el);\n        // process for on the main node\n        processFor(branch0);\n        addRawAttr(branch0, 'type', 'checkbox');\n        processElement(branch0, options);\n        branch0.processed = true; // prevent it from double-processed\n        branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n        addIfCondition(branch0, {\n          exp: branch0.if,\n          block: branch0\n        });\n        // 2. add radio else-if condition\n        var branch1 = cloneASTElement(el);\n        getAndRemoveAttr(branch1, 'v-for', true);\n        addRawAttr(branch1, 'type', 'radio');\n        processElement(branch1, options);\n        addIfCondition(branch0, {\n          exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n          block: branch1\n        });\n        // 3. other\n        var branch2 = cloneASTElement(el);\n        getAndRemoveAttr(branch2, 'v-for', true);\n        addRawAttr(branch2, ':type', typeBinding);\n        processElement(branch2, options);\n        addIfCondition(branch0, {\n          exp: ifCondition,\n          block: branch2\n        });\n\n        if (hasElse) {\n          branch0.else = true;\n        } else if (elseIfCondition) {\n          branch0.elseif = elseIfCondition;\n        }\n\n        return branch0\n      }\n    }\n  }\n\n  function cloneASTElement (el) {\n    return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n  }\n\n  var model$1 = {\n    preTransformNode: preTransformNode\n  };\n\n  var modules$1 = [\n    klass$1,\n    style$1,\n    model$1\n  ];\n\n  /*  */\n\n  function text (el, dir) {\n    if (dir.value) {\n      addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n    }\n  }\n\n  /*  */\n\n  function html (el, dir) {\n    if (dir.value) {\n      addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n    }\n  }\n\n  var directives$1 = {\n    model: model,\n    text: text,\n    html: html\n  };\n\n  /*  */\n\n  var baseOptions = {\n    expectHTML: true,\n    modules: modules$1,\n    directives: directives$1,\n    isPreTag: isPreTag,\n    isUnaryTag: isUnaryTag,\n    mustUseProp: mustUseProp,\n    canBeLeftOpenTag: canBeLeftOpenTag,\n    isReservedTag: isReservedTag,\n    getTagNamespace: getTagNamespace,\n    staticKeys: genStaticKeys(modules$1)\n  };\n\n  /*  */\n\n  var isStaticKey;\n  var isPlatformReservedTag;\n\n  var genStaticKeysCached = cached(genStaticKeys$1);\n\n  /**\n   * Goal of the optimizer: walk the generated template AST tree\n   * and detect sub-trees that are purely static, i.e. parts of\n   * the DOM that never needs to change.\n   *\n   * Once we detect these sub-trees, we can:\n   *\n   * 1. Hoist them into constants, so that we no longer need to\n   *    create fresh nodes for them on each re-render;\n   * 2. Completely skip them in the patching process.\n   */\n  function optimize (root, options) {\n    if (!root) { return }\n    isStaticKey = genStaticKeysCached(options.staticKeys || '');\n    isPlatformReservedTag = options.isReservedTag || no;\n    // first pass: mark all non-static nodes.\n    markStatic$1(root);\n    // second pass: mark static roots.\n    markStaticRoots(root, false);\n  }\n\n  function genStaticKeys$1 (keys) {\n    return makeMap(\n      'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n      (keys ? ',' + keys : '')\n    )\n  }\n\n  function markStatic$1 (node) {\n    node.static = isStatic(node);\n    if (node.type === 1) {\n      // do not make component slot content static. this avoids\n      // 1. components not able to mutate slot nodes\n      // 2. static slot content fails for hot-reloading\n      if (\n        !isPlatformReservedTag(node.tag) &&\n        node.tag !== 'slot' &&\n        node.attrsMap['inline-template'] == null\n      ) {\n        return\n      }\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        var child = node.children[i];\n        markStatic$1(child);\n        if (!child.static) {\n          node.static = false;\n        }\n      }\n      if (node.ifConditions) {\n        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n          var block = node.ifConditions[i$1].block;\n          markStatic$1(block);\n          if (!block.static) {\n            node.static = false;\n          }\n        }\n      }\n    }\n  }\n\n  function markStaticRoots (node, isInFor) {\n    if (node.type === 1) {\n      if (node.static || node.once) {\n        node.staticInFor = isInFor;\n      }\n      // For a node to qualify as a static root, it should have children that\n      // are not just static text. Otherwise the cost of hoisting out will\n      // outweigh the benefits and it's better off to just always render it fresh.\n      if (node.static && node.children.length && !(\n        node.children.length === 1 &&\n        node.children[0].type === 3\n      )) {\n        node.staticRoot = true;\n        return\n      } else {\n        node.staticRoot = false;\n      }\n      if (node.children) {\n        for (var i = 0, l = node.children.length; i < l; i++) {\n          markStaticRoots(node.children[i], isInFor || !!node.for);\n        }\n      }\n      if (node.ifConditions) {\n        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n          markStaticRoots(node.ifConditions[i$1].block, isInFor);\n        }\n      }\n    }\n  }\n\n  function isStatic (node) {\n    if (node.type === 2) { // expression\n      return false\n    }\n    if (node.type === 3) { // text\n      return true\n    }\n    return !!(node.pre || (\n      !node.hasBindings && // no dynamic bindings\n      !node.if && !node.for && // not v-if or v-for or v-else\n      !isBuiltInTag(node.tag) && // not a built-in\n      isPlatformReservedTag(node.tag) && // not a component\n      !isDirectChildOfTemplateFor(node) &&\n      Object.keys(node).every(isStaticKey)\n    ))\n  }\n\n  function isDirectChildOfTemplateFor (node) {\n    while (node.parent) {\n      node = node.parent;\n      if (node.tag !== 'template') {\n        return false\n      }\n      if (node.for) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /*  */\n\n  var fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\n  var fnInvokeRE = /\\([^)]*?\\);*$/;\n  var simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n  // KeyboardEvent.keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40,\n    'delete': [8, 46]\n  };\n\n  // KeyboardEvent.key aliases\n  var keyNames = {\n    // #7880: IE11 and Edge use `Esc` for Escape key name.\n    esc: ['Esc', 'Escape'],\n    tab: 'Tab',\n    enter: 'Enter',\n    // #9112: IE11 uses `Spacebar` for Space key name.\n    space: [' ', 'Spacebar'],\n    // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n    up: ['Up', 'ArrowUp'],\n    left: ['Left', 'ArrowLeft'],\n    right: ['Right', 'ArrowRight'],\n    down: ['Down', 'ArrowDown'],\n    // #9112: IE11 uses `Del` for Delete key name.\n    'delete': ['Backspace', 'Delete', 'Del']\n  };\n\n  // #4868: modifiers that prevent the execution of the listener\n  // need to explicitly return null so that we can determine whether to remove\n  // the listener for .once\n  var genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\n  var modifierCode = {\n    stop: '$event.stopPropagation();',\n    prevent: '$event.preventDefault();',\n    self: genGuard(\"$event.target !== $event.currentTarget\"),\n    ctrl: genGuard(\"!$event.ctrlKey\"),\n    shift: genGuard(\"!$event.shiftKey\"),\n    alt: genGuard(\"!$event.altKey\"),\n    meta: genGuard(\"!$event.metaKey\"),\n    left: genGuard(\"'button' in $event && $event.button !== 0\"),\n    middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n    right: genGuard(\"'button' in $event && $event.button !== 2\")\n  };\n\n  function genHandlers (\n    events,\n    isNative\n  ) {\n    var prefix = isNative ? 'nativeOn:' : 'on:';\n    var staticHandlers = \"\";\n    var dynamicHandlers = \"\";\n    for (var name in events) {\n      var handlerCode = genHandler(events[name]);\n      if (events[name] && events[name].dynamic) {\n        dynamicHandlers += name + \",\" + handlerCode + \",\";\n      } else {\n        staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n      }\n    }\n    staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n    if (dynamicHandlers) {\n      return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n    } else {\n      return prefix + staticHandlers\n    }\n  }\n\n  function genHandler (handler) {\n    if (!handler) {\n      return 'function(){}'\n    }\n\n    if (Array.isArray(handler)) {\n      return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n    }\n\n    var isMethodPath = simplePathRE.test(handler.value);\n    var isFunctionExpression = fnExpRE.test(handler.value);\n    var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n    if (!handler.modifiers) {\n      if (isMethodPath || isFunctionExpression) {\n        return handler.value\n      }\n      return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n    } else {\n      var code = '';\n      var genModifierCode = '';\n      var keys = [];\n      for (var key in handler.modifiers) {\n        if (modifierCode[key]) {\n          genModifierCode += modifierCode[key];\n          // left/right\n          if (keyCodes[key]) {\n            keys.push(key);\n          }\n        } else if (key === 'exact') {\n          var modifiers = (handler.modifiers);\n          genModifierCode += genGuard(\n            ['ctrl', 'shift', 'alt', 'meta']\n              .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n              .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n              .join('||')\n          );\n        } else {\n          keys.push(key);\n        }\n      }\n      if (keys.length) {\n        code += genKeyFilter(keys);\n      }\n      // Make sure modifiers like prevent and stop get executed after key filtering\n      if (genModifierCode) {\n        code += genModifierCode;\n      }\n      var handlerCode = isMethodPath\n        ? (\"return \" + (handler.value) + \".apply(null, arguments)\")\n        : isFunctionExpression\n          ? (\"return (\" + (handler.value) + \").apply(null, arguments)\")\n          : isFunctionInvocation\n            ? (\"return \" + (handler.value))\n            : handler.value;\n      return (\"function($event){\" + code + handlerCode + \"}\")\n    }\n  }\n\n  function genKeyFilter (keys) {\n    return (\n      // make sure the key filters only apply to KeyboardEvents\n      // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n      // key events that do not have keyCode property...\n      \"if(!$event.type.indexOf('key')&&\" +\n      (keys.map(genFilterCode).join('&&')) + \")return null;\"\n    )\n  }\n\n  function genFilterCode (key) {\n    var keyVal = parseInt(key, 10);\n    if (keyVal) {\n      return (\"$event.keyCode!==\" + keyVal)\n    }\n    var keyCode = keyCodes[key];\n    var keyName = keyNames[key];\n    return (\n      \"_k($event.keyCode,\" +\n      (JSON.stringify(key)) + \",\" +\n      (JSON.stringify(keyCode)) + \",\" +\n      \"$event.key,\" +\n      \"\" + (JSON.stringify(keyName)) +\n      \")\"\n    )\n  }\n\n  /*  */\n\n  function on (el, dir) {\n    if (dir.modifiers) {\n      warn(\"v-on without argument does not support modifiers.\");\n    }\n    el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n  }\n\n  /*  */\n\n  function bind$1 (el, dir) {\n    el.wrapData = function (code) {\n      return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n    };\n  }\n\n  /*  */\n\n  var baseDirectives = {\n    on: on,\n    bind: bind$1,\n    cloak: noop\n  };\n\n  /*  */\n\n\n\n\n\n  var CodegenState = function CodegenState (options) {\n    this.options = options;\n    this.warn = options.warn || baseWarn;\n    this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n    this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n    this.directives = extend(extend({}, baseDirectives), options.directives);\n    var isReservedTag = options.isReservedTag || no;\n    this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n    this.onceId = 0;\n    this.staticRenderFns = [];\n    this.pre = false;\n  };\n\n\n\n  function generate (\n    ast,\n    options\n  ) {\n    var state = new CodegenState(options);\n    // fix #11483, Root level <script> tags should not be rendered.\n    var code = ast ? (ast.tag === 'script' ? 'null' : genElement(ast, state)) : '_c(\"div\")';\n    return {\n      render: (\"with(this){return \" + code + \"}\"),\n      staticRenderFns: state.staticRenderFns\n    }\n  }\n\n  function genElement (el, state) {\n    if (el.parent) {\n      el.pre = el.pre || el.parent.pre;\n    }\n\n    if (el.staticRoot && !el.staticProcessed) {\n      return genStatic(el, state)\n    } else if (el.once && !el.onceProcessed) {\n      return genOnce(el, state)\n    } else if (el.for && !el.forProcessed) {\n      return genFor(el, state)\n    } else if (el.if && !el.ifProcessed) {\n      return genIf(el, state)\n    } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n      return genChildren(el, state) || 'void 0'\n    } else if (el.tag === 'slot') {\n      return genSlot(el, state)\n    } else {\n      // component or element\n      var code;\n      if (el.component) {\n        code = genComponent(el.component, el, state);\n      } else {\n        var data;\n        if (!el.plain || (el.pre && state.maybeComponent(el))) {\n          data = genData$2(el, state);\n        }\n\n        var children = el.inlineTemplate ? null : genChildren(el, state, true);\n        code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n      }\n      // module transforms\n      for (var i = 0; i < state.transforms.length; i++) {\n        code = state.transforms[i](el, code);\n      }\n      return code\n    }\n  }\n\n  // hoist static sub-trees out\n  function genStatic (el, state) {\n    el.staticProcessed = true;\n    // Some elements (templates) need to behave differently inside of a v-pre\n    // node.  All pre nodes are static roots, so we can use this as a location to\n    // wrap a state change and reset it upon exiting the pre node.\n    var originalPreState = state.pre;\n    if (el.pre) {\n      state.pre = el.pre;\n    }\n    state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n    state.pre = originalPreState;\n    return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n  }\n\n  // v-once\n  function genOnce (el, state) {\n    el.onceProcessed = true;\n    if (el.if && !el.ifProcessed) {\n      return genIf(el, state)\n    } else if (el.staticInFor) {\n      var key = '';\n      var parent = el.parent;\n      while (parent) {\n        if (parent.for) {\n          key = parent.key;\n          break\n        }\n        parent = parent.parent;\n      }\n      if (!key) {\n        state.warn(\n          \"v-once can only be used inside v-for that is keyed. \",\n          el.rawAttrsMap['v-once']\n        );\n        return genElement(el, state)\n      }\n      return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n    } else {\n      return genStatic(el, state)\n    }\n  }\n\n  function genIf (\n    el,\n    state,\n    altGen,\n    altEmpty\n  ) {\n    el.ifProcessed = true; // avoid recursion\n    return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n  }\n\n  function genIfConditions (\n    conditions,\n    state,\n    altGen,\n    altEmpty\n  ) {\n    if (!conditions.length) {\n      return altEmpty || '_e()'\n    }\n\n    var condition = conditions.shift();\n    if (condition.exp) {\n      return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n    } else {\n      return (\"\" + (genTernaryExp(condition.block)))\n    }\n\n    // v-if with v-once should generate code like (a)?_m(0):_m(1)\n    function genTernaryExp (el) {\n      return altGen\n        ? altGen(el, state)\n        : el.once\n          ? genOnce(el, state)\n          : genElement(el, state)\n    }\n  }\n\n  function genFor (\n    el,\n    state,\n    altGen,\n    altHelper\n  ) {\n    var exp = el.for;\n    var alias = el.alias;\n    var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n    var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n    if (state.maybeComponent(el) &&\n      el.tag !== 'slot' &&\n      el.tag !== 'template' &&\n      !el.key\n    ) {\n      state.warn(\n        \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n        \"v-for should have explicit keys. \" +\n        \"See https://vuejs.org/guide/list.html#key for more info.\",\n        el.rawAttrsMap['v-for'],\n        true /* tip */\n      );\n    }\n\n    el.forProcessed = true; // avoid recursion\n    return (altHelper || '_l') + \"((\" + exp + \"),\" +\n      \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n        \"return \" + ((altGen || genElement)(el, state)) +\n      '})'\n  }\n\n  function genData$2 (el, state) {\n    var data = '{';\n\n    // directives first.\n    // directives may mutate the el's other properties before they are generated.\n    var dirs = genDirectives(el, state);\n    if (dirs) { data += dirs + ','; }\n\n    // key\n    if (el.key) {\n      data += \"key:\" + (el.key) + \",\";\n    }\n    // ref\n    if (el.ref) {\n      data += \"ref:\" + (el.ref) + \",\";\n    }\n    if (el.refInFor) {\n      data += \"refInFor:true,\";\n    }\n    // pre\n    if (el.pre) {\n      data += \"pre:true,\";\n    }\n    // record original tag name for components using \"is\" attribute\n    if (el.component) {\n      data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n    }\n    // module data generation functions\n    for (var i = 0; i < state.dataGenFns.length; i++) {\n      data += state.dataGenFns[i](el);\n    }\n    // attributes\n    if (el.attrs) {\n      data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n    }\n    // DOM props\n    if (el.props) {\n      data += \"domProps:\" + (genProps(el.props)) + \",\";\n    }\n    // event handlers\n    if (el.events) {\n      data += (genHandlers(el.events, false)) + \",\";\n    }\n    if (el.nativeEvents) {\n      data += (genHandlers(el.nativeEvents, true)) + \",\";\n    }\n    // slot target\n    // only for non-scoped slots\n    if (el.slotTarget && !el.slotScope) {\n      data += \"slot:\" + (el.slotTarget) + \",\";\n    }\n    // scoped slots\n    if (el.scopedSlots) {\n      data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n    }\n    // component v-model\n    if (el.model) {\n      data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n    }\n    // inline-template\n    if (el.inlineTemplate) {\n      var inlineTemplate = genInlineTemplate(el, state);\n      if (inlineTemplate) {\n        data += inlineTemplate + \",\";\n      }\n    }\n    data = data.replace(/,$/, '') + '}';\n    // v-bind dynamic argument wrap\n    // v-bind with dynamic arguments must be applied using the same v-bind object\n    // merge helper so that class/style/mustUseProp attrs are handled correctly.\n    if (el.dynamicAttrs) {\n      data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n    }\n    // v-bind data wrap\n    if (el.wrapData) {\n      data = el.wrapData(data);\n    }\n    // v-on data wrap\n    if (el.wrapListeners) {\n      data = el.wrapListeners(data);\n    }\n    return data\n  }\n\n  function genDirectives (el, state) {\n    var dirs = el.directives;\n    if (!dirs) { return }\n    var res = 'directives:[';\n    var hasRuntime = false;\n    var i, l, dir, needRuntime;\n    for (i = 0, l = dirs.length; i < l; i++) {\n      dir = dirs[i];\n      needRuntime = true;\n      var gen = state.directives[dir.name];\n      if (gen) {\n        // compile-time directive that manipulates AST.\n        // returns true if it also needs a runtime counterpart.\n        needRuntime = !!gen(el, dir, state.warn);\n      }\n      if (needRuntime) {\n        hasRuntime = true;\n        res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n      }\n    }\n    if (hasRuntime) {\n      return res.slice(0, -1) + ']'\n    }\n  }\n\n  function genInlineTemplate (el, state) {\n    var ast = el.children[0];\n    if (el.children.length !== 1 || ast.type !== 1) {\n      state.warn(\n        'Inline-template components must have exactly one child element.',\n        { start: el.start }\n      );\n    }\n    if (ast && ast.type === 1) {\n      var inlineRenderFns = generate(ast, state.options);\n      return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n    }\n  }\n\n  function genScopedSlots (\n    el,\n    slots,\n    state\n  ) {\n    // by default scoped slots are considered \"stable\", this allows child\n    // components with only scoped slots to skip forced updates from parent.\n    // but in some cases we have to bail-out of this optimization\n    // for example if the slot contains dynamic names, has v-if or v-for on them...\n    var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n      var slot = slots[key];\n      return (\n        slot.slotTargetDynamic ||\n        slot.if ||\n        slot.for ||\n        containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n      )\n    });\n\n    // #9534: if a component with scoped slots is inside a conditional branch,\n    // it's possible for the same component to be reused but with different\n    // compiled slot content. To avoid that, we generate a unique key based on\n    // the generated code of all the slot contents.\n    var needsKey = !!el.if;\n\n    // OR when it is inside another scoped slot or v-for (the reactivity may be\n    // disconnected due to the intermediate scope variable)\n    // #9438, #9506\n    // TODO: this can be further optimized by properly analyzing in-scope bindings\n    // and skip force updating ones that do not actually use scope variables.\n    if (!needsForceUpdate) {\n      var parent = el.parent;\n      while (parent) {\n        if (\n          (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n          parent.for\n        ) {\n          needsForceUpdate = true;\n          break\n        }\n        if (parent.if) {\n          needsKey = true;\n        }\n        parent = parent.parent;\n      }\n    }\n\n    var generatedSlots = Object.keys(slots)\n      .map(function (key) { return genScopedSlot(slots[key], state); })\n      .join(',');\n\n    return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n  }\n\n  function hash(str) {\n    var hash = 5381;\n    var i = str.length;\n    while(i) {\n      hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    return hash >>> 0\n  }\n\n  function containsSlotChild (el) {\n    if (el.type === 1) {\n      if (el.tag === 'slot') {\n        return true\n      }\n      return el.children.some(containsSlotChild)\n    }\n    return false\n  }\n\n  function genScopedSlot (\n    el,\n    state\n  ) {\n    var isLegacySyntax = el.attrsMap['slot-scope'];\n    if (el.if && !el.ifProcessed && !isLegacySyntax) {\n      return genIf(el, state, genScopedSlot, \"null\")\n    }\n    if (el.for && !el.forProcessed) {\n      return genFor(el, state, genScopedSlot)\n    }\n    var slotScope = el.slotScope === emptySlotScopeToken\n      ? \"\"\n      : String(el.slotScope);\n    var fn = \"function(\" + slotScope + \"){\" +\n      \"return \" + (el.tag === 'template'\n        ? el.if && isLegacySyntax\n          ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n          : genChildren(el, state) || 'undefined'\n        : genElement(el, state)) + \"}\";\n    // reverse proxy v-slot without scope on this.$slots\n    var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n    return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n  }\n\n  function genChildren (\n    el,\n    state,\n    checkSkip,\n    altGenElement,\n    altGenNode\n  ) {\n    var children = el.children;\n    if (children.length) {\n      var el$1 = children[0];\n      // optimize single v-for\n      if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot'\n      ) {\n        var normalizationType = checkSkip\n          ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n          : \"\";\n        return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n      }\n      var normalizationType$1 = checkSkip\n        ? getNormalizationType(children, state.maybeComponent)\n        : 0;\n      var gen = altGenNode || genNode;\n      return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n    }\n  }\n\n  // determine the normalization needed for the children array.\n  // 0: no normalization needed\n  // 1: simple normalization needed (possible 1-level deep nested array)\n  // 2: full normalization needed\n  function getNormalizationType (\n    children,\n    maybeComponent\n  ) {\n    var res = 0;\n    for (var i = 0; i < children.length; i++) {\n      var el = children[i];\n      if (el.type !== 1) {\n        continue\n      }\n      if (needsNormalization(el) ||\n          (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n        res = 2;\n        break\n      }\n      if (maybeComponent(el) ||\n          (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n        res = 1;\n      }\n    }\n    return res\n  }\n\n  function needsNormalization (el) {\n    return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n  }\n\n  function genNode (node, state) {\n    if (node.type === 1) {\n      return genElement(node, state)\n    } else if (node.type === 3 && node.isComment) {\n      return genComment(node)\n    } else {\n      return genText(node)\n    }\n  }\n\n  function genText (text) {\n    return (\"_v(\" + (text.type === 2\n      ? text.expression // no need for () because already wrapped in _s()\n      : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n  }\n\n  function genComment (comment) {\n    return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n  }\n\n  function genSlot (el, state) {\n    var slotName = el.slotName || '\"default\"';\n    var children = genChildren(el, state);\n    var res = \"_t(\" + slotName + (children ? (\",function(){return \" + children + \"}\") : '');\n    var attrs = el.attrs || el.dynamicAttrs\n      ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n          // slot props are camelized\n          name: camelize(attr.name),\n          value: attr.value,\n          dynamic: attr.dynamic\n        }); }))\n      : null;\n    var bind$$1 = el.attrsMap['v-bind'];\n    if ((attrs || bind$$1) && !children) {\n      res += \",null\";\n    }\n    if (attrs) {\n      res += \",\" + attrs;\n    }\n    if (bind$$1) {\n      res += (attrs ? '' : ',null') + \",\" + bind$$1;\n    }\n    return res + ')'\n  }\n\n  // componentName is el.component, take it as argument to shun flow's pessimistic refinement\n  function genComponent (\n    componentName,\n    el,\n    state\n  ) {\n    var children = el.inlineTemplate ? null : genChildren(el, state, true);\n    return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n  }\n\n  function genProps (props) {\n    var staticProps = \"\";\n    var dynamicProps = \"\";\n    for (var i = 0; i < props.length; i++) {\n      var prop = props[i];\n      var value = transformSpecialNewlines(prop.value);\n      if (prop.dynamic) {\n        dynamicProps += (prop.name) + \",\" + value + \",\";\n      } else {\n        staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n      }\n    }\n    staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n    if (dynamicProps) {\n      return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n    } else {\n      return staticProps\n    }\n  }\n\n  // #3895, #4268\n  function transformSpecialNewlines (text) {\n    return text\n      .replace(/\\u2028/g, '\\\\u2028')\n      .replace(/\\u2029/g, '\\\\u2029')\n  }\n\n  /*  */\n\n\n\n  // these keywords should not appear inside expressions, but operators like\n  // typeof, instanceof and in are allowed\n  var prohibitedKeywordRE = new RegExp('\\\\b' + (\n    'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n    'super,throw,while,yield,delete,export,import,return,switch,default,' +\n    'extends,finally,continue,debugger,function,arguments'\n  ).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n  // these unary operators should not be used as property/method names\n  var unaryOperatorsRE = new RegExp('\\\\b' + (\n    'delete,typeof,void'\n  ).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n  // strip strings in expressions\n  var stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n  // detect problematic expressions in a template\n  function detectErrors (ast, warn) {\n    if (ast) {\n      checkNode(ast, warn);\n    }\n  }\n\n  function checkNode (node, warn) {\n    if (node.type === 1) {\n      for (var name in node.attrsMap) {\n        if (dirRE.test(name)) {\n          var value = node.attrsMap[name];\n          if (value) {\n            var range = node.rawAttrsMap[name];\n            if (name === 'v-for') {\n              checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n            } else if (name === 'v-slot' || name[0] === '#') {\n              checkFunctionParameterExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n            } else if (onRE.test(name)) {\n              checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n            } else {\n              checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n            }\n          }\n        }\n      }\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          checkNode(node.children[i], warn);\n        }\n      }\n    } else if (node.type === 2) {\n      checkExpression(node.expression, node.text, warn, node);\n    }\n  }\n\n  function checkEvent (exp, text, warn, range) {\n    var stripped = exp.replace(stripStringRE, '');\n    var keywordMatch = stripped.match(unaryOperatorsRE);\n    if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n      warn(\n        \"avoid using JavaScript unary operator as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n        range\n      );\n    }\n    checkExpression(exp, text, warn, range);\n  }\n\n  function checkFor (node, text, warn, range) {\n    checkExpression(node.for || '', text, warn, range);\n    checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n    checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n    checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n  }\n\n  function checkIdentifier (\n    ident,\n    type,\n    text,\n    warn,\n    range\n  ) {\n    if (typeof ident === 'string') {\n      try {\n        new Function((\"var \" + ident + \"=_\"));\n      } catch (e) {\n        warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n      }\n    }\n  }\n\n  function checkExpression (exp, text, warn, range) {\n    try {\n      new Function((\"return \" + exp));\n    } catch (e) {\n      var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n      if (keywordMatch) {\n        warn(\n          \"avoid using JavaScript keyword as property name: \" +\n          \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n          range\n        );\n      } else {\n        warn(\n          \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n          \"    \" + exp + \"\\n\\n\" +\n          \"  Raw expression: \" + (text.trim()) + \"\\n\",\n          range\n        );\n      }\n    }\n  }\n\n  function checkFunctionParameterExpression (exp, text, warn, range) {\n    try {\n      new Function(exp, '');\n    } catch (e) {\n      warn(\n        \"invalid function parameter expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n\n  /*  */\n\n  var range = 2;\n\n  function generateCodeFrame (\n    source,\n    start,\n    end\n  ) {\n    if ( start === void 0 ) start = 0;\n    if ( end === void 0 ) end = source.length;\n\n    var lines = source.split(/\\r?\\n/);\n    var count = 0;\n    var res = [];\n    for (var i = 0; i < lines.length; i++) {\n      count += lines[i].length + 1;\n      if (count >= start) {\n        for (var j = i - range; j <= i + range || end > count; j++) {\n          if (j < 0 || j >= lines.length) { continue }\n          res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n          var lineLength = lines[j].length;\n          if (j === i) {\n            // push underline\n            var pad = start - (count - lineLength) + 1;\n            var length = end > count ? lineLength - pad : end - start;\n            res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n          } else if (j > i) {\n            if (end > count) {\n              var length$1 = Math.min(end - count, lineLength);\n              res.push(\"   |  \" + repeat$1(\"^\", length$1));\n            }\n            count += lineLength + 1;\n          }\n        }\n        break\n      }\n    }\n    return res.join('\\n')\n  }\n\n  function repeat$1 (str, n) {\n    var result = '';\n    if (n > 0) {\n      while (true) { // eslint-disable-line\n        if (n & 1) { result += str; }\n        n >>>= 1;\n        if (n <= 0) { break }\n        str += str;\n      }\n    }\n    return result\n  }\n\n  /*  */\n\n\n\n  function createFunction (code, errors) {\n    try {\n      return new Function(code)\n    } catch (err) {\n      errors.push({ err: err, code: code });\n      return noop\n    }\n  }\n\n  function createCompileToFunctionFn (compile) {\n    var cache = Object.create(null);\n\n    return function compileToFunctions (\n      template,\n      options,\n      vm\n    ) {\n      options = extend({}, options);\n      var warn$$1 = options.warn || warn;\n      delete options.warn;\n\n      /* istanbul ignore if */\n      {\n        // detect possible CSP restriction\n        try {\n          new Function('return 1');\n        } catch (e) {\n          if (e.toString().match(/unsafe-eval|CSP/)) {\n            warn$$1(\n              'It seems you are using the standalone build of Vue.js in an ' +\n              'environment with Content Security Policy that prohibits unsafe-eval. ' +\n              'The template compiler cannot work in this environment. Consider ' +\n              'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n              'templates into render functions.'\n            );\n          }\n        }\n      }\n\n      // check cache\n      var key = options.delimiters\n        ? String(options.delimiters) + template\n        : template;\n      if (cache[key]) {\n        return cache[key]\n      }\n\n      // compile\n      var compiled = compile(template, options);\n\n      // check compilation errors/tips\n      {\n        if (compiled.errors && compiled.errors.length) {\n          if (options.outputSourceRange) {\n            compiled.errors.forEach(function (e) {\n              warn$$1(\n                \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n                generateCodeFrame(template, e.start, e.end),\n                vm\n              );\n            });\n          } else {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n              compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n              vm\n            );\n          }\n        }\n        if (compiled.tips && compiled.tips.length) {\n          if (options.outputSourceRange) {\n            compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n          } else {\n            compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n          }\n        }\n      }\n\n      // turn code into functions\n      var res = {};\n      var fnGenErrors = [];\n      res.render = createFunction(compiled.render, fnGenErrors);\n      res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n        return createFunction(code, fnGenErrors)\n      });\n\n      // check function generation errors.\n      // this should only happen if there is a bug in the compiler itself.\n      // mostly for codegen development use\n      /* istanbul ignore if */\n      {\n        if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n          warn$$1(\n            \"Failed to generate render function:\\n\\n\" +\n            fnGenErrors.map(function (ref) {\n              var err = ref.err;\n              var code = ref.code;\n\n              return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n          }).join('\\n'),\n            vm\n          );\n        }\n      }\n\n      return (cache[key] = res)\n    }\n  }\n\n  /*  */\n\n  function createCompilerCreator (baseCompile) {\n    return function createCompiler (baseOptions) {\n      function compile (\n        template,\n        options\n      ) {\n        var finalOptions = Object.create(baseOptions);\n        var errors = [];\n        var tips = [];\n\n        var warn = function (msg, range, tip) {\n          (tip ? tips : errors).push(msg);\n        };\n\n        if (options) {\n          if (options.outputSourceRange) {\n            // $flow-disable-line\n            var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n            warn = function (msg, range, tip) {\n              var data = { msg: msg };\n              if (range) {\n                if (range.start != null) {\n                  data.start = range.start + leadingSpaceLength;\n                }\n                if (range.end != null) {\n                  data.end = range.end + leadingSpaceLength;\n                }\n              }\n              (tip ? tips : errors).push(data);\n            };\n          }\n          // merge custom modules\n          if (options.modules) {\n            finalOptions.modules =\n              (baseOptions.modules || []).concat(options.modules);\n          }\n          // merge custom directives\n          if (options.directives) {\n            finalOptions.directives = extend(\n              Object.create(baseOptions.directives || null),\n              options.directives\n            );\n          }\n          // copy other options\n          for (var key in options) {\n            if (key !== 'modules' && key !== 'directives') {\n              finalOptions[key] = options[key];\n            }\n          }\n        }\n\n        finalOptions.warn = warn;\n\n        var compiled = baseCompile(template.trim(), finalOptions);\n        {\n          detectErrors(compiled.ast, warn);\n        }\n        compiled.errors = errors;\n        compiled.tips = tips;\n        return compiled\n      }\n\n      return {\n        compile: compile,\n        compileToFunctions: createCompileToFunctionFn(compile)\n      }\n    }\n  }\n\n  /*  */\n\n  // `createCompilerCreator` allows creating compilers that use alternative\n  // parser/optimizer/codegen, e.g the SSR optimizing compiler.\n  // Here we just export a default compiler using the default parts.\n  var createCompiler = createCompilerCreator(function baseCompile (\n    template,\n    options\n  ) {\n    var ast = parse(template.trim(), options);\n    if (options.optimize !== false) {\n      optimize(ast, options);\n    }\n    var code = generate(ast, options);\n    return {\n      ast: ast,\n      render: code.render,\n      staticRenderFns: code.staticRenderFns\n    }\n  });\n\n  /*  */\n\n  var ref$1 = createCompiler(baseOptions);\n  var compile = ref$1.compile;\n  var compileToFunctions = ref$1.compileToFunctions;\n\n  /*  */\n\n  // check whether current browser encodes a char inside attribute values\n  var div;\n  function getShouldDecode (href) {\n    div = div || document.createElement('div');\n    div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n    return div.innerHTML.indexOf('&#10;') > 0\n  }\n\n  // #3663: IE encodes newlines inside attribute values while other browsers don't\n  var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n  // #6828: chrome encodes content in a[href]\n  var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n  /*  */\n\n  var idToTemplate = cached(function (id) {\n    var el = query(id);\n    return el && el.innerHTML\n  });\n\n  var mount = Vue.prototype.$mount;\n  Vue.prototype.$mount = function (\n    el,\n    hydrating\n  ) {\n    el = el && query(el);\n\n    /* istanbul ignore if */\n    if (el === document.body || el === document.documentElement) {\n      warn(\n        \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n      );\n      return this\n    }\n\n    var options = this.$options;\n    // resolve template/el and convert to render function\n    if (!options.render) {\n      var template = options.template;\n      if (template) {\n        if (typeof template === 'string') {\n          if (template.charAt(0) === '#') {\n            template = idToTemplate(template);\n            /* istanbul ignore if */\n            if (!template) {\n              warn(\n                (\"Template element not found or is empty: \" + (options.template)),\n                this\n              );\n            }\n          }\n        } else if (template.nodeType) {\n          template = template.innerHTML;\n        } else {\n          {\n            warn('invalid template option:' + template, this);\n          }\n          return this\n        }\n      } else if (el) {\n        template = getOuterHTML(el);\n      }\n      if (template) {\n        /* istanbul ignore if */\n        if (config.performance && mark) {\n          mark('compile');\n        }\n\n        var ref = compileToFunctions(template, {\n          outputSourceRange: \"development\" !== 'production',\n          shouldDecodeNewlines: shouldDecodeNewlines,\n          shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n          delimiters: options.delimiters,\n          comments: options.comments\n        }, this);\n        var render = ref.render;\n        var staticRenderFns = ref.staticRenderFns;\n        options.render = render;\n        options.staticRenderFns = staticRenderFns;\n\n        /* istanbul ignore if */\n        if (config.performance && mark) {\n          mark('compile end');\n          measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n        }\n      }\n    }\n    return mount.call(this, el, hydrating)\n  };\n\n  /**\n   * Get outerHTML of elements, taking care\n   * of SVG elements in IE as well.\n   */\n  function getOuterHTML (el) {\n    if (el.outerHTML) {\n      return el.outerHTML\n    } else {\n      var container = document.createElement('div');\n      container.appendChild(el.cloneNode(true));\n      return container.innerHTML\n    }\n  }\n\n  Vue.compile = compileToFunctions;\n\n  return Vue;\n\n}));\n//# sourceMappingURL=vue.js.map\n","/* @flow */\n\nexport const emptyObject = Object.freeze({})\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nexport function isUndef (v: any): boolean %checks {\n  return v === undefined || v === null\n}\n\nexport function isDef (v: any): boolean %checks {\n  return v !== undefined && v !== null\n}\n\nexport function isTrue (v: any): boolean %checks {\n  return v === true\n}\n\nexport function isFalse (v: any): boolean %checks {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nexport function isPrimitive (value: any): boolean %checks {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nexport function isObject (obj: mixed): boolean %checks {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nconst _toString = Object.prototype.toString\n\nexport function toRawType (value: any): string {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nexport function isPlainObject (obj: any): boolean {\n  return _toString.call(obj) === '[object Object]'\n}\n\nexport function isRegExp (v: any): boolean {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nexport function isValidArrayIndex (val: any): boolean {\n  const n = parseFloat(String(val))\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nexport function isPromise (val: any): boolean {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nexport function toString (val: any): string {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nexport function toNumber (val: string): number | string {\n  const n = parseFloat(val)\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nexport function makeMap (\n  str: string,\n  expectsLowerCase?: boolean\n): (key: string) => true | void {\n  const map = Object.create(null)\n  const list: Array<string> = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase\n    ? val => map[val.toLowerCase()]\n    : val => map[val]\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nexport const isBuiltInTag = makeMap('slot,component', true)\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nexport const isReservedAttribute = makeMap('key,ref,slot,slot-scope,is')\n\n/**\n * Remove an item from an array.\n */\nexport function remove (arr: Array<any>, item: any): Array<any> | void {\n  if (arr.length) {\n    const index = arr.indexOf(item)\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport function hasOwn (obj: Object | Array<*>, key: string): boolean {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nexport function cached<F: Function> (fn: F): F {\n  const cache = Object.create(null)\n  return (function cachedFn (str: string) {\n    const hit = cache[str]\n    return hit || (cache[str] = fn(str))\n  }: any)\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nconst camelizeRE = /-(\\w)/g\nexport const camelize = cached((str: string): string => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n})\n\n/**\n * Capitalize a string.\n */\nexport const capitalize = cached((str: string): string => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n})\n\n/**\n * Hyphenate a camelCase string.\n */\nconst hyphenateRE = /\\B([A-Z])/g\nexport const hyphenate = cached((str: string): string => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n})\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn: Function, ctx: Object): Function {\n  function boundFn (a) {\n    const l = arguments.length\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length\n  return boundFn\n}\n\nfunction nativeBind (fn: Function, ctx: Object): Function {\n  return fn.bind(ctx)\n}\n\nexport const bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind\n\n/**\n * Convert an Array-like object to a real Array.\n */\nexport function toArray (list: any, start?: number): Array<any> {\n  start = start || 0\n  let i = list.length - start\n  const ret: Array<any> = new Array(i)\n  while (i--) {\n    ret[i] = list[i + start]\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nexport function extend (to: Object, _from: ?Object): Object {\n  for (const key in _from) {\n    to[key] = _from[key]\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nexport function toObject (arr: Array<any>): Object {\n  const res = {}\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i])\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nexport function noop (a?: any, b?: any, c?: any) {}\n\n/**\n * Always return false.\n */\nexport const no = (a?: any, b?: any, c?: any) => false\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nexport const identity = (_: any) => _\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nexport function genStaticKeys (modules: Array<ModuleOptions>): string {\n  return modules.reduce((keys, m) => {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nexport function looseEqual (a: any, b: any): boolean {\n  if (a === b) return true\n  const isObjectA = isObject(a)\n  const isObjectB = isObject(b)\n  if (isObjectA && isObjectB) {\n    try {\n      const isArrayA = Array.isArray(a)\n      const isArrayB = Array.isArray(b)\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every((e, i) => {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        const keysA = Object.keys(a)\n        const keysB = Object.keys(b)\n        return keysA.length === keysB.length && keysA.every(key => {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nexport function looseIndexOf (arr: Array<mixed>, val: mixed): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) return i\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nexport function once (fn: Function): Function {\n  let called = false\n  return function () {\n    if (!called) {\n      called = true\n      fn.apply(this, arguments)\n    }\n  }\n}\n","export const SSR_ATTR = 'data-server-rendered'\n\nexport const ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n]\n\nexport const LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n]\n","/* @flow */\n\nimport {\n  no,\n  noop,\n  identity\n} from 'shared/util'\n\nimport { LIFECYCLE_HOOKS } from 'shared/constants'\n\nexport type Config = {\n  // user\n  optionMergeStrategies: { [key: string]: Function };\n  silent: boolean;\n  productionTip: boolean;\n  performance: boolean;\n  devtools: boolean;\n  errorHandler: ?(err: Error, vm: Component, info: string) => void;\n  warnHandler: ?(msg: string, vm: Component, trace: string) => void;\n  ignoredElements: Array<string | RegExp>;\n  keyCodes: { [key: string]: number | Array<number> };\n\n  // platform\n  isReservedTag: (x?: string) => boolean;\n  isReservedAttr: (x?: string) => boolean;\n  parsePlatformTagName: (x: string) => string;\n  isUnknownElement: (x?: string) => boolean;\n  getTagNamespace: (x?: string) => string | void;\n  mustUseProp: (tag: string, type: ?string, name: string) => boolean;\n\n  // private\n  async: boolean;\n\n  // legacy\n  _lifecycleHooks: Array<string>;\n};\n\nexport default ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n}: Config)\n","/* @flow */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nexport const unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/\n\n/**\n * Check if a string starts with $ or _\n */\nexport function isReserved (str: string): boolean {\n  const c = (str + '').charCodeAt(0)\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nexport function def (obj: Object, key: string, val: any, enumerable?: boolean) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  })\n}\n\n/**\n * Parse simple path.\n */\nconst bailRE = new RegExp(`[^${unicodeRegExp.source}.$_\\\\d]`)\nexport function parsePath (path: string): any {\n  if (bailRE.test(path)) {\n    return\n  }\n  const segments = path.split('.')\n  return function (obj) {\n    for (let i = 0; i < segments.length; i++) {\n      if (!obj) return\n      obj = obj[segments[i]]\n    }\n    return obj\n  }\n}\n","/* @flow */\n\n// can we use __proto__?\nexport const hasProto = '__proto__' in {}\n\n// Browser environment sniffing\nexport const inBrowser = typeof window !== 'undefined'\nexport const inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform\nexport const weexPlatform = inWeex && WXEnvironment.platform.toLowerCase()\nexport const UA = inBrowser && window.navigator.userAgent.toLowerCase()\nexport const isIE = UA && /msie|trident/.test(UA)\nexport const isIE9 = UA && UA.indexOf('msie 9.0') > 0\nexport const isEdge = UA && UA.indexOf('edge/') > 0\nexport const isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android')\nexport const isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios')\nexport const isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge\nexport const isPhantomJS = UA && /phantomjs/.test(UA)\nexport const isFF = UA && UA.match(/firefox\\/(\\d+)/)\n\n// Firefox has a \"watch\" function on Object.prototype...\nexport const nativeWatch = ({}).watch\n\nexport let supportsPassive = false\nif (inBrowser) {\n  try {\n    const opts = {}\n    Object.defineProperty(opts, 'passive', ({\n      get () {\n        /* istanbul ignore next */\n        supportsPassive = true\n      }\n    }: Object)) // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts)\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nlet _isServer\nexport const isServerRendering = () => {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server'\n    } else {\n      _isServer = false\n    }\n  }\n  return _isServer\n}\n\n// detect devtools\nexport const devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__\n\n/* istanbul ignore next */\nexport function isNative (Ctor: any): boolean {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nexport const hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys)\n\nlet _Set\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = class Set implements SimpleSet {\n    set: Object;\n    constructor () {\n      this.set = Object.create(null)\n    }\n    has (key: string | number) {\n      return this.set[key] === true\n    }\n    add (key: string | number) {\n      this.set[key] = true\n    }\n    clear () {\n      this.set = Object.create(null)\n    }\n  }\n}\n\nexport interface SimpleSet {\n  has(key: string | number): boolean;\n  add(key: string | number): mixed;\n  clear(): void;\n}\n\nexport { _Set }\n","/* @flow */\n\nimport config from '../config'\nimport { noop } from 'shared/util'\n\nexport let warn = noop\nexport let tip = noop\nexport let generateComponentTrace = (noop: any) // work around flow check\nexport let formatComponentName = (noop: any)\n\nif (process.env.NODE_ENV !== 'production') {\n  const hasConsole = typeof console !== 'undefined'\n  const classifyRE = /(?:^|[-_])(\\w)/g\n  const classify = str => str\n    .replace(classifyRE, c => c.toUpperCase())\n    .replace(/[-_]/g, '')\n\n  warn = (msg, vm) => {\n    const trace = vm ? generateComponentTrace(vm) : ''\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace)\n    } else if (hasConsole && (!config.silent)) {\n      console.error(`[Vue warn]: ${msg}${trace}`)\n    }\n  }\n\n  tip = (msg, vm) => {\n    if (hasConsole && (!config.silent)) {\n      console.warn(`[Vue tip]: ${msg}` + (\n        vm ? generateComponentTrace(vm) : ''\n      ))\n    }\n  }\n\n  formatComponentName = (vm, includeFile) => {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    const options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm\n    let name = options.name || options._componentTag\n    const file = options.__file\n    if (!name && file) {\n      const match = file.match(/([^/\\\\]+)\\.vue$/)\n      name = match && match[1]\n    }\n\n    return (\n      (name ? `<${classify(name)}>` : `<Anonymous>`) +\n      (file && includeFile !== false ? ` at ${file}` : '')\n    )\n  }\n\n  const repeat = (str, n) => {\n    let res = ''\n    while (n) {\n      if (n % 2 === 1) res += str\n      if (n > 1) str += str\n      n >>= 1\n    }\n    return res\n  }\n\n  generateComponentTrace = vm => {\n    if (vm._isVue && vm.$parent) {\n      const tree = []\n      let currentRecursiveSequence = 0\n      while (vm) {\n        if (tree.length > 0) {\n          const last = tree[tree.length - 1]\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++\n            vm = vm.$parent\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence]\n            currentRecursiveSequence = 0\n          }\n        }\n        tree.push(vm)\n        vm = vm.$parent\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map((vm, i) => `${\n          i === 0 ? '---> ' : repeat(' ', 5 + i * 2)\n        }${\n          Array.isArray(vm)\n            ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n            : formatComponentName(vm)\n        }`)\n        .join('\\n')\n    } else {\n      return `\\n\\n(found in ${formatComponentName(vm)})`\n    }\n  }\n}\n","/* @flow */\n\nimport type Watcher from './watcher'\nimport { remove } from '../util/index'\nimport config from '../config'\n\nlet uid = 0\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nexport default class Dep {\n  static target: ?Watcher;\n  id: number;\n  subs: Array<Watcher>;\n\n  constructor () {\n    this.id = uid++\n    this.subs = []\n  }\n\n  addSub (sub: Watcher) {\n    this.subs.push(sub)\n  }\n\n  removeSub (sub: Watcher) {\n    remove(this.subs, sub)\n  }\n\n  depend () {\n    if (Dep.target) {\n      Dep.target.addDep(this)\n    }\n  }\n\n  notify () {\n    // stabilize the subscriber list first\n    const subs = this.subs.slice()\n    if (process.env.NODE_ENV !== 'production' && !config.async) {\n      // subs aren't sorted in scheduler if not running async\n      // we need to sort them now to make sure they fire in correct\n      // order\n      subs.sort((a, b) => a.id - b.id)\n    }\n    for (let i = 0, l = subs.length; i < l; i++) {\n      subs[i].update()\n    }\n  }\n}\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null\nconst targetStack = []\n\nexport function pushTarget (target: ?Watcher) {\n  targetStack.push(target)\n  Dep.target = target\n}\n\nexport function popTarget () {\n  targetStack.pop()\n  Dep.target = targetStack[targetStack.length - 1]\n}\n","/* @flow */\n\nexport default class VNode {\n  tag: string | void;\n  data: VNodeData | void;\n  children: ?Array<VNode>;\n  text: string | void;\n  elm: Node | void;\n  ns: string | void;\n  context: Component | void; // rendered in this component's scope\n  key: string | number | void;\n  componentOptions: VNodeComponentOptions | void;\n  componentInstance: Component | void; // component instance\n  parent: VNode | void; // component placeholder node\n\n  // strictly internal\n  raw: boolean; // contains raw HTML? (server only)\n  isStatic: boolean; // hoisted static node\n  isRootInsert: boolean; // necessary for enter transition check\n  isComment: boolean; // empty comment placeholder?\n  isCloned: boolean; // is a cloned node?\n  isOnce: boolean; // is a v-once node?\n  asyncFactory: Function | void; // async component factory function\n  asyncMeta: Object | void;\n  isAsyncPlaceholder: boolean;\n  ssrContext: Object | void;\n  fnContext: Component | void; // real context vm for functional nodes\n  fnOptions: ?ComponentOptions; // for SSR caching\n  devtoolsMeta: ?Object; // used to store functional render context for devtools\n  fnScopeId: ?string; // functional scope id support\n\n  constructor (\n    tag?: string,\n    data?: VNodeData,\n    children?: ?Array<VNode>,\n    text?: string,\n    elm?: Node,\n    context?: Component,\n    componentOptions?: VNodeComponentOptions,\n    asyncFactory?: Function\n  ) {\n    this.tag = tag\n    this.data = data\n    this.children = children\n    this.text = text\n    this.elm = elm\n    this.ns = undefined\n    this.context = context\n    this.fnContext = undefined\n    this.fnOptions = undefined\n    this.fnScopeId = undefined\n    this.key = data && data.key\n    this.componentOptions = componentOptions\n    this.componentInstance = undefined\n    this.parent = undefined\n    this.raw = false\n    this.isStatic = false\n    this.isRootInsert = true\n    this.isComment = false\n    this.isCloned = false\n    this.isOnce = false\n    this.asyncFactory = asyncFactory\n    this.asyncMeta = undefined\n    this.isAsyncPlaceholder = false\n  }\n\n  // DEPRECATED: alias for componentInstance for backwards compat.\n  /* istanbul ignore next */\n  get child (): Component | void {\n    return this.componentInstance\n  }\n}\n\nexport const createEmptyVNode = (text: string = '') => {\n  const node = new VNode()\n  node.text = text\n  node.isComment = true\n  return node\n}\n\nexport function createTextVNode (val: string | number) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nexport function cloneVNode (vnode: VNode): VNode {\n  const cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  )\n  cloned.ns = vnode.ns\n  cloned.isStatic = vnode.isStatic\n  cloned.key = vnode.key\n  cloned.isComment = vnode.isComment\n  cloned.fnContext = vnode.fnContext\n  cloned.fnOptions = vnode.fnOptions\n  cloned.fnScopeId = vnode.fnScopeId\n  cloned.asyncMeta = vnode.asyncMeta\n  cloned.isCloned = true\n  return cloned\n}\n","/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nimport { def } from '../util/index'\n\nconst arrayProto = Array.prototype\nexport const arrayMethods = Object.create(arrayProto)\n\nconst methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  const original = arrayProto[method]\n  def(arrayMethods, method, function mutator (...args) {\n    const result = original.apply(this, args)\n    const ob = this.__ob__\n    let inserted\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n        break\n    }\n    if (inserted) ob.observeArray(inserted)\n    // notify change\n    ob.dep.notify()\n    return result\n  })\n})\n","/* @flow */\n\nimport Dep from './dep'\nimport VNode from '../vdom/vnode'\nimport { arrayMethods } from './array'\nimport {\n  def,\n  warn,\n  hasOwn,\n  hasProto,\n  isObject,\n  isPlainObject,\n  isPrimitive,\n  isUndef,\n  isValidArrayIndex,\n  isServerRendering\n} from '../util/index'\n\nconst arrayKeys = Object.getOwnPropertyNames(arrayMethods)\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nexport let shouldObserve: boolean = true\n\nexport function toggleObserving (value: boolean) {\n  shouldObserve = value\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nexport class Observer {\n  value: any;\n  dep: Dep;\n  vmCount: number; // number of vms that have this object as root $data\n\n  constructor (value: any) {\n    this.value = value\n    this.dep = new Dep()\n    this.vmCount = 0\n    def(value, '__ob__', this)\n    if (Array.isArray(value)) {\n      if (hasProto) {\n        protoAugment(value, arrayMethods)\n      } else {\n        copyAugment(value, arrayMethods, arrayKeys)\n      }\n      this.observeArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n\n  /**\n   * Walk through all properties and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   */\n  walk (obj: Object) {\n    const keys = Object.keys(obj)\n    for (let i = 0; i < keys.length; i++) {\n      defineReactive(obj, keys[i])\n    }\n  }\n\n  /**\n   * Observe a list of Array items.\n   */\n  observeArray (items: Array<any>) {\n    for (let i = 0, l = items.length; i < l; i++) {\n      observe(items[i])\n    }\n  }\n}\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src: Object) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target: Object, src: Object, keys: Array<string>) {\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i]\n    def(target, key, src[key])\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nexport function observe (value: any, asRootData: ?boolean): Observer | void {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  let ob: Observer | void\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value)\n  }\n  if (asRootData && ob) {\n    ob.vmCount++\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nexport function defineReactive (\n  obj: Object,\n  key: string,\n  val: any,\n  customSetter?: ?Function,\n  shallow?: boolean\n) {\n  const dep = new Dep()\n\n  const property = Object.getOwnPropertyDescriptor(obj, key)\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  const getter = property && property.get\n  const setter = property && property.set\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key]\n  }\n\n  let childOb = !shallow && observe(val)\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      const value = getter ? getter.call(obj) : val\n      if (Dep.target) {\n        dep.depend()\n        if (childOb) {\n          childOb.dep.depend()\n          if (Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      const value = getter ? getter.call(obj) : val\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter()\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) return\n      if (setter) {\n        setter.call(obj, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = !shallow && observe(newVal)\n      dep.notify()\n    }\n  })\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nexport function set (target: Array<any> | Object, key: any, val: any): any {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn(`Cannot set reactive property on undefined, null, or primitive value: ${(target: any)}`)\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val\n    return val\n  }\n  const ob = (target: any).__ob__\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    )\n    return val\n  }\n  if (!ob) {\n    target[key] = val\n    return val\n  }\n  defineReactive(ob.value, key, val)\n  ob.dep.notify()\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nexport function del (target: Array<any> | Object, key: any) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn(`Cannot delete reactive property on undefined, null, or primitive value: ${(target: any)}`)\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1)\n    return\n  }\n  const ob = (target: any).__ob__\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    )\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key]\n  if (!ob) {\n    return\n  }\n  ob.dep.notify()\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value: Array<any>) {\n  for (let e, i = 0, l = value.length; i < l; i++) {\n    e = value[i]\n    e && e.__ob__ && e.__ob__.dep.depend()\n    if (Array.isArray(e)) {\n      dependArray(e)\n    }\n  }\n}\n","/* @flow */\n\nimport config from '../config'\nimport { warn } from './debug'\nimport { set } from '../observer/index'\nimport { unicodeRegExp } from './lang'\nimport { nativeWatch, hasSymbol } from './env'\n\nimport {\n  ASSET_TYPES,\n  LIFECYCLE_HOOKS\n} from 'shared/constants'\n\nimport {\n  extend,\n  hasOwn,\n  camelize,\n  toRawType,\n  capitalize,\n  isBuiltInTag,\n  isPlainObject\n} from 'shared/util'\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nconst strats = config.optionMergeStrategies\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        `option \"${key}\" can only be used during instance ` +\n        'creation with the `new` keyword.'\n      )\n    }\n    return defaultStrat(parent, child)\n  }\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to: Object, from: ?Object): Object {\n  if (!from) return to\n  let key, toVal, fromVal\n\n  const keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from)\n\n  for (let i = 0; i < keys.length; i++) {\n    key = keys[i]\n    // in case the object is already observed...\n    if (key === '__ob__') continue\n    toVal = to[key]\n    fromVal = from[key]\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal)\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal)\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nexport function mergeDataOrFn (\n  parentVal: any,\n  childVal: any,\n  vm?: Component\n): ?Function {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      const instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal\n      const defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal: any,\n  childVal: any,\n  vm?: Component\n): ?Function {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      )\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n}\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal: ?Array<Function>,\n  childVal: ?Function | ?Array<Function>\n): ?Array<Function> {\n  const res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  const res = []\n  for (let i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i])\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal: ?Object,\n  childVal: ?Object,\n  vm?: Component,\n  key: string\n): Object {\n  const res = Object.create(parentVal || null)\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm)\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets\n})\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal: ?Object,\n  childVal: ?Object,\n  vm?: Component,\n  key: string\n): ?Object {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) parentVal = undefined\n  if (childVal === nativeWatch) childVal = undefined\n  /* istanbul ignore if */\n  if (!childVal) return Object.create(parentVal || null)\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm)\n  }\n  if (!parentVal) return childVal\n  const ret = {}\n  extend(ret, parentVal)\n  for (const key in childVal) {\n    let parent = ret[key]\n    const child = childVal[key]\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent]\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child]\n  }\n  return ret\n}\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal: ?Object,\n  childVal: ?Object,\n  vm?: Component,\n  key: string\n): ?Object {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm)\n  }\n  if (!parentVal) return childVal\n  const ret = Object.create(null)\n  extend(ret, parentVal)\n  if (childVal) extend(ret, childVal)\n  return ret\n}\nstrats.provide = mergeDataOrFn\n\n/**\n * Default strategy.\n */\nconst defaultStrat = function (parentVal: any, childVal: any): any {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n}\n\n/**\n * Validate component names\n */\nfunction checkComponents (options: Object) {\n  for (const key in options.components) {\n    validateComponentName(key)\n  }\n}\n\nexport function validateComponentName (name: string) {\n  if (!new RegExp(`^[a-zA-Z][\\\\-\\\\.0-9_${unicodeRegExp.source}]*$`).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    )\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    )\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options: Object, vm: ?Component) {\n  const props = options.props\n  if (!props) return\n  const res = {}\n  let i, val, name\n  if (Array.isArray(props)) {\n    i = props.length\n    while (i--) {\n      val = props[i]\n      if (typeof val === 'string') {\n        name = camelize(val)\n        res[name] = { type: null }\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.')\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (const key in props) {\n      val = props[key]\n      name = camelize(key)\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val }\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `Invalid value for option \"props\": expected an Array or an Object, ` +\n      `but got ${toRawType(props)}.`,\n      vm\n    )\n  }\n  options.props = res\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options: Object, vm: ?Component) {\n  const inject = options.inject\n  if (!inject) return\n  const normalized = options.inject = {}\n  if (Array.isArray(inject)) {\n    for (let i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] }\n    }\n  } else if (isPlainObject(inject)) {\n    for (const key in inject) {\n      const val = inject[key]\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val }\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `Invalid value for option \"inject\": expected an Array or an Object, ` +\n      `but got ${toRawType(inject)}.`,\n      vm\n    )\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options: Object) {\n  const dirs = options.directives\n  if (dirs) {\n    for (const key in dirs) {\n      const def = dirs[key]\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def }\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name: string, value: any, vm: ?Component) {\n  if (!isPlainObject(value)) {\n    warn(\n      `Invalid value for option \"${name}\": expected an Object, ` +\n      `but got ${toRawType(value)}.`,\n      vm\n    )\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nexport function mergeOptions (\n  parent: Object,\n  child: Object,\n  vm?: Component\n): Object {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child)\n  }\n\n  if (typeof child === 'function') {\n    child = child.options\n  }\n\n  normalizeProps(child, vm)\n  normalizeInject(child, vm)\n  normalizeDirectives(child)\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm)\n    }\n    if (child.mixins) {\n      for (let i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm)\n      }\n    }\n  }\n\n  const options = {}\n  let key\n  for (key in parent) {\n    mergeField(key)\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key)\n    }\n  }\n  function mergeField (key) {\n    const strat = strats[key] || defaultStrat\n    options[key] = strat(parent[key], child[key], vm, key)\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nexport function resolveAsset (\n  options: Object,\n  type: string,\n  id: string,\n  warnMissing?: boolean\n): any {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  const assets = options[type]\n  // check local registration variations first\n  if (hasOwn(assets, id)) return assets[id]\n  const camelizedId = camelize(id)\n  if (hasOwn(assets, camelizedId)) return assets[camelizedId]\n  const PascalCaseId = capitalize(camelizedId)\n  if (hasOwn(assets, PascalCaseId)) return assets[PascalCaseId]\n  // fallback to prototype chain\n  const res = assets[id] || assets[camelizedId] || assets[PascalCaseId]\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    )\n  }\n  return res\n}\n","/* @flow */\n\nimport { warn } from './debug'\nimport { observe, toggleObserving, shouldObserve } from '../observer/index'\nimport {\n  hasOwn,\n  isObject,\n  toRawType,\n  hyphenate,\n  capitalize,\n  isPlainObject\n} from 'shared/util'\n\ntype PropOptions = {\n  type: Function | Array<Function> | null,\n  default: any,\n  required: ?boolean,\n  validator: ?Function\n};\n\nexport function validateProp (\n  key: string,\n  propOptions: Object,\n  propsData: Object,\n  vm?: Component\n): any {\n  const prop = propOptions[key]\n  const absent = !hasOwn(propsData, key)\n  let value = propsData[key]\n  // boolean casting\n  const booleanIndex = getTypeIndex(Boolean, prop.type)\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      const stringIndex = getTypeIndex(String, prop.type)\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key)\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    const prevShouldObserve = shouldObserve\n    toggleObserving(true)\n    observe(value)\n    toggleObserving(prevShouldObserve)\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(__WEEX__ && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent)\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm: ?Component, prop: PropOptions, key: string): any {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  const def = prop.default\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    )\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop: PropOptions,\n  name: string,\n  value: any,\n  vm: ?Component,\n  absent: boolean\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    )\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  let type = prop.type\n  let valid = !type || type === true\n  const expectedTypes = []\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type]\n    }\n    for (let i = 0; i < type.length && !valid; i++) {\n      const assertedType = assertType(value, type[i], vm)\n      expectedTypes.push(assertedType.expectedType || '')\n      valid = assertedType.valid\n    }\n  }\n\n  const haveExpectedTypes = expectedTypes.some(t => t)\n  if (!valid && haveExpectedTypes) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    )\n    return\n  }\n  const validator = prop.validator\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      )\n    }\n  }\n}\n\nconst simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/\n\nfunction assertType (value: any, type: Function, vm: ?Component): {\n  valid: boolean;\n  expectedType: string;\n} {\n  let valid\n  const expectedType = getType(type)\n  if (simpleCheckRE.test(expectedType)) {\n    const t = typeof value\n    valid = t === expectedType.toLowerCase()\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value)\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value)\n  } else {\n    try {\n      valid = value instanceof type\n    } catch (e) {\n      warn('Invalid prop type: \"' + String(type) + '\" is not a constructor', vm);\n      valid = false;\n    }\n  }\n  return {\n    valid,\n    expectedType\n  }\n}\n\nconst functionTypeCheckRE = /^\\s*function (\\w+)/\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  const match = fn && fn.toString().match(functionTypeCheckRE)\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes): number {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (let i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  let message = `Invalid prop: type check failed for prop \"${name}\".` +\n    ` Expected ${expectedTypes.map(capitalize).join(', ')}`\n  const expectedType = expectedTypes[0]\n  const receivedType = toRawType(value)\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    isExplicable(typeof value) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += ` with value ${styleValue(value, expectedType)}`\n  }\n  message += `, got ${receivedType} `\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += `with value ${styleValue(value, receivedType)}.`\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return `\"${value}\"`\n  } else if (type === 'Number') {\n    return `${Number(value)}`\n  } else {\n    return `${value}`\n  }\n}\n\nconst EXPLICABLE_TYPES = ['string', 'number', 'boolean']\nfunction isExplicable (value) {\n  return EXPLICABLE_TYPES.some(elem => value.toLowerCase() === elem)\n}\n\nfunction isBoolean (...args) {\n  return args.some(elem => elem.toLowerCase() === 'boolean')\n}\n","/* @flow */\n\nimport config from '../config'\nimport { warn } from './debug'\nimport { inBrowser, inWeex } from './env'\nimport { isPromise } from 'shared/util'\nimport { pushTarget, popTarget } from '../observer/dep'\n\nexport function handleError (err: Error, vm: any, info: string) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget()\n  try {\n    if (vm) {\n      let cur = vm\n      while ((cur = cur.$parent)) {\n        const hooks = cur.$options.errorCaptured\n        if (hooks) {\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              const capture = hooks[i].call(cur, err, vm, info) === false\n              if (capture) return\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook')\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info)\n  } finally {\n    popTarget()\n  }\n}\n\nexport function invokeWithErrorHandling (\n  handler: Function,\n  context: any,\n  args: null | any[],\n  vm: any,\n  info: string\n) {\n  let res\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context)\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(e => handleError(e, vm, info + ` (Promise/async)`))\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true\n    }\n  } catch (e) {\n    handleError(e, vm, info)\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler')\n      }\n    }\n  }\n  logError(err, vm, info)\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn(`Error in ${info}: \"${err.toString()}\"`, vm)\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err)\n  } else {\n    throw err\n  }\n}\n","/* @flow */\n/* globals MutationObserver */\n\nimport { noop } from 'shared/util'\nimport { handleError } from './error'\nimport { isIE, isIOS, isNative } from './env'\n\nexport let isUsingMicroTask = false\n\nconst callbacks = []\nlet pending = false\n\nfunction flushCallbacks () {\n  pending = false\n  const copies = callbacks.slice(0)\n  callbacks.length = 0\n  for (let i = 0; i < copies.length; i++) {\n    copies[i]()\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nlet timerFunc\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  const p = Promise.resolve()\n  timerFunc = () => {\n    p.then(flushCallbacks)\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) setTimeout(noop)\n  }\n  isUsingMicroTask = true\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  let counter = 1\n  const observer = new MutationObserver(flushCallbacks)\n  const textNode = document.createTextNode(String(counter))\n  observer.observe(textNode, {\n    characterData: true\n  })\n  timerFunc = () => {\n    counter = (counter + 1) % 2\n    textNode.data = String(counter)\n  }\n  isUsingMicroTask = true\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = () => {\n    setImmediate(flushCallbacks)\n  }\n} else {\n  // Fallback to setTimeout.\n  timerFunc = () => {\n    setTimeout(flushCallbacks, 0)\n  }\n}\n\nexport function nextTick (cb?: Function, ctx?: Object) {\n  let _resolve\n  callbacks.push(() => {\n    if (cb) {\n      try {\n        cb.call(ctx)\n      } catch (e) {\n        handleError(e, ctx, 'nextTick')\n      }\n    } else if (_resolve) {\n      _resolve(ctx)\n    }\n  })\n  if (!pending) {\n    pending = true\n    timerFunc()\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(resolve => {\n      _resolve = resolve\n    })\n  }\n}\n","/* @flow */\n\nexport * from 'shared/util'\nexport * from './lang'\nexport * from './env'\nexport * from './options'\nexport * from './debug'\nexport * from './props'\nexport * from './error'\nexport * from './next-tick'\nexport { defineReactive } from '../observer/index'\n","import { inBrowser } from './env'\n\nexport let mark\nexport let measure\n\nif (process.env.NODE_ENV !== 'production') {\n  const perf = inBrowser && window.performance\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = tag => perf.mark(tag)\n    measure = (name, startTag, endTag) => {\n      perf.measure(name, startTag, endTag)\n      perf.clearMarks(startTag)\n      perf.clearMarks(endTag)\n      // perf.clearMeasures(name)\n    }\n  }\n}\n","/* not type checking this file because flow doesn't play well with Proxy */\n\nimport config from 'core/config'\nimport { warn, makeMap, isNative } from '../util/index'\n\nlet initProxy\n\nif (process.env.NODE_ENV !== 'production') {\n  const allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +\n    'require' // for Webpack/Browserify\n  )\n\n  const warnNonPresent = (target, key) => {\n    warn(\n      `Property or method \"${key}\" is not defined on the instance but ` +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    )\n  }\n\n  const warnReservedPrefix = (target, key) => {\n    warn(\n      `Property \"${key}\" must be accessed with \"$data.${key}\" because ` +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    )\n  }\n\n  const hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy)\n\n  if (hasProxy) {\n    const isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact')\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn(`Avoid overwriting built-in modifier in config.keyCodes: .${key}`)\n          return false\n        } else {\n          target[key] = value\n          return true\n        }\n      }\n    })\n  }\n\n  const hasHandler = {\n    has (target, key) {\n      const has = key in target\n      const isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data))\n      if (!has && !isAllowed) {\n        if (key in target.$data) warnReservedPrefix(target, key)\n        else warnNonPresent(target, key)\n      }\n      return has || !isAllowed\n    }\n  }\n\n  const getHandler = {\n    get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) warnReservedPrefix(target, key)\n        else warnNonPresent(target, key)\n      }\n      return target[key]\n    }\n  }\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      const options = vm.$options\n      const handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler\n      vm._renderProxy = new Proxy(vm, handlers)\n    } else {\n      vm._renderProxy = vm\n    }\n  }\n}\n\nexport { initProxy }\n","/* @flow */\n\nimport { _Set as Set, isObject } from '../util/index'\nimport type { SimpleSet } from '../util/index'\nimport VNode from '../vdom/vnode'\n\nconst seenObjects = new Set()\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nexport function traverse (val: any) {\n  _traverse(val, seenObjects)\n  seenObjects.clear()\n}\n\nfunction _traverse (val: any, seen: SimpleSet) {\n  let i, keys\n  const isA = Array.isArray(val)\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    const depId = val.__ob__.dep.id\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId)\n  }\n  if (isA) {\n    i = val.length\n    while (i--) _traverse(val[i], seen)\n  } else {\n    keys = Object.keys(val)\n    i = keys.length\n    while (i--) _traverse(val[keys[i]], seen)\n  }\n}\n","/* @flow */\n\nimport {\n  warn,\n  invokeWithErrorHandling\n} from 'core/util/index'\nimport {\n  cached,\n  isUndef,\n  isTrue,\n  isPlainObject\n} from 'shared/util'\n\nconst normalizeEvent = cached((name: string): {\n  name: string,\n  once: boolean,\n  capture: boolean,\n  passive: boolean,\n  handler?: Function,\n  params?: Array<any>\n} => {\n  const passive = name.charAt(0) === '&'\n  name = passive ? name.slice(1) : name\n  const once = name.charAt(0) === '~' // Prefixed last, checked first\n  name = once ? name.slice(1) : name\n  const capture = name.charAt(0) === '!'\n  name = capture ? name.slice(1) : name\n  return {\n    name,\n    once,\n    capture,\n    passive\n  }\n})\n\nexport function createFnInvoker (fns: Function | Array<Function>, vm: ?Component): Function {\n  function invoker () {\n    const fns = invoker.fns\n    if (Array.isArray(fns)) {\n      const cloned = fns.slice()\n      for (let i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments, vm, `v-on handler`)\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, `v-on handler`)\n    }\n  }\n  invoker.fns = fns\n  return invoker\n}\n\nexport function updateListeners (\n  on: Object,\n  oldOn: Object,\n  add: Function,\n  remove: Function,\n  createOnceHandler: Function,\n  vm: Component\n) {\n  let name, def, cur, old, event\n  for (name in on) {\n    def = cur = on[name]\n    old = oldOn[name]\n    event = normalizeEvent(name)\n    /* istanbul ignore if */\n    if (__WEEX__ && isPlainObject(def)) {\n      cur = def.handler\n      event.params = def.params\n    }\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        `Invalid handler for event \"${event.name}\": got ` + String(cur),\n        vm\n      )\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm)\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture)\n      }\n      add(event.name, cur, event.capture, event.passive, event.params)\n    } else if (cur !== old) {\n      old.fns = cur\n      on[name] = old\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name)\n      remove(event.name, oldOn[name], event.capture)\n    }\n  }\n}\n","/* @flow */\n\nimport VNode from '../vnode'\nimport { createFnInvoker } from './update-listeners'\nimport { remove, isDef, isUndef, isTrue } from 'shared/util'\n\nexport function mergeVNodeHook (def: Object, hookKey: string, hook: Function) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {})\n  }\n  let invoker\n  const oldHook = def[hookKey]\n\n  function wrappedHook () {\n    hook.apply(this, arguments)\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook)\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook])\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook\n      invoker.fns.push(wrappedHook)\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook])\n    }\n  }\n\n  invoker.merged = true\n  def[hookKey] = invoker\n}\n","/* @flow */\n\nimport {\n  tip,\n  hasOwn,\n  isDef,\n  isUndef,\n  hyphenate,\n  formatComponentName\n} from 'core/util/index'\n\nexport function extractPropsFromVNodeData (\n  data: VNodeData,\n  Ctor: Class<Component>,\n  tag?: string\n): ?Object {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  const propOptions = Ctor.options.props\n  if (isUndef(propOptions)) {\n    return\n  }\n  const res = {}\n  const { attrs, props } = data\n  if (isDef(attrs) || isDef(props)) {\n    for (const key in propOptions) {\n      const altKey = hyphenate(key)\n      if (process.env.NODE_ENV !== 'production') {\n        const keyInLowerCase = key.toLowerCase()\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            `Prop \"${keyInLowerCase}\" is passed to component ` +\n            `${formatComponentName(tag || Ctor)}, but the declared prop name is` +\n            ` \"${key}\". ` +\n            `Note that HTML attributes are case-insensitive and camelCased ` +\n            `props need to use their kebab-case equivalents when using in-DOM ` +\n            `templates. You should probably use \"${altKey}\" instead of \"${key}\".`\n          )\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false)\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res: Object,\n  hash: ?Object,\n  key: string,\n  altKey: string,\n  preserve: boolean\n): boolean {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key]\n      if (!preserve) {\n        delete hash[key]\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey]\n      if (!preserve) {\n        delete hash[altKey]\n      }\n      return true\n    }\n  }\n  return false\n}\n","/* @flow */\n\nimport VNode, { createTextVNode } from 'core/vdom/vnode'\nimport { isFalse, isTrue, isDef, isUndef, isPrimitive } from 'shared/util'\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nexport function simpleNormalizeChildren (children: any) {\n  for (let i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nexport function normalizeChildren (children: any): ?Array<VNode> {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node): boolean {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children: any, nestedIndex?: string): Array<VNode> {\n  const res = []\n  let i, c, lastIndex, last\n  for (i = 0; i < children.length; i++) {\n    c = children[i]\n    if (isUndef(c) || typeof c === 'boolean') continue\n    lastIndex = res.length - 1\n    last = res[lastIndex]\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, `${nestedIndex || ''}_${i}`)\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]: any).text)\n          c.shift()\n        }\n        res.push.apply(res, c)\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c)\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c))\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text)\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = `__vlist${nestedIndex}_${i}__`\n        }\n        res.push(c)\n      }\n    }\n  }\n  return res\n}\n","/* @flow */\n\nimport { hasOwn } from 'shared/util'\nimport { warn, hasSymbol } from '../util/index'\nimport { defineReactive, toggleObserving } from '../observer/index'\n\nexport function initProvide (vm: Component) {\n  const provide = vm.$options.provide\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide\n  }\n}\n\nexport function initInjections (vm: Component) {\n  const result = resolveInject(vm.$options.inject, vm)\n  if (result) {\n    toggleObserving(false)\n    Object.keys(result).forEach(key => {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], () => {\n          warn(\n            `Avoid mutating an injected value directly since the changes will be ` +\n            `overwritten whenever the provided component re-renders. ` +\n            `injection being mutated: \"${key}\"`,\n            vm\n          )\n        })\n      } else {\n        defineReactive(vm, key, result[key])\n      }\n    })\n    toggleObserving(true)\n  }\n}\n\nexport function resolveInject (inject: any, vm: Component): ?Object {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    const result = Object.create(null)\n    const keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') continue\n      const provideKey = inject[key].from\n      let source = vm\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey]\n          break\n        }\n        source = source.$parent\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          const provideDefault = inject[key].default\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn(`Injection \"${key}\" not found`, vm)\n        }\n      }\n    }\n    return result\n  }\n}\n","/* @flow */\n\nimport type VNode from 'core/vdom/vnode'\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nexport function resolveSlots (\n  children: ?Array<VNode>,\n  context: ?Component\n): { [key: string]: Array<VNode> } {\n  if (!children || !children.length) {\n    return {}\n  }\n  const slots = {}\n  for (let i = 0, l = children.length; i < l; i++) {\n    const child = children[i]\n    const data = child.data\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      const name = data.slot\n      const slot = (slots[name] || (slots[name] = []))\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || [])\n      } else {\n        slot.push(child)\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child)\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (const name in slots) {\n    if (slots[name].every(isWhitespace)) {\n      delete slots[name]\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node: VNode): boolean {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n","/* @flow */\n\nexport function isAsyncPlaceholder (node: VNode): boolean {\n  return node.isComment && node.asyncFactory\n}\n","/* @flow */\n\nimport { def } from 'core/util/lang'\nimport { normalizeChildren } from 'core/vdom/helpers/normalize-children'\nimport { emptyObject } from 'shared/util'\nimport { isAsyncPlaceholder } from './is-async-placeholder'\n\nexport function normalizeScopedSlots (\n  slots: { [key: string]: Function } | void,\n  normalSlots: { [key: string]: Array<VNode> },\n  prevSlots?: { [key: string]: Function } | void\n): any {\n  let res\n  const hasNormalSlots = Object.keys(normalSlots).length > 0\n  const isStable = slots ? !!slots.$stable : !hasNormalSlots\n  const key = slots && slots.$key\n  if (!slots) {\n    res = {}\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {}\n    for (const key in slots) {\n      if (slots[key] && key[0] !== '$') {\n        res[key] = normalizeScopedSlot(normalSlots, key, slots[key])\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (const key in normalSlots) {\n    if (!(key in res)) {\n      res[key] = proxyNormalSlot(normalSlots, key)\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots: any)._normalized = res\n  }\n  def(res, '$stable', isStable)\n  def(res, '$key', key)\n  def(res, '$hasNormal', hasNormalSlots)\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  const normalized = function () {\n    let res = arguments.length ? fn.apply(null, arguments) : fn({})\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res)\n    let vnode: ?VNode = res && res[0]\n    return res && (\n      !vnode ||\n      (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391\n    ) ? undefined\n      : res\n  }\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    })\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return () => slots[key]\n}\n","/* @flow */\n\nimport { isObject, isDef, hasSymbol } from 'core/util/index'\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nexport function renderList (\n  val: any,\n  render: (\n    val: any,\n    keyOrIndex: string | number,\n    index?: number\n  ) => VNode\n): ?Array<VNode> {\n  let ret: ?Array<VNode>, i, l, keys, key\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length)\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i)\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val)\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i)\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = []\n      const iterator: Iterator<any> = val[Symbol.iterator]()\n      let result = iterator.next()\n      while (!result.done) {\n        ret.push(render(result.value, ret.length))\n        result = iterator.next()\n      }\n    } else {\n      keys = Object.keys(val)\n      ret = new Array(keys.length)\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i]\n        ret[i] = render(val[key], key, i)\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = []\n  }\n  (ret: any)._isVList = true\n  return ret\n}\n","/* @flow */\n\nimport { extend, warn, isObject } from 'core/util/index'\n\n/**\n * Runtime helper for rendering <slot>\n */\nexport function renderSlot (\n  name: string,\n  fallbackRender: ?((() => Array<VNode>) | Array<VNode>),\n  props: ?Object,\n  bindObject: ?Object\n): ?Array<VNode> {\n  const scopedSlotFn = this.$scopedSlots[name]\n  let nodes\n  if (scopedSlotFn) {\n    // scoped slot\n    props = props || {}\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn('slot v-bind without argument expects an Object', this)\n      }\n      props = extend(extend({}, bindObject), props)\n    }\n    nodes =\n      scopedSlotFn(props) ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender)\n  } else {\n    nodes =\n      this.$slots[name] ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender)\n  }\n\n  const target = props && props.slot\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n","/* @flow */\n\nimport { identity, resolveAsset } from 'core/util/index'\n\n/**\n * Runtime helper for resolving filters\n */\nexport function resolveFilter (id: string): Function {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n","/* @flow */\n\nimport config from 'core/config'\nimport { hyphenate } from 'shared/util'\n\nfunction isKeyNotMatch<T> (expect: T | Array<T>, actual: T): boolean {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nexport function checkKeyCodes (\n  eventKeyCode: number,\n  key: string,\n  builtInKeyCode?: number | Array<number>,\n  eventKeyName?: string,\n  builtInKeyName?: string | Array<string>\n): ?boolean {\n  const mappedKeyCode = config.keyCodes[key] || builtInKeyCode\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n  return eventKeyCode === undefined\n}\n","/* @flow */\n\nimport config from 'core/config'\n\nimport {\n  warn,\n  isObject,\n  toObject,\n  isReservedAttribute,\n  camelize,\n  hyphenate\n} from 'core/util/index'\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nexport function bindObjectProps (\n  data: any,\n  tag: string,\n  value: any,\n  asProp: boolean,\n  isSync?: boolean\n): VNodeData {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      )\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value)\n      }\n      let hash\n      for (const key in value) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data\n        } else {\n          const type = data.attrs && data.attrs.type\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {})\n        }\n        const camelizedKey = camelize(key)\n        const hyphenatedKey = hyphenate(key)\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key]\n\n          if (isSync) {\n            const on = data.on || (data.on = {})\n            on[`update:${key}`] = function ($event) {\n              value[key] = $event\n            }\n          }\n        }\n      }\n    }\n  }\n  return data\n}\n","/* @flow */\n\n/**\n * Runtime helper for rendering static trees.\n */\nexport function renderStatic (\n  index: number,\n  isInFor: boolean\n): VNode | Array<VNode> {\n  const cached = this._staticTrees || (this._staticTrees = [])\n  let tree = cached[index]\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  )\n  markStatic(tree, `__static__${index}`, false)\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nexport function markOnce (\n  tree: VNode | Array<VNode>,\n  index: number,\n  key: string\n) {\n  markStatic(tree, `__once__${index}${key ? `_${key}` : ``}`, true)\n  return tree\n}\n\nfunction markStatic (\n  tree: VNode | Array<VNode>,\n  key: string,\n  isOnce: boolean\n) {\n  if (Array.isArray(tree)) {\n    for (let i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], `${key}_${i}`, isOnce)\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce)\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true\n  node.key = key\n  node.isOnce = isOnce\n}\n","/* @flow */\n\nimport { warn, extend, isPlainObject } from 'core/util/index'\n\nexport function bindObjectListeners (data: any, value: any): VNodeData {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      )\n    } else {\n      const on = data.on = data.on ? extend({}, data.on) : {}\n      for (const key in value) {\n        const existing = on[key]\n        const ours = value[key]\n        on[key] = existing ? [].concat(existing, ours) : ours\n      }\n    }\n  }\n  return data\n}\n","/* @flow */\n\nexport function resolveScopedSlots (\n  fns: ScopedSlotsData, // see flow/vnode\n  res?: Object,\n  // the following are added in 2.6\n  hasDynamicKeys?: boolean,\n  contentHashKey?: number\n): { [key: string]: Function, $stable: boolean } {\n  res = res || { $stable: !hasDynamicKeys }\n  for (let i = 0; i < fns.length; i++) {\n    const slot = fns[i]\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys)\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true\n      }\n      res[slot.key] = slot.fn\n    }\n  }\n  if (contentHashKey) {\n    (res: any).$key = contentHashKey\n  }\n  return res\n}\n","/* @flow */\n\n// helper to process dynamic keys for dynamic arguments in v-bind and v-on.\n// For example, the following template:\n//\n// <div id=\"app\" :[key]=\"value\">\n//\n// compiles to the following:\n//\n// _c('div', { attrs: bindDynamicKeys({ \"id\": \"app\" }, [key, value]) })\n\nimport { warn } from 'core/util/debug'\n\nexport function bindDynamicKeys (baseObj: Object, values: Array<any>): Object {\n  for (let i = 0; i < values.length; i += 2) {\n    const key = values[i]\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1]\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        `Invalid value for dynamic directive argument (expected string or null): ${key}`,\n        this\n      )\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nexport function prependModifier (value: any, symbol: string): any {\n  return typeof value === 'string' ? symbol + value : value\n}\n","/* @flow */\n\nimport { toNumber, toString, looseEqual, looseIndexOf } from 'shared/util'\nimport { createTextVNode, createEmptyVNode } from 'core/vdom/vnode'\nimport { renderList } from './render-list'\nimport { renderSlot } from './render-slot'\nimport { resolveFilter } from './resolve-filter'\nimport { checkKeyCodes } from './check-keycodes'\nimport { bindObjectProps } from './bind-object-props'\nimport { renderStatic, markOnce } from './render-static'\nimport { bindObjectListeners } from './bind-object-listeners'\nimport { resolveScopedSlots } from './resolve-scoped-slots'\nimport { bindDynamicKeys, prependModifier } from './bind-dynamic-keys'\n\nexport function installRenderHelpers (target: any) {\n  target._o = markOnce\n  target._n = toNumber\n  target._s = toString\n  target._l = renderList\n  target._t = renderSlot\n  target._q = looseEqual\n  target._i = looseIndexOf\n  target._m = renderStatic\n  target._f = resolveFilter\n  target._k = checkKeyCodes\n  target._b = bindObjectProps\n  target._v = createTextVNode\n  target._e = createEmptyVNode\n  target._u = resolveScopedSlots\n  target._g = bindObjectListeners\n  target._d = bindDynamicKeys\n  target._p = prependModifier\n}\n","/* @flow */\n\nimport VNode, { cloneVNode } from './vnode'\nimport { createElement } from './create-element'\nimport { resolveInject } from '../instance/inject'\nimport { normalizeChildren } from '../vdom/helpers/normalize-children'\nimport { resolveSlots } from '../instance/render-helpers/resolve-slots'\nimport { normalizeScopedSlots } from '../vdom/helpers/normalize-scoped-slots'\nimport { installRenderHelpers } from '../instance/render-helpers/index'\n\nimport {\n  isDef,\n  isTrue,\n  hasOwn,\n  camelize,\n  emptyObject,\n  validateProp\n} from '../util/index'\n\nexport function FunctionalRenderContext (\n  data: VNodeData,\n  props: Object,\n  children: ?Array<VNode>,\n  parent: Component,\n  Ctor: Class<Component>\n) {\n  const options = Ctor.options\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  let contextVm\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent)\n    // $flow-disable-line\n    contextVm._original = parent\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent\n    // $flow-disable-line\n    parent = parent._original\n  }\n  const isCompiled = isTrue(options._compiled)\n  const needNormalization = !isCompiled\n\n  this.data = data\n  this.props = props\n  this.children = children\n  this.parent = parent\n  this.listeners = data.on || emptyObject\n  this.injections = resolveInject(options.inject, parent)\n  this.slots = () => {\n    if (!this.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this.$slots = resolveSlots(children, parent)\n      )\n    }\n    return this.$slots\n  }\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }: any))\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots()\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots)\n  }\n\n  if (options._scopeId) {\n    this._c = (a, b, c, d) => {\n      const vnode = createElement(contextVm, a, b, c, d, needNormalization)\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId\n        vnode.fnContext = parent\n      }\n      return vnode\n    }\n  } else {\n    this._c = (a, b, c, d) => createElement(contextVm, a, b, c, d, needNormalization)\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype)\n\nexport function createFunctionalComponent (\n  Ctor: Class<Component>,\n  propsData: ?Object,\n  data: VNodeData,\n  contextVm: Component,\n  children: ?Array<VNode>\n): VNode | Array<VNode> | void {\n  const options = Ctor.options\n  const props = {}\n  const propOptions = options.props\n  if (isDef(propOptions)) {\n    for (const key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject)\n    }\n  } else {\n    if (isDef(data.attrs)) mergeProps(props, data.attrs)\n    if (isDef(data.props)) mergeProps(props, data.props)\n  }\n\n  const renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  )\n\n  const vnode = options.render.call(null, renderContext._c, renderContext)\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    const vnodes = normalizeChildren(vnode) || []\n    const res = new Array(vnodes.length)\n    for (let i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext)\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  const clone = cloneVNode(vnode)\n  clone.fnContext = contextVm\n  clone.fnOptions = options\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (const key in from) {\n    to[camelize(key)] = from[key]\n  }\n}\n","/* @flow */\ndeclare var document: WeexDocument;\n\nimport { warn } from 'core/util/index'\n\nexport const RECYCLE_LIST_MARKER = '@inRecycleList'\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\nexport function registerComponentHook (\n  componentId: string,\n  type: string, // hook type, could be \"lifecycle\" or \"instance\"\n  hook: string, // hook name\n  fn: Function\n) {\n  if (!document || !document.taskCenter) {\n    warn(`Can't find available \"document\" or \"taskCenter\".`)\n    return\n  }\n  if (typeof document.taskCenter.registerHook === 'function') {\n    return document.taskCenter.registerHook(componentId, type, hook, fn)\n  }\n  warn(`Failed to register component hook \"${type}@${hook}#${componentId}\".`)\n}\n\n// Updates the state of the component to weex native render engine.\nexport function updateComponentData (\n  componentId: string,\n  newData: Object | void,\n  callback?: Function\n) {\n  if (!document || !document.taskCenter) {\n    warn(`Can't find available \"document\" or \"taskCenter\".`)\n    return\n  }\n  if (typeof document.taskCenter.updateData === 'function') {\n    return document.taskCenter.updateData(componentId, newData, callback)\n  }\n  warn(`Failed to update component data (${componentId}).`)\n}\n","/* @flow */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\nimport { mergeOptions, isPlainObject, noop } from 'core/util/index'\nimport Watcher from 'core/observer/watcher'\nimport { initProxy } from 'core/instance/proxy'\nimport { initState, getData } from 'core/instance/state'\nimport { initRender } from 'core/instance/render'\nimport { initEvents } from 'core/instance/events'\nimport { initProvide, initInjections } from 'core/instance/inject'\nimport { initLifecycle, callHook } from 'core/instance/lifecycle'\nimport { initInternalComponent, resolveConstructorOptions } from 'core/instance/init'\nimport { registerComponentHook, updateComponentData } from '../../util/index'\n\nlet uid = 0\n\n// override Vue.prototype._init\nfunction initVirtualComponent (options: Object = {}) {\n  const vm: Component = this\n  const componentId = options.componentId\n\n  // virtual component uid\n  vm._uid = `virtual-component-${uid++}`\n\n  // a flag to avoid this being observed\n  vm._isVue = true\n  // merge options\n  if (options && options._isComponent) {\n    // optimize internal component instantiation\n    // since dynamic options merging is pretty slow, and none of the\n    // internal component options needs special treatment.\n    initInternalComponent(vm, options)\n  } else {\n    vm.$options = mergeOptions(\n      resolveConstructorOptions(vm.constructor),\n      options || {},\n      vm\n    )\n  }\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    initProxy(vm)\n  } else {\n    vm._renderProxy = vm\n  }\n\n  vm._self = vm\n  initLifecycle(vm)\n  initEvents(vm)\n  initRender(vm)\n  callHook(vm, 'beforeCreate')\n  initInjections(vm) // resolve injections before data/props\n  initState(vm)\n  initProvide(vm) // resolve provide after data/props\n  callHook(vm, 'created')\n\n  // send initial data to native\n  const data = vm.$options.data\n  const params = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {}\n  if (isPlainObject(params)) {\n    updateComponentData(componentId, params)\n  }\n\n  registerComponentHook(componentId, 'lifecycle', 'attach', () => {\n    callHook(vm, 'beforeMount')\n\n    const updateComponent = () => {\n      vm._update(vm._vnode, false)\n    }\n    new Watcher(vm, updateComponent, noop, null, true)\n\n    vm._isMounted = true\n    callHook(vm, 'mounted')\n  })\n\n  registerComponentHook(componentId, 'lifecycle', 'detach', () => {\n    vm.$destroy()\n  })\n}\n\n// override Vue.prototype._update\nfunction updateVirtualComponent (vnode?: VNode) {\n  const vm: Component = this\n  const componentId = vm.$options.componentId\n  if (vm._isMounted) {\n    callHook(vm, 'beforeUpdate')\n  }\n  vm._vnode = vnode\n  if (vm._isMounted && componentId) {\n    // TODO: data should be filtered and without bindings\n    const data = Object.assign({}, vm._data)\n    updateComponentData(componentId, data, () => {\n      callHook(vm, 'updated')\n    })\n  }\n}\n\n// listening on native callback\nexport function resolveVirtualComponent (vnode: MountedComponentVNode): VNode {\n  const BaseCtor = vnode.componentOptions.Ctor\n  const VirtualComponent = BaseCtor.extend({})\n  const cid = VirtualComponent.cid\n  VirtualComponent.prototype._init = initVirtualComponent\n  VirtualComponent.prototype._update = updateVirtualComponent\n\n  vnode.componentOptions.Ctor = BaseCtor.extend({\n    beforeCreate () {\n      // const vm: Component = this\n\n      // TODO: listen on all events and dispatch them to the\n      // corresponding virtual components according to the componentId.\n      // vm._virtualComponents = {}\n      const createVirtualComponent = (componentId, propsData) => {\n        // create virtual component\n        // const subVm =\n        new VirtualComponent({\n          componentId,\n          propsData\n        })\n        // if (vm._virtualComponents) {\n        //   vm._virtualComponents[componentId] = subVm\n        // }\n      }\n\n      registerComponentHook(cid, 'lifecycle', 'create', createVirtualComponent)\n    },\n    beforeDestroy () {\n      delete this._virtualComponents\n    }\n  })\n}\n\n","/* @flow */\n\nimport { warn } from 'core/util/debug'\nimport { handleError } from 'core/util/error'\nimport { RECYCLE_LIST_MARKER } from 'weex/util/index'\nimport { createComponentInstanceForVnode } from 'core/vdom/create-component'\nimport { resolveVirtualComponent } from './virtual-component'\n\nexport function isRecyclableComponent (vnode: VNodeWithData): boolean {\n  return vnode.data.attrs\n    ? (RECYCLE_LIST_MARKER in vnode.data.attrs)\n    : false\n}\n\nexport function renderRecyclableComponentTemplate (vnode: MountedComponentVNode): VNode {\n  // $flow-disable-line\n  delete vnode.data.attrs[RECYCLE_LIST_MARKER]\n  resolveVirtualComponent(vnode)\n  const vm = createComponentInstanceForVnode(vnode)\n  const render = (vm.$options: any)['@render']\n  if (render) {\n    try {\n      return render.call(vm)\n    } catch (err) {\n      handleError(err, vm, `@render`)\n    }\n  } else {\n    warn(\n      `@render function not defined on component used in <recycle-list>. ` +\n      `Make sure to declare \\`recyclable=\"true\"\\` on the component's template.`,\n      vm\n    )\n  }\n}\n","/* @flow */\n\nimport VNode from './vnode'\nimport { resolveConstructorOptions } from 'core/instance/init'\nimport { queueActivatedComponent } from 'core/observer/scheduler'\nimport { createFunctionalComponent } from './create-functional-component'\n\nimport {\n  warn,\n  isDef,\n  isUndef,\n  isTrue,\n  isObject\n} from '../util/index'\n\nimport {\n  resolveAsyncComponent,\n  createAsyncPlaceholder,\n  extractPropsFromVNodeData\n} from './helpers/index'\n\nimport {\n  callHook,\n  activeInstance,\n  updateChildComponent,\n  activateChildComponent,\n  deactivateChildComponent\n} from '../instance/lifecycle'\n\nimport {\n  isRecyclableComponent,\n  renderRecyclableComponentTemplate\n} from 'weex/runtime/recycle-list/render-component-template'\n\n// inline hooks to be invoked on component VNodes during patch\nconst componentVNodeHooks = {\n  init (vnode: VNodeWithData, hydrating: boolean): ?boolean {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      const mountedNode: any = vnode // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode)\n    } else {\n      const child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      )\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating)\n    }\n  },\n\n  prepatch (oldVnode: MountedComponentVNode, vnode: MountedComponentVNode) {\n    const options = vnode.componentOptions\n    const child = vnode.componentInstance = oldVnode.componentInstance\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    )\n  },\n\n  insert (vnode: MountedComponentVNode) {\n    const { context, componentInstance } = vnode\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true\n      callHook(componentInstance, 'mounted')\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance)\n      } else {\n        activateChildComponent(componentInstance, true /* direct */)\n      }\n    }\n  },\n\n  destroy (vnode: MountedComponentVNode) {\n    const { componentInstance } = vnode\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy()\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */)\n      }\n    }\n  }\n}\n\nconst hooksToMerge = Object.keys(componentVNodeHooks)\n\nexport function createComponent (\n  Ctor: Class<Component> | Function | Object | void,\n  data: ?VNodeData,\n  context: Component,\n  children: ?Array<VNode>,\n  tag?: string\n): VNode | Array<VNode> | void {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  const baseCtor = context.$options._base\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor)\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(`Invalid Component definition: ${String(Ctor)}`, context)\n    }\n    return\n  }\n\n  // async component\n  let asyncFactory\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor)\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {}\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor)\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data)\n  }\n\n  // extract props\n  const propsData = extractPropsFromVNodeData(data, Ctor, tag)\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  const listeners = data.on\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    const slot = data.slot\n    data = {}\n    if (slot) {\n      data.slot = slot\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data)\n\n  // return a placeholder vnode\n  const name = Ctor.options.name || tag\n  const vnode = new VNode(\n    `vue-component-${Ctor.cid}${name ? `-${name}` : ''}`,\n    data, undefined, undefined, undefined, context,\n    { Ctor, propsData, listeners, tag, children },\n    asyncFactory\n  )\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  if (__WEEX__ && isRecyclableComponent(vnode)) {\n    return renderRecyclableComponentTemplate(vnode)\n  }\n\n  return vnode\n}\n\nexport function createComponentInstanceForVnode (\n  // we know it's MountedComponentVNode but flow doesn't\n  vnode: any,\n  // activeInstance in lifecycle state\n  parent: any\n): Component {\n  const options: InternalComponentOptions = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent\n  }\n  // check inline-template render functions\n  const inlineTemplate = vnode.data.inlineTemplate\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render\n    options.staticRenderFns = inlineTemplate.staticRenderFns\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data: VNodeData) {\n  const hooks = data.hook || (data.hook = {})\n  for (let i = 0; i < hooksToMerge.length; i++) {\n    const key = hooksToMerge[i]\n    const existing = hooks[key]\n    const toMerge = componentVNodeHooks[key]\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook(toMerge, existing) : toMerge\n    }\n  }\n}\n\nfunction mergeHook (f1: any, f2: any): Function {\n  const merged = (a, b) => {\n    // flow complains about extra args which is why we use any\n    f1(a, b)\n    f2(a, b)\n  }\n  merged._merged = true\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data: any) {\n  const prop = (options.model && options.model.prop) || 'value'\n  const event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value\n  const on = data.on || (data.on = {})\n  const existing = on[event]\n  const callback = data.model.callback\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing)\n    }\n  } else {\n    on[event] = callback\n  }\n}\n","/* @flow */\n\nimport config from '../config'\nimport VNode, { createEmptyVNode } from './vnode'\nimport { createComponent } from './create-component'\nimport { traverse } from '../observer/traverse'\n\nimport {\n  warn,\n  isDef,\n  isUndef,\n  isTrue,\n  isObject,\n  isPrimitive,\n  resolveAsset\n} from '../util/index'\n\nimport {\n  normalizeChildren,\n  simpleNormalizeChildren\n} from './helpers/index'\n\nconst SIMPLE_NORMALIZE = 1\nconst ALWAYS_NORMALIZE = 2\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nexport function createElement (\n  context: Component,\n  tag: any,\n  data: any,\n  children: any,\n  normalizationType: any,\n  alwaysNormalize: boolean\n): VNode | Array<VNode> {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children\n    children = data\n    data = undefined\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nexport function _createElement (\n  context: Component,\n  tag?: string | Class<Component> | Function | Object,\n  data?: VNodeData,\n  children?: any,\n  normalizationType?: number\n): VNode | Array<VNode> {\n  if (isDef(data) && isDef((data: any).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      `Avoid using observed data object as vnode data: ${JSON.stringify(data)}\\n` +\n      'Always create fresh vnode data objects in each render!',\n      context\n    )\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    if (!__WEEX__ || !('@binding' in data.key)) {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      )\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {}\n    data.scopedSlots = { default: children[0] }\n    children.length = 0\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children)\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children)\n  }\n  let vnode, ns\n  if (typeof tag === 'string') {\n    let Ctor\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag)\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {\n        warn(\n          `The .native modifier for v-on is only valid on components but it was used on <${tag}>.`,\n          context\n        )\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      )\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag)\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      )\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children)\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) applyNS(vnode, ns)\n    if (isDef(data)) registerDeepBindings(data)\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined\n    force = true\n  }\n  if (isDef(vnode.children)) {\n    for (let i = 0, l = vnode.children.length; i < l; i++) {\n      const child = vnode.children[i]\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force)\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style)\n  }\n  if (isObject(data.class)) {\n    traverse(data.class)\n  }\n}\n","/* @flow */\n\nimport {\n  warn,\n  nextTick,\n  emptyObject,\n  handleError,\n  defineReactive\n} from '../util/index'\n\nimport { createElement } from '../vdom/create-element'\nimport { installRenderHelpers } from './render-helpers/index'\nimport { resolveSlots } from './render-helpers/resolve-slots'\nimport { normalizeScopedSlots } from '../vdom/helpers/normalize-scoped-slots'\nimport VNode, { createEmptyVNode } from '../vdom/vnode'\n\nimport { isUpdatingChildComponent } from './lifecycle'\n\nexport function initRender (vm: Component) {\n  vm._vnode = null // the root of the child tree\n  vm._staticTrees = null // v-once cached trees\n  const options = vm.$options\n  const parentVnode = vm.$vnode = options._parentVnode // the placeholder node in parent tree\n  const renderContext = parentVnode && parentVnode.context\n  vm.$slots = resolveSlots(options._renderChildren, renderContext)\n  vm.$scopedSlots = emptyObject\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = (a, b, c, d) => createElement(vm, a, b, c, d, false)\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = (a, b, c, d) => createElement(vm, a, b, c, d, true)\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  const parentData = parentVnode && parentVnode.data\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, () => {\n      !isUpdatingChildComponent && warn(`$attrs is readonly.`, vm)\n    }, true)\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, () => {\n      !isUpdatingChildComponent && warn(`$listeners is readonly.`, vm)\n    }, true)\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true)\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true)\n  }\n}\n\nexport let currentRenderingInstance: Component | null = null\n\n// for testing only\nexport function setCurrentRenderingInstance (vm: Component) {\n  currentRenderingInstance = vm\n}\n\nexport function renderMixin (Vue: Class<Component>) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype)\n\n  Vue.prototype.$nextTick = function (fn: Function) {\n    return nextTick(fn, this)\n  }\n\n  Vue.prototype._render = function (): VNode {\n    const vm: Component = this\n    const { render, _parentVnode } = vm.$options\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      )\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode\n    // render self\n    let vnode\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm\n      vnode = render.call(vm._renderProxy, vm.$createElement)\n    } catch (e) {\n      handleError(e, vm, `render`)\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n        } catch (e) {\n          handleError(e, vm, `renderError`)\n          vnode = vm._vnode\n        }\n      } else {\n        vnode = vm._vnode\n      }\n    } finally {\n      currentRenderingInstance = null\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0]\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        )\n      }\n      vnode = createEmptyVNode()\n    }\n    // set parent\n    vnode.parent = _parentVnode\n    return vnode\n  }\n}\n","/* @flow */\n\nimport {\n  warn,\n  once,\n  isDef,\n  isUndef,\n  isTrue,\n  isObject,\n  hasSymbol,\n  isPromise,\n  remove\n} from 'core/util/index'\n\nimport { createEmptyVNode } from 'core/vdom/vnode'\nimport { currentRenderingInstance } from 'core/instance/render'\n\nfunction ensureCtor (comp: any, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nexport function createAsyncPlaceholder (\n  factory: Function,\n  data: ?VNodeData,\n  context: Component,\n  children: ?Array<VNode>,\n  tag: ?string\n): VNode {\n  const node = createEmptyVNode()\n  node.asyncFactory = factory\n  node.asyncMeta = { data, context, children, tag }\n  return node\n}\n\nexport function resolveAsyncComponent (\n  factory: Function,\n  baseCtor: Class<Component>\n): Class<Component> | void {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  const owner = currentRenderingInstance\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner)\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    const owners = factory.owners = [owner]\n    let sync = true\n    let timerLoading = null\n    let timerTimeout = null\n\n    ;(owner: any).$on('hook:destroyed', () => remove(owners, owner))\n\n    const forceRender = (renderCompleted: boolean) => {\n      for (let i = 0, l = owners.length; i < l; i++) {\n        (owners[i]: any).$forceUpdate()\n      }\n\n      if (renderCompleted) {\n        owners.length = 0\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading)\n          timerLoading = null\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout)\n          timerTimeout = null\n        }\n      }\n    }\n\n    const resolve = once((res: Object | Class<Component>) => {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor)\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true)\n      } else {\n        owners.length = 0\n      }\n    })\n\n    const reject = once(reason => {\n      process.env.NODE_ENV !== 'production' && warn(\n        `Failed to resolve async component: ${String(factory)}` +\n        (reason ? `\\nReason: ${reason}` : '')\n      )\n      if (isDef(factory.errorComp)) {\n        factory.error = true\n        forceRender(true)\n      }\n    })\n\n    const res = factory(resolve, reject)\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject)\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject)\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor)\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor)\n          if (res.delay === 0) {\n            factory.loading = true\n          } else {\n            timerLoading = setTimeout(() => {\n              timerLoading = null\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true\n                forceRender(false)\n              }\n            }, res.delay || 200)\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(() => {\n            timerTimeout = null\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? `timeout (${res.timeout}ms)`\n                  : null\n              )\n            }\n          }, res.timeout)\n        }\n      }\n    }\n\n    sync = false\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n","/* @flow */\n\nimport { isDef } from 'shared/util'\nimport { isAsyncPlaceholder } from './is-async-placeholder'\n\nexport function getFirstComponentChild (children: ?Array<VNode>): ?VNode {\n  if (Array.isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      const c = children[i]\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n","/* @flow */\n\nexport * from './merge-hook'\nexport * from './extract-props'\nexport * from './update-listeners'\nexport * from './normalize-children'\nexport * from './resolve-async-component'\nexport * from './get-first-component-child'\nexport * from './is-async-placeholder'\n","/* @flow */\n\nimport {\n  tip,\n  toArray,\n  hyphenate,\n  formatComponentName,\n  invokeWithErrorHandling\n} from '../util/index'\nimport { updateListeners } from '../vdom/helpers/index'\n\nexport function initEvents (vm: Component) {\n  vm._events = Object.create(null)\n  vm._hasHookEvent = false\n  // init parent attached events\n  const listeners = vm.$options._parentListeners\n  if (listeners) {\n    updateComponentListeners(vm, listeners)\n  }\n}\n\nlet target: any\n\nfunction add (event, fn) {\n  target.$on(event, fn)\n}\n\nfunction remove (event, fn) {\n  target.$off(event, fn)\n}\n\nfunction createOnceHandler (event, fn) {\n  const _target = target\n  return function onceHandler () {\n    const res = fn.apply(null, arguments)\n    if (res !== null) {\n      _target.$off(event, onceHandler)\n    }\n  }\n}\n\nexport function updateComponentListeners (\n  vm: Component,\n  listeners: Object,\n  oldListeners: ?Object\n) {\n  target = vm\n  updateListeners(listeners, oldListeners || {}, add, remove, createOnceHandler, vm)\n  target = undefined\n}\n\nexport function eventsMixin (Vue: Class<Component>) {\n  const hookRE = /^hook:/\n  Vue.prototype.$on = function (event: string | Array<string>, fn: Function): Component {\n    const vm: Component = this\n    if (Array.isArray(event)) {\n      for (let i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn)\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn)\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true\n      }\n    }\n    return vm\n  }\n\n  Vue.prototype.$once = function (event: string, fn: Function): Component {\n    const vm: Component = this\n    function on () {\n      vm.$off(event, on)\n      fn.apply(vm, arguments)\n    }\n    on.fn = fn\n    vm.$on(event, on)\n    return vm\n  }\n\n  Vue.prototype.$off = function (event?: string | Array<string>, fn?: Function): Component {\n    const vm: Component = this\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null)\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (let i = 0, l = event.length; i < l; i++) {\n        vm.$off(event[i], fn)\n      }\n      return vm\n    }\n    // specific event\n    const cbs = vm._events[event]\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null\n      return vm\n    }\n    // specific handler\n    let cb\n    let i = cbs.length\n    while (i--) {\n      cb = cbs[i]\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1)\n        break\n      }\n    }\n    return vm\n  }\n\n  Vue.prototype.$emit = function (event: string): Component {\n    const vm: Component = this\n    if (process.env.NODE_ENV !== 'production') {\n      const lowerCaseEvent = event.toLowerCase()\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          `Event \"${lowerCaseEvent}\" is emitted in component ` +\n          `${formatComponentName(vm)} but the handler is registered for \"${event}\". ` +\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\n        )\n      }\n    }\n    let cbs = vm._events[event]\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs\n      const args = toArray(arguments, 1)\n      const info = `event handler for \"${event}\"`\n      for (let i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info)\n      }\n    }\n    return vm\n  }\n}\n","/* @flow */\n\nimport config from '../config'\nimport Watcher from '../observer/watcher'\nimport { mark, measure } from '../util/perf'\nimport { createEmptyVNode } from '../vdom/vnode'\nimport { updateComponentListeners } from './events'\nimport { resolveSlots } from './render-helpers/resolve-slots'\nimport { toggleObserving } from '../observer/index'\nimport { pushTarget, popTarget } from '../observer/dep'\n\nimport {\n  warn,\n  noop,\n  remove,\n  emptyObject,\n  validateProp,\n  invokeWithErrorHandling\n} from '../util/index'\n\nexport let activeInstance: any = null\nexport let isUpdatingChildComponent: boolean = false\n\nexport function setActiveInstance(vm: Component) {\n  const prevActiveInstance = activeInstance\n  activeInstance = vm\n  return () => {\n    activeInstance = prevActiveInstance\n  }\n}\n\nexport function initLifecycle (vm: Component) {\n  const options = vm.$options\n\n  // locate first non-abstract parent\n  let parent = options.parent\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent\n    }\n    parent.$children.push(vm)\n  }\n\n  vm.$parent = parent\n  vm.$root = parent ? parent.$root : vm\n\n  vm.$children = []\n  vm.$refs = {}\n\n  vm._watcher = null\n  vm._inactive = null\n  vm._directInactive = false\n  vm._isMounted = false\n  vm._isDestroyed = false\n  vm._isBeingDestroyed = false\n}\n\nexport function lifecycleMixin (Vue: Class<Component>) {\n  Vue.prototype._update = function (vnode: VNode, hydrating?: boolean) {\n    const vm: Component = this\n    const prevEl = vm.$el\n    const prevVnode = vm._vnode\n    const restoreActiveInstance = setActiveInstance(vm)\n    vm._vnode = vnode\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */)\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode)\n    }\n    restoreActiveInstance()\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  }\n\n  Vue.prototype.$forceUpdate = function () {\n    const vm: Component = this\n    if (vm._watcher) {\n      vm._watcher.update()\n    }\n  }\n\n  Vue.prototype.$destroy = function () {\n    const vm: Component = this\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy')\n    vm._isBeingDestroyed = true\n    // remove self from parent\n    const parent = vm.$parent\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm)\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown()\n    }\n    let i = vm._watchers.length\n    while (i--) {\n      vm._watchers[i].teardown()\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--\n    }\n    // call the last hook...\n    vm._isDestroyed = true\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null)\n    // fire destroyed hook\n    callHook(vm, 'destroyed')\n    // turn off all instance listeners.\n    vm.$off()\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null\n    }\n  }\n}\n\nexport function mountComponent (\n  vm: Component,\n  el: ?Element,\n  hydrating?: boolean\n): Component {\n  vm.$el = el\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        )\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        )\n      }\n    }\n  }\n  callHook(vm, 'beforeMount')\n\n  let updateComponent\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = () => {\n      const name = vm._name\n      const id = vm._uid\n      const startTag = `vue-perf-start:${id}`\n      const endTag = `vue-perf-end:${id}`\n\n      mark(startTag)\n      const vnode = vm._render()\n      mark(endTag)\n      measure(`vue ${name} render`, startTag, endTag)\n\n      mark(startTag)\n      vm._update(vnode, hydrating)\n      mark(endTag)\n      measure(`vue ${name} patch`, startTag, endTag)\n    }\n  } else {\n    updateComponent = () => {\n      vm._update(vm._render(), hydrating)\n    }\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate')\n      }\n    }\n  }, true /* isRenderWatcher */)\n  hydrating = false\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true\n    callHook(vm, 'mounted')\n  }\n  return vm\n}\n\nexport function updateChildComponent (\n  vm: Component,\n  propsData: ?Object,\n  listeners: ?Object,\n  parentVnode: MountedComponentVNode,\n  renderChildren: ?Array<VNode>\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  const newScopedSlots = parentVnode.data.scopedSlots\n  const oldScopedSlots = vm.$scopedSlots\n  const hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||\n    (!newScopedSlots && vm.$scopedSlots.$key)\n  )\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  const needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  )\n\n  vm.$options._parentVnode = parentVnode\n  vm.$vnode = parentVnode // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode\n  }\n  vm.$options._renderChildren = renderChildren\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject\n  vm.$listeners = listeners || emptyObject\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false)\n    const props = vm._props\n    const propKeys = vm.$options._propKeys || []\n    for (let i = 0; i < propKeys.length; i++) {\n      const key = propKeys[i]\n      const propOptions: any = vm.$options.props // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm)\n    }\n    toggleObserving(true)\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject\n  const oldListeners = vm.$options._parentListeners\n  vm.$options._parentListeners = listeners\n  updateComponentListeners(vm, listeners, oldListeners)\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context)\n    vm.$forceUpdate()\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) return true\n  }\n  return false\n}\n\nexport function activateChildComponent (vm: Component, direct?: boolean) {\n  if (direct) {\n    vm._directInactive = false\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false\n    for (let i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i])\n    }\n    callHook(vm, 'activated')\n  }\n}\n\nexport function deactivateChildComponent (vm: Component, direct?: boolean) {\n  if (direct) {\n    vm._directInactive = true\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true\n    for (let i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i])\n    }\n    callHook(vm, 'deactivated')\n  }\n}\n\nexport function callHook (vm: Component, hook: string) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget()\n  const handlers = vm.$options[hook]\n  const info = `${hook} hook`\n  if (handlers) {\n    for (let i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info)\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook)\n  }\n  popTarget()\n}\n","/* @flow */\n\nimport type Watcher from './watcher'\nimport config from '../config'\nimport { callHook, activateChildComponent } from '../instance/lifecycle'\n\nimport {\n  warn,\n  nextTick,\n  devtools,\n  inBrowser,\n  isIE\n} from '../util/index'\n\nexport const MAX_UPDATE_COUNT = 100\n\nconst queue: Array<Watcher> = []\nconst activatedChildren: Array<Component> = []\nlet has: { [key: number]: ?true } = {}\nlet circular: { [key: number]: number } = {}\nlet waiting = false\nlet flushing = false\nlet index = 0\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0\n  has = {}\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {}\n  }\n  waiting = flushing = false\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nexport let currentFlushTimestamp = 0\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nlet getNow: () => number = Date.now\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  const performance = window.performance\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = () => performance.now()\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow()\n  flushing = true\n  let watcher, id\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort((a, b) => a.id - b.id)\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index]\n    if (watcher.before) {\n      watcher.before()\n    }\n    id = watcher.id\n    has[id] = null\n    watcher.run()\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? `in watcher with expression \"${watcher.expression}\"`\n              : `in a component render function.`\n          ),\n          watcher.vm\n        )\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  const activatedQueue = activatedChildren.slice()\n  const updatedQueue = queue.slice()\n\n  resetSchedulerState()\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue)\n  callUpdatedHooks(updatedQueue)\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush')\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  let i = queue.length\n  while (i--) {\n    const watcher = queue[i]\n    const vm = watcher.vm\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated')\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nexport function queueActivatedComponent (vm: Component) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false\n  activatedChildren.push(vm)\n}\n\nfunction callActivatedHooks (queue) {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true\n    activateChildComponent(queue[i], true /* true */)\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nexport function queueWatcher (watcher: Watcher) {\n  const id = watcher.id\n  if (has[id] == null) {\n    has[id] = true\n    if (!flushing) {\n      queue.push(watcher)\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      let i = queue.length - 1\n      while (i > index && queue[i].id > watcher.id) {\n        i--\n      }\n      queue.splice(i + 1, 0, watcher)\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue()\n        return\n      }\n      nextTick(flushSchedulerQueue)\n    }\n  }\n}\n","/* @flow */\n\nimport {\n  warn,\n  remove,\n  isObject,\n  parsePath,\n  _Set as Set,\n  handleError,\n  invokeWithErrorHandling,\n  noop\n} from '../util/index'\n\nimport { traverse } from './traverse'\nimport { queueWatcher } from './scheduler'\nimport Dep, { pushTarget, popTarget } from './dep'\n\nimport type { SimpleSet } from '../util/index'\n\nlet uid = 0\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nexport default class Watcher {\n  vm: Component;\n  expression: string;\n  cb: Function;\n  id: number;\n  deep: boolean;\n  user: boolean;\n  lazy: boolean;\n  sync: boolean;\n  dirty: boolean;\n  active: boolean;\n  deps: Array<Dep>;\n  newDeps: Array<Dep>;\n  depIds: SimpleSet;\n  newDepIds: SimpleSet;\n  before: ?Function;\n  getter: Function;\n  value: any;\n\n  constructor (\n    vm: Component,\n    expOrFn: string | Function,\n    cb: Function,\n    options?: ?Object,\n    isRenderWatcher?: boolean\n  ) {\n    this.vm = vm\n    if (isRenderWatcher) {\n      vm._watcher = this\n    }\n    vm._watchers.push(this)\n    // options\n    if (options) {\n      this.deep = !!options.deep\n      this.user = !!options.user\n      this.lazy = !!options.lazy\n      this.sync = !!options.sync\n      this.before = options.before\n    } else {\n      this.deep = this.user = this.lazy = this.sync = false\n    }\n    this.cb = cb\n    this.id = ++uid // uid for batching\n    this.active = true\n    this.dirty = this.lazy // for lazy watchers\n    this.deps = []\n    this.newDeps = []\n    this.depIds = new Set()\n    this.newDepIds = new Set()\n    this.expression = process.env.NODE_ENV !== 'production'\n      ? expOrFn.toString()\n      : ''\n    // parse expression for getter\n    if (typeof expOrFn === 'function') {\n      this.getter = expOrFn\n    } else {\n      this.getter = parsePath(expOrFn)\n      if (!this.getter) {\n        this.getter = noop\n        process.env.NODE_ENV !== 'production' && warn(\n          `Failed watching path: \"${expOrFn}\" ` +\n          'Watcher only accepts simple dot-delimited paths. ' +\n          'For full control, use a function instead.',\n          vm\n        )\n      }\n    }\n    this.value = this.lazy\n      ? undefined\n      : this.get()\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n  get () {\n    pushTarget(this)\n    let value\n    const vm = this.vm\n    try {\n      value = this.getter.call(vm, vm)\n    } catch (e) {\n      if (this.user) {\n        handleError(e, vm, `getter for watcher \"${this.expression}\"`)\n      } else {\n        throw e\n      }\n    } finally {\n      // \"touch\" every property so they are all tracked as\n      // dependencies for deep watching\n      if (this.deep) {\n        traverse(value)\n      }\n      popTarget()\n      this.cleanupDeps()\n    }\n    return value\n  }\n\n  /**\n   * Add a dependency to this directive.\n   */\n  addDep (dep: Dep) {\n    const id = dep.id\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id)\n      this.newDeps.push(dep)\n      if (!this.depIds.has(id)) {\n        dep.addSub(this)\n      }\n    }\n  }\n\n  /**\n   * Clean up for dependency collection.\n   */\n  cleanupDeps () {\n    let i = this.deps.length\n    while (i--) {\n      const dep = this.deps[i]\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this)\n      }\n    }\n    let tmp = this.depIds\n    this.depIds = this.newDepIds\n    this.newDepIds = tmp\n    this.newDepIds.clear()\n    tmp = this.deps\n    this.deps = this.newDeps\n    this.newDeps = tmp\n    this.newDeps.length = 0\n  }\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   */\n  update () {\n    /* istanbul ignore else */\n    if (this.lazy) {\n      this.dirty = true\n    } else if (this.sync) {\n      this.run()\n    } else {\n      queueWatcher(this)\n    }\n  }\n\n  /**\n   * Scheduler job interface.\n   * Will be called by the scheduler.\n   */\n  run () {\n    if (this.active) {\n      const value = this.get()\n      if (\n        value !== this.value ||\n        // Deep watchers and watchers on Object/Arrays should fire even\n        // when the value is the same, because the value may\n        // have mutated.\n        isObject(value) ||\n        this.deep\n      ) {\n        // set new value\n        const oldValue = this.value\n        this.value = value\n        if (this.user) {\n          const info = `callback for watcher \"${this.expression}\"`\n          invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info)\n        } else {\n          this.cb.call(this.vm, value, oldValue)\n        }\n      }\n    }\n  }\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n  evaluate () {\n    this.value = this.get()\n    this.dirty = false\n  }\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n  depend () {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend()\n    }\n  }\n\n  /**\n   * Remove self from all dependencies' subscriber list.\n   */\n  teardown () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed.\n      if (!this.vm._isBeingDestroyed) {\n        remove(this.vm._watchers, this)\n      }\n      let i = this.deps.length\n      while (i--) {\n        this.deps[i].removeSub(this)\n      }\n      this.active = false\n    }\n  }\n}\n","/* @flow */\n\nimport config from '../config'\nimport Watcher from '../observer/watcher'\nimport Dep, { pushTarget, popTarget } from '../observer/dep'\nimport { isUpdatingChildComponent } from './lifecycle'\n\nimport {\n  set,\n  del,\n  observe,\n  defineReactive,\n  toggleObserving\n} from '../observer/index'\n\nimport {\n  warn,\n  bind,\n  noop,\n  hasOwn,\n  hyphenate,\n  isReserved,\n  handleError,\n  nativeWatch,\n  validateProp,\n  isPlainObject,\n  isServerRendering,\n  isReservedAttribute,\n  invokeWithErrorHandling\n} from '../util/index'\n\nconst sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n}\n\nexport function proxy (target: Object, sourceKey: string, key: string) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  }\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition)\n}\n\nexport function initState (vm: Component) {\n  vm._watchers = []\n  const opts = vm.$options\n  if (opts.props) initProps(vm, opts.props)\n  if (opts.methods) initMethods(vm, opts.methods)\n  if (opts.data) {\n    initData(vm)\n  } else {\n    observe(vm._data = {}, true /* asRootData */)\n  }\n  if (opts.computed) initComputed(vm, opts.computed)\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch)\n  }\n}\n\nfunction initProps (vm: Component, propsOptions: Object) {\n  const propsData = vm.$options.propsData || {}\n  const props = vm._props = {}\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  const keys = vm.$options._propKeys = []\n  const isRoot = !vm.$parent\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false)\n  }\n  for (const key in propsOptions) {\n    keys.push(key)\n    const value = validateProp(key, propsOptions, propsData, vm)\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      const hyphenatedKey = hyphenate(key)\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          `\"${hyphenatedKey}\" is a reserved attribute and cannot be used as component prop.`,\n          vm\n        )\n      }\n      defineReactive(props, key, value, () => {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            `Avoid mutating a prop directly since the value will be ` +\n            `overwritten whenever the parent component re-renders. ` +\n            `Instead, use a data or computed property based on the prop's ` +\n            `value. Prop being mutated: \"${key}\"`,\n            vm\n          )\n        }\n      })\n    } else {\n      defineReactive(props, key, value)\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, `_props`, key)\n    }\n  }\n  toggleObserving(true)\n}\n\nfunction initData (vm: Component) {\n  let data = vm.$options.data\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {}\n  if (!isPlainObject(data)) {\n    data = {}\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    )\n  }\n  // proxy data on instance\n  const keys = Object.keys(data)\n  const props = vm.$options.props\n  const methods = vm.$options.methods\n  let i = keys.length\n  while (i--) {\n    const key = keys[i]\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          `Method \"${key}\" has already been defined as a data property.`,\n          vm\n        )\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        `The data property \"${key}\" is already declared as a prop. ` +\n        `Use prop default value instead.`,\n        vm\n      )\n    } else if (!isReserved(key)) {\n      proxy(vm, `_data`, key)\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */)\n}\n\nexport function getData (data: Function, vm: Component): any {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget()\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, `data()`)\n    return {}\n  } finally {\n    popTarget()\n  }\n}\n\nconst computedWatcherOptions = { lazy: true }\n\nfunction initComputed (vm: Component, computed: Object) {\n  // $flow-disable-line\n  const watchers = vm._computedWatchers = Object.create(null)\n  // computed properties are just getters during SSR\n  const isSSR = isServerRendering()\n\n  for (const key in computed) {\n    const userDef = computed[key]\n    const getter = typeof userDef === 'function' ? userDef : userDef.get\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        `Getter is missing for computed property \"${key}\".`,\n        vm\n      )\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      )\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef)\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn(`The computed property \"${key}\" is already defined in data.`, vm)\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn(`The computed property \"${key}\" is already defined as a prop.`, vm)\n      } else if (vm.$options.methods && key in vm.$options.methods) {\n        warn(`The computed property \"${key}\" is already defined as a method.`, vm)\n      }\n    }\n  }\n}\n\nexport function defineComputed (\n  target: any,\n  key: string,\n  userDef: Object | Function\n) {\n  const shouldCache = !isServerRendering()\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef)\n    sharedPropertyDefinition.set = noop\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop\n    sharedPropertyDefinition.set = userDef.set || noop\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        `Computed property \"${key}\" was assigned to but it has no setter.`,\n        this\n      )\n    }\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition)\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    const watcher = this._computedWatchers && this._computedWatchers[key]\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate()\n      }\n      if (Dep.target) {\n        watcher.depend()\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm: Component, methods: Object) {\n  const props = vm.$options.props\n  for (const key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          `Method \"${key}\" has type \"${typeof methods[key]}\" in the component definition. ` +\n          `Did you reference the function correctly?`,\n          vm\n        )\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          `Method \"${key}\" has already been defined as a prop.`,\n          vm\n        )\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          `Method \"${key}\" conflicts with an existing Vue instance method. ` +\n          `Avoid defining component methods that start with _ or $.`\n        )\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm)\n  }\n}\n\nfunction initWatch (vm: Component, watch: Object) {\n  for (const key in watch) {\n    const handler = watch[key]\n    if (Array.isArray(handler)) {\n      for (let i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i])\n      }\n    } else {\n      createWatcher(vm, key, handler)\n    }\n  }\n}\n\nfunction createWatcher (\n  vm: Component,\n  expOrFn: string | Function,\n  handler: any,\n  options?: Object\n) {\n  if (isPlainObject(handler)) {\n    options = handler\n    handler = handler.handler\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler]\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nexport function stateMixin (Vue: Class<Component>) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  const dataDef = {}\n  dataDef.get = function () { return this._data }\n  const propsDef = {}\n  propsDef.get = function () { return this._props }\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      )\n    }\n    propsDef.set = function () {\n      warn(`$props is readonly.`, this)\n    }\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef)\n  Object.defineProperty(Vue.prototype, '$props', propsDef)\n\n  Vue.prototype.$set = set\n  Vue.prototype.$delete = del\n\n  Vue.prototype.$watch = function (\n    expOrFn: string | Function,\n    cb: any,\n    options?: Object\n  ): Function {\n    const vm: Component = this\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {}\n    options.user = true\n    const watcher = new Watcher(vm, expOrFn, cb, options)\n    if (options.immediate) {\n      const info = `callback for immediate watcher \"${watcher.expression}\"`\n      pushTarget()\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info)\n      popTarget()\n    }\n    return function unwatchFn () {\n      watcher.teardown()\n    }\n  }\n}\n","/* @flow */\n\nimport config from '../config'\nimport { initProxy } from './proxy'\nimport { initState } from './state'\nimport { initRender } from './render'\nimport { initEvents } from './events'\nimport { mark, measure } from '../util/perf'\nimport { initLifecycle, callHook } from './lifecycle'\nimport { initProvide, initInjections } from './inject'\nimport { extend, mergeOptions, formatComponentName } from '../util/index'\n\nlet uid = 0\n\nexport function initMixin (Vue: Class<Component>) {\n  Vue.prototype._init = function (options?: Object) {\n    const vm: Component = this\n    // a uid\n    vm._uid = uid++\n\n    let startTag, endTag\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = `vue-perf-start:${vm._uid}`\n      endTag = `vue-perf-end:${vm._uid}`\n      mark(startTag)\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options)\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      )\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm)\n    } else {\n      vm._renderProxy = vm\n    }\n    // expose real self\n    vm._self = vm\n    initLifecycle(vm)\n    initEvents(vm)\n    initRender(vm)\n    callHook(vm, 'beforeCreate')\n    initInjections(vm) // resolve injections before data/props\n    initState(vm)\n    initProvide(vm) // resolve provide after data/props\n    callHook(vm, 'created')\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false)\n      mark(endTag)\n      measure(`vue ${vm._name} init`, startTag, endTag)\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n}\n\nexport function initInternalComponent (vm: Component, options: InternalComponentOptions) {\n  const opts = vm.$options = Object.create(vm.constructor.options)\n  // doing this because it's faster than dynamic enumeration.\n  const parentVnode = options._parentVnode\n  opts.parent = options.parent\n  opts._parentVnode = parentVnode\n\n  const vnodeComponentOptions = parentVnode.componentOptions\n  opts.propsData = vnodeComponentOptions.propsData\n  opts._parentListeners = vnodeComponentOptions.listeners\n  opts._renderChildren = vnodeComponentOptions.children\n  opts._componentTag = vnodeComponentOptions.tag\n\n  if (options.render) {\n    opts.render = options.render\n    opts.staticRenderFns = options.staticRenderFns\n  }\n}\n\nexport function resolveConstructorOptions (Ctor: Class<Component>) {\n  let options = Ctor.options\n  if (Ctor.super) {\n    const superOptions = resolveConstructorOptions(Ctor.super)\n    const cachedSuperOptions = Ctor.superOptions\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions\n      // check if there are any late-modified/attached options (#4976)\n      const modifiedOptions = resolveModifiedOptions(Ctor)\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions)\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions)\n      if (options.name) {\n        options.components[options.name] = Ctor\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor: Class<Component>): ?Object {\n  let modified\n  const latest = Ctor.options\n  const sealed = Ctor.sealedOptions\n  for (const key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) modified = {}\n      modified[key] = latest[key]\n    }\n  }\n  return modified\n}\n","import { initMixin } from './init'\nimport { stateMixin } from './state'\nimport { renderMixin } from './render'\nimport { eventsMixin } from './events'\nimport { lifecycleMixin } from './lifecycle'\nimport { warn } from '../util/index'\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword')\n  }\n  this._init(options)\n}\n\ninitMixin(Vue)\nstateMixin(Vue)\neventsMixin(Vue)\nlifecycleMixin(Vue)\nrenderMixin(Vue)\n\nexport default Vue\n","/* @flow */\n\nimport { toArray } from '../util/index'\n\nexport function initUse (Vue: GlobalAPI) {\n  Vue.use = function (plugin: Function | Object) {\n    const installedPlugins = (this._installedPlugins || (this._installedPlugins = []))\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    const args = toArray(arguments, 1)\n    args.unshift(this)\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args)\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args)\n    }\n    installedPlugins.push(plugin)\n    return this\n  }\n}\n","/* @flow */\n\nimport { mergeOptions } from '../util/index'\n\nexport function initMixin (Vue: GlobalAPI) {\n  Vue.mixin = function (mixin: Object) {\n    this.options = mergeOptions(this.options, mixin)\n    return this\n  }\n}\n","/* @flow */\n\nimport { ASSET_TYPES } from 'shared/constants'\nimport { defineComputed, proxy } from '../instance/state'\nimport { extend, mergeOptions, validateComponentName } from '../util/index'\n\nexport function initExtend (Vue: GlobalAPI) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0\n  let cid = 1\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions: Object): Function {\n    extendOptions = extendOptions || {}\n    const Super = this\n    const SuperId = Super.cid\n    const cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {})\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    const name = extendOptions.name || Super.options.name\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name)\n    }\n\n    const Sub = function VueComponent (options) {\n      this._init(options)\n    }\n    Sub.prototype = Object.create(Super.prototype)\n    Sub.prototype.constructor = Sub\n    Sub.cid = cid++\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    )\n    Sub['super'] = Super\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps(Sub)\n    }\n    if (Sub.options.computed) {\n      initComputed(Sub)\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend\n    Sub.mixin = Super.mixin\n    Sub.use = Super.use\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type]\n    })\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options\n    Sub.extendOptions = extendOptions\n    Sub.sealedOptions = extend({}, Sub.options)\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub\n    return Sub\n  }\n}\n\nfunction initProps (Comp) {\n  const props = Comp.options.props\n  for (const key in props) {\n    proxy(Comp.prototype, `_props`, key)\n  }\n}\n\nfunction initComputed (Comp) {\n  const computed = Comp.options.computed\n  for (const key in computed) {\n    defineComputed(Comp.prototype, key, computed[key])\n  }\n}\n","/* @flow */\n\nimport { ASSET_TYPES } from 'shared/constants'\nimport { isPlainObject, validateComponentName } from '../util/index'\n\nexport function initAssetRegisters (Vue: GlobalAPI) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(type => {\n    Vue[type] = function (\n      id: string,\n      definition: Function | Object\n    ): Function | Object | void {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id)\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id\n          definition = this.options._base.extend(definition)\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition }\n        }\n        this.options[type + 's'][id] = definition\n        return definition\n      }\n    }\n  })\n}\n","/* @flow */\n\nimport { isRegExp, remove } from 'shared/util'\nimport { getFirstComponentChild } from 'core/vdom/helpers/index'\n\ntype CacheEntry = {\n  name: ?string;\n  tag: ?string;\n  componentInstance: Component;\n};\n\ntype CacheEntryMap = { [key: string]: ?CacheEntry };\n\nfunction getComponentName (opts: ?VNodeComponentOptions): ?string {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern: string | RegExp | Array<string>, name: string): boolean {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance: any, filter: Function) {\n  const { cache, keys, _vnode } = keepAliveInstance\n  for (const key in cache) {\n    const entry: ?CacheEntry = cache[key]\n    if (entry) {\n      const name: ?string = entry.name\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode)\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache: CacheEntryMap,\n  key: string,\n  keys: Array<string>,\n  current?: VNode\n) {\n  const entry: ?CacheEntry = cache[key]\n  if (entry && (!current || entry.tag !== current.tag)) {\n    entry.componentInstance.$destroy()\n  }\n  cache[key] = null\n  remove(keys, key)\n}\n\nconst patternTypes: Array<Function> = [String, RegExp, Array]\n\nexport default {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  methods: {\n    cacheVNode() {\n      const { cache, keys, vnodeToCache, keyToCache } = this\n      if (vnodeToCache) {\n        const { tag, componentInstance, componentOptions } = vnodeToCache\n        cache[keyToCache] = {\n          name: getComponentName(componentOptions),\n          tag,\n          componentInstance,\n        }\n        keys.push(keyToCache)\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode)\n        }\n        this.vnodeToCache = null\n      }\n    }\n  },\n\n  created () {\n    this.cache = Object.create(null)\n    this.keys = []\n  },\n\n  destroyed () {\n    for (const key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys)\n    }\n  },\n\n  mounted () {\n    this.cacheVNode()\n    this.$watch('include', val => {\n      pruneCache(this, name => matches(val, name))\n    })\n    this.$watch('exclude', val => {\n      pruneCache(this, name => !matches(val, name))\n    })\n  },\n\n  updated () {\n    this.cacheVNode()\n  },\n\n  render () {\n    const slot = this.$slots.default\n    const vnode: VNode = getFirstComponentChild(slot)\n    const componentOptions: ?VNodeComponentOptions = vnode && vnode.componentOptions\n    if (componentOptions) {\n      // check pattern\n      const name: ?string = getComponentName(componentOptions)\n      const { include, exclude } = this\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      const { cache, keys } = this\n      const key: ?string = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? `::${componentOptions.tag}` : '')\n        : vnode.key\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance\n        // make current key freshest\n        remove(keys, key)\n        keys.push(key)\n      } else {\n        // delay setting the cache until update\n        this.vnodeToCache = vnode\n        this.keyToCache = key\n      }\n\n      vnode.data.keepAlive = true\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n","import KeepAlive from './keep-alive'\n\nexport default {\n  KeepAlive\n}\n","/* @flow */\n\nimport config from '../config'\nimport { initUse } from './use'\nimport { initMixin } from './mixin'\nimport { initExtend } from './extend'\nimport { initAssetRegisters } from './assets'\nimport { set, del } from '../observer/index'\nimport { ASSET_TYPES } from 'shared/constants'\nimport builtInComponents from '../components/index'\nimport { observe } from 'core/observer/index'\n\nimport {\n  warn,\n  extend,\n  nextTick,\n  mergeOptions,\n  defineReactive\n} from '../util/index'\n\nexport function initGlobalAPI (Vue: GlobalAPI) {\n  // config\n  const configDef = {}\n  configDef.get = () => config\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = () => {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      )\n    }\n  }\n  Object.defineProperty(Vue, 'config', configDef)\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn,\n    extend,\n    mergeOptions,\n    defineReactive\n  }\n\n  Vue.set = set\n  Vue.delete = del\n  Vue.nextTick = nextTick\n\n  // 2.6 explicit observable API\n  Vue.observable = <T>(obj: T): T => {\n    observe(obj)\n    return obj\n  }\n\n  Vue.options = Object.create(null)\n  ASSET_TYPES.forEach(type => {\n    Vue.options[type + 's'] = Object.create(null)\n  })\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue\n\n  extend(Vue.options.components, builtInComponents)\n\n  initUse(Vue)\n  initMixin(Vue)\n  initExtend(Vue)\n  initAssetRegisters(Vue)\n}\n","import Vue from './instance/index'\nimport { initGlobalAPI } from './global-api/index'\nimport { isServerRendering } from 'core/util/env'\nimport { FunctionalRenderContext } from 'core/vdom/create-functional-component'\n\ninitGlobalAPI(Vue)\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n})\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n})\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n})\n\nVue.version = '__VERSION__'\n\nexport default Vue\n","/* @flow */\n\nimport { makeMap } from 'shared/util'\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nexport const isReservedAttr = makeMap('style,class')\n\n// attributes that should be using props for binding\nconst acceptValue = makeMap('input,textarea,option,select,progress')\nexport const mustUseProp = (tag: string, type: ?string, attr: string): boolean => {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n}\n\nexport const isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck')\n\nconst isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only')\n\nexport const convertEnumeratedValue = (key: string, value: any) => {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n}\n\nexport const isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,' +\n  'truespeed,typemustmatch,visible'\n)\n\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\n\nexport const isXlink = (name: string): boolean => {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n}\n\nexport const getXlinkProp = (name: string): string => {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n}\n\nexport const isFalsyAttrValue = (val: any): boolean => {\n  return val == null || val === false\n}\n","/* @flow */\n\nimport { isDef, isObject } from 'shared/util'\n\nexport function genClassForVnode (vnode: VNodeWithData): string {\n  let data = vnode.data\n  let parentNode = vnode\n  let childNode = vnode\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data)\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data)\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child: VNodeData, parent: VNodeData): {\n  staticClass: string,\n  class: any\n} {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nexport function renderClass (\n  staticClass: ?string,\n  dynamicClass: any\n): string {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nexport function concat (a: ?string, b: ?string): string {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nexport function stringifyClass (value: any): string {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value: Array<any>): string {\n  let res = ''\n  let stringified\n  for (let i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) res += ' '\n      res += stringified\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value: Object): string {\n  let res = ''\n  for (const key in value) {\n    if (value[key]) {\n      if (res) res += ' '\n      res += key\n    }\n  }\n  return res\n}\n","/* @flow */\n\nimport { inBrowser } from 'core/util/env'\nimport { makeMap } from 'shared/util'\n\nexport const namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n}\n\nexport const isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n)\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nexport const isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n)\n\nexport const isPreTag = (tag: ?string): boolean => tag === 'pre'\n\nexport const isReservedTag = (tag: string): ?boolean => {\n  return isHTMLTag(tag) || isSVG(tag)\n}\n\nexport function getTagNamespace (tag: string): ?string {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nconst unknownElementCache = Object.create(null)\nexport function isUnknownElement (tag: string): boolean {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase()\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  const el = document.createElement(tag)\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nexport const isTextInputType = makeMap('text,number,password,search,email,tel,url')\n","/* @flow */\n\nimport { warn } from 'core/util/index'\n\nexport * from './attrs'\nexport * from './class'\nexport * from './element'\n\n/**\n * Query an element selector if it's not an element already.\n */\nexport function query (el: string | Element): Element {\n  if (typeof el === 'string') {\n    const selected = document.querySelector(el)\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      )\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n","/* @flow */\n\nimport { namespaceMap } from 'web/util/index'\n\nexport function createElement (tagName: string, vnode: VNode): Element {\n  const elm = document.createElement(tagName)\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple')\n  }\n  return elm\n}\n\nexport function createElementNS (namespace: string, tagName: string): Element {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nexport function createTextNode (text: string): Text {\n  return document.createTextNode(text)\n}\n\nexport function createComment (text: string): Comment {\n  return document.createComment(text)\n}\n\nexport function insertBefore (parentNode: Node, newNode: Node, referenceNode: Node) {\n  parentNode.insertBefore(newNode, referenceNode)\n}\n\nexport function removeChild (node: Node, child: Node) {\n  node.removeChild(child)\n}\n\nexport function appendChild (node: Node, child: Node) {\n  node.appendChild(child)\n}\n\nexport function parentNode (node: Node): ?Node {\n  return node.parentNode\n}\n\nexport function nextSibling (node: Node): ?Node {\n  return node.nextSibling\n}\n\nexport function tagName (node: Element): string {\n  return node.tagName\n}\n\nexport function setTextContent (node: Node, text: string) {\n  node.textContent = text\n}\n\nexport function setStyleScope (node: Element, scopeId: string) {\n  node.setAttribute(scopeId, '')\n}\n","/* @flow */\n\nimport { remove, isDef } from 'shared/util'\n\nexport default {\n  create (_: any, vnode: VNodeWithData) {\n    registerRef(vnode)\n  },\n  update (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true)\n      registerRef(vnode)\n    }\n  },\n  destroy (vnode: VNodeWithData) {\n    registerRef(vnode, true)\n  }\n}\n\nexport function registerRef (vnode: VNodeWithData, isRemoval: ?boolean) {\n  const key = vnode.data.ref\n  if (!isDef(key)) return\n\n  const vm = vnode.context\n  const ref = vnode.componentInstance || vnode.elm\n  const refs = vm.$refs\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref)\n    } else if (refs[key] === ref) {\n      refs[key] = undefined\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref]\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref)\n      }\n    } else {\n      refs[key] = ref\n    }\n  }\n}\n","/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nimport VNode, { cloneVNode } from './vnode'\nimport config from '../config'\nimport { SSR_ATTR } from 'shared/constants'\nimport { registerRef } from './modules/ref'\nimport { traverse } from '../observer/traverse'\nimport { activeInstance } from '../instance/lifecycle'\nimport { isTextInputType } from 'web/util/element'\n\nimport {\n  warn,\n  isDef,\n  isUndef,\n  isTrue,\n  makeMap,\n  isRegExp,\n  isPrimitive\n} from '../util/index'\n\nexport const emptyNode = new VNode('', {}, [])\n\nconst hooks = ['create', 'activate', 'update', 'remove', 'destroy']\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.asyncFactory === b.asyncFactory && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') return true\n  let i\n  const typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type\n  const typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  let i, key\n  const map = {}\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key\n    if (isDef(key)) map[key] = i\n  }\n  return map\n}\n\nexport function createPatchFunction (backend) {\n  let i, j\n  const cbs = {}\n\n  const { modules, nodeOps } = backend\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = []\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]])\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm)\n      }\n    }\n    remove.listeners = listeners\n    return remove\n  }\n\n  function removeNode (el) {\n    const parent = nodeOps.parentNode(el)\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el)\n    }\n  }\n\n  function isUnknownElement (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(ignore => {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  let creatingElmInVPre = 0\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode)\n    }\n\n    vnode.isRootInsert = !nested // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    const data = vnode.data\n    const children = vnode.children\n    const tag = vnode.tag\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++\n        }\n        if (isUnknownElement(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          )\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode)\n      setScope(vnode)\n\n      /* istanbul ignore if */\n      if (__WEEX__) {\n        // in Weex, the default insertion order is parent-first.\n        // List items can be optimized to use children-first insertion\n        // with append=\"tree\".\n        const appendAsTree = isDef(data) && isTrue(data.appendAsTree)\n        if (!appendAsTree) {\n          if (isDef(data)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue)\n          }\n          insert(parentElm, vnode.elm, refElm)\n        }\n        createChildren(vnode, children, insertedVnodeQueue)\n        if (appendAsTree) {\n          if (isDef(data)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue)\n          }\n          insert(parentElm, vnode.elm, refElm)\n        }\n      } else {\n        createChildren(vnode, children, insertedVnodeQueue)\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue)\n        }\n        insert(parentElm, vnode.elm, refElm)\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text)\n      insert(parentElm, vnode.elm, refElm)\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text)\n      insert(parentElm, vnode.elm, refElm)\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    let i = vnode.data\n    if (isDef(i)) {\n      const isReactivated = isDef(vnode.componentInstance) && i.keepAlive\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */)\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue)\n        insert(parentElm, vnode.elm, refElm)\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm)\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert)\n      vnode.data.pendingInsert = null\n    }\n    vnode.elm = vnode.componentInstance.$el\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue)\n      setScope(vnode)\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode)\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode)\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    let i\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    let innerNode = vnode\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode)\n        }\n        insertedVnodeQueue.push(innerNode)\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm)\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (nodeOps.parentNode(ref) === parent) {\n          nodeOps.insertBefore(parent, elm, ref)\n        }\n      } else {\n        nodeOps.appendChild(parent, elm)\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children)\n      }\n      for (let i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i)\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)))\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (let i = 0; i < cbs.create.length; ++i) {\n      cbs.create[i](emptyNode, vnode)\n    }\n    i = vnode.data.hook // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) i.create(emptyNode, vnode)\n      if (isDef(i.insert)) insertedVnodeQueue.push(vnode)\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    let i\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i)\n    } else {\n      let ancestor = vnode\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i)\n        }\n        ancestor = ancestor.parent\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i)\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx)\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    let i, j\n    const data = vnode.data\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode)\n      for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode)\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j])\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vnodes[startIdx]\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch)\n          invokeDestroyHook(ch)\n        } else { // Text node\n          removeNode(ch.elm)\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      let i\n      const listeners = cbs.remove.length + 1\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners)\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm)\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm)\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm)\n      } else {\n        rm()\n      }\n    } else {\n      removeNode(vnode.elm)\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    let oldStartIdx = 0\n    let newStartIdx = 0\n    let oldEndIdx = oldCh.length - 1\n    let oldStartVnode = oldCh[0]\n    let oldEndVnode = oldCh[oldEndIdx]\n    let newEndIdx = newCh.length - 1\n    let newStartVnode = newCh[0]\n    let newEndVnode = newCh[newEndIdx]\n    let oldKeyToIdx, idxInOld, vnodeToMove, refElm\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    const canMove = !removeOnly\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh)\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx]\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n        oldStartVnode = oldCh[++oldStartIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx)\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n        oldStartVnode = oldCh[++oldStartIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else {\n        if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx)\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx)\n        } else {\n          vnodeToMove = oldCh[idxInOld]\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n            oldCh[idxInOld] = undefined\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm)\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx)\n          }\n        }\n        newStartVnode = newCh[++newStartIdx]\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx)\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    const seenKeys = {}\n    for (let i = 0; i < children.length; i++) {\n      const vnode = children[i]\n      const key = vnode.key\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            `Duplicate keys detected: '${key}'. This may cause an update error.`,\n            vnode.context\n          )\n        } else {\n          seenKeys[key] = true\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (let i = start; i < end; i++) {\n      const c = oldCh[i]\n      if (isDef(c) && sameVnode(node, c)) return i\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode)\n    }\n\n    const elm = vnode.elm = oldVnode.elm\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue)\n      } else {\n        vnode.isAsyncPlaceholder = true\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance\n      return\n    }\n\n    let i\n    const data = vnode.data\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode)\n    }\n\n    const oldCh = oldVnode.children\n    const ch = vnode.children\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode)\n      if (isDef(i = data.hook) && isDef(i = i.update)) i(oldVnode, vnode)\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly)\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch)\n        }\n        if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '')\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue)\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1)\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '')\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text)\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) i(oldVnode, vnode)\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue\n    } else {\n      for (let i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i])\n      }\n    }\n  }\n\n  let hydrationBailed = false\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  const isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key')\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    let i\n    const { tag, data, children } = vnode\n    inVPre = inVPre || (data && data.pre)\n    vnode.elm = elm\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode, true /* hydrating */)\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue)\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue)\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true\n                console.warn('Parent: ', elm)\n                console.warn('server innerHTML: ', i)\n                console.warn('client innerHTML: ', elm.innerHTML)\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            let childrenMatch = true\n            let childNode = elm.firstChild\n            for (let i = 0; i < children.length; i++) {\n              if (!childNode || !hydrate(childNode, children[i], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false\n                break\n              }\n              childNode = childNode.nextSibling\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true\n                console.warn('Parent: ', elm)\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children)\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        let fullInvoke = false\n        for (const key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true\n            invokeCreateHooks(vnode, insertedVnodeQueue)\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class'])\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) invokeDestroyHook(oldVnode)\n      return\n    }\n\n    let isInitialPatch = false\n    const insertedVnodeQueue = []\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true\n      createElm(vnode, insertedVnodeQueue)\n    } else {\n      const isRealElement = isDef(oldVnode.nodeType)\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly)\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR)\n            hydrating = true\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true)\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              )\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode)\n        }\n\n        // replacing existing element\n        const oldElm = oldVnode.elm\n        const parentElm = nodeOps.parentNode(oldElm)\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        )\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          let ancestor = vnode.parent\n          const patchable = isPatchable(vnode)\n          while (ancestor) {\n            for (let i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor)\n            }\n            ancestor.elm = vnode.elm\n            if (patchable) {\n              for (let i = 0; i < cbs.create.length; ++i) {\n                cbs.create[i](emptyNode, ancestor)\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              const insert = ancestor.data.hook.insert\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (let i = 1; i < insert.fns.length; i++) {\n                  insert.fns[i]()\n                }\n              }\n            } else {\n              registerRef(ancestor)\n            }\n            ancestor = ancestor.parent\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0)\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode)\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)\n    return vnode.elm\n  }\n}\n","/* @flow */\n\nimport { emptyNode } from 'core/vdom/patch'\nimport { resolveAsset, handleError } from 'core/util/index'\nimport { mergeVNodeHook } from 'core/vdom/helpers/index'\n\nexport default {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode: VNodeWithData) {\n    updateDirectives(vnode, emptyNode)\n  }\n}\n\nfunction updateDirectives (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode)\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  const isCreate = oldVnode === emptyNode\n  const isDestroy = vnode === emptyNode\n  const oldDirs = normalizeDirectives(oldVnode.data.directives, oldVnode.context)\n  const newDirs = normalizeDirectives(vnode.data.directives, vnode.context)\n\n  const dirsWithInsert = []\n  const dirsWithPostpatch = []\n\n  let key, oldDir, dir\n  for (key in newDirs) {\n    oldDir = oldDirs[key]\n    dir = newDirs[key]\n    if (!oldDir) {\n      // new directive, bind\n      callHook(dir, 'bind', vnode, oldVnode)\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir)\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value\n      dir.oldArg = oldDir.arg\n      callHook(dir, 'update', vnode, oldVnode)\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir)\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    const callInsert = () => {\n      for (let i = 0; i < dirsWithInsert.length; i++) {\n        callHook(dirsWithInsert[i], 'inserted', vnode, oldVnode)\n      }\n    }\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert)\n    } else {\n      callInsert()\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', () => {\n      for (let i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode)\n      }\n    })\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy)\n      }\n    }\n  }\n}\n\nconst emptyModifiers = Object.create(null)\n\nfunction normalizeDirectives (\n  dirs: ?Array<VNodeDirective>,\n  vm: Component\n): { [key: string]: VNodeDirective } {\n  const res = Object.create(null)\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  let i, dir\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i]\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers\n    }\n    res[getRawDirName(dir)] = dir\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true)\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir: VNodeDirective): string {\n  return dir.rawName || `${dir.name}.${Object.keys(dir.modifiers || {}).join('.')}`\n}\n\nfunction callHook (dir, hook, vnode, oldVnode, isDestroy) {\n  const fn = dir.def && dir.def[hook]\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy)\n    } catch (e) {\n      handleError(e, vnode.context, `directive ${dir.name} ${hook} hook`)\n    }\n  }\n}\n","import directives from './directives'\nimport ref from './ref'\n\nexport default [\n  ref,\n  directives\n]\n","/* @flow */\n\nimport { isIE, isIE9, isEdge } from 'core/util/env'\n\nimport {\n  extend,\n  isDef,\n  isUndef\n} from 'shared/util'\n\nimport {\n  isXlink,\n  xlinkNS,\n  getXlinkProp,\n  isBooleanAttr,\n  isEnumeratedAttr,\n  isFalsyAttrValue,\n  convertEnumeratedValue\n} from 'web/util/index'\n\nfunction updateAttrs (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n  const opts = vnode.componentOptions\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  let key, cur, old\n  const elm = vnode.elm\n  const oldAttrs = oldVnode.data.attrs || {}\n  let attrs: any = vnode.data.attrs || {}\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs)\n  }\n\n  for (key in attrs) {\n    cur = attrs[key]\n    old = oldAttrs[key]\n    if (old !== cur) {\n      setAttr(elm, key, cur, vnode.data.pre)\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value)\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key))\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key)\n      }\n    }\n  }\n}\n\nfunction setAttr (el: Element, key: string, value: any, isInPre: any) {\n  if (isInPre || el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value)\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key)\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key\n      el.setAttribute(key, value)\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value))\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key))\n    } else {\n      el.setAttributeNS(xlinkNS, key, value)\n    }\n  } else {\n    baseSetAttr(el, key, value)\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key)\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      const blocker = e => {\n        e.stopImmediatePropagation()\n        el.removeEventListener('input', blocker)\n      }\n      el.addEventListener('input', blocker)\n      // $flow-disable-line\n      el.__ieph = true /* IE placeholder patched */\n    }\n    el.setAttribute(key, value)\n  }\n}\n\nexport default {\n  create: updateAttrs,\n  update: updateAttrs\n}\n","/* @flow */\n\nimport {\n  isDef,\n  isUndef\n} from 'shared/util'\n\nimport {\n  concat,\n  stringifyClass,\n  genClassForVnode\n} from 'web/util/index'\n\nfunction updateClass (oldVnode: any, vnode: any) {\n  const el = vnode.elm\n  const data: VNodeData = vnode.data\n  const oldData: VNodeData = oldVnode.data\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  let cls = genClassForVnode(vnode)\n\n  // handle transition classes\n  const transitionClass = el._transitionClasses\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass))\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls)\n    el._prevClass = cls\n  }\n}\n\nexport default {\n  create: updateClass,\n  update: updateClass\n}\n","/* @flow */\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/\n\nexport function parseFilters (exp: string): string {\n  let inSingle = false\n  let inDouble = false\n  let inTemplateString = false\n  let inRegex = false\n  let curly = 0\n  let square = 0\n  let paren = 0\n  let lastFilterIndex = 0\n  let c, prev, i, expression, filters\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c\n    c = exp.charCodeAt(i)\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) inSingle = false\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) inDouble = false\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) inTemplateString = false\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) inRegex = false\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1\n        expression = exp.slice(0, i).trim()\n      } else {\n        pushFilter()\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        let j = i - 1\n        let p\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j)\n          if (p !== ' ') break\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim()\n  } else if (lastFilterIndex !== 0) {\n    pushFilter()\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim())\n    lastFilterIndex = i + 1\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i])\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp: string, filter: string): string {\n  const i = filter.indexOf('(')\n  if (i < 0) {\n    // _f: resolveFilter\n    return `_f(\"${filter}\")(${exp})`\n  } else {\n    const name = filter.slice(0, i)\n    const args = filter.slice(i + 1)\n    return `_f(\"${name}\")(${exp}${args !== ')' ? ',' + args : args}`\n  }\n}\n","/* @flow */\n\nimport { emptyObject } from 'shared/util'\nimport { parseFilters } from './parser/filter-parser'\n\ntype Range = { start?: number, end?: number };\n\n/* eslint-disable no-unused-vars */\nexport function baseWarn (msg: string, range?: Range) {\n  console.error(`[Vue compiler]: ${msg}`)\n}\n/* eslint-enable no-unused-vars */\n\nexport function pluckModuleFunction<F: Function> (\n  modules: ?Array<Object>,\n  key: string\n): Array<F> {\n  return modules\n    ? modules.map(m => m[key]).filter(_ => _)\n    : []\n}\n\nexport function addProp (el: ASTElement, name: string, value: string, range?: Range, dynamic?: boolean) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name, value, dynamic }, range))\n  el.plain = false\n}\n\nexport function addAttr (el: ASTElement, name: string, value: any, range?: Range, dynamic?: boolean) {\n  const attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []))\n  attrs.push(rangeSetItem({ name, value, dynamic }, range))\n  el.plain = false\n}\n\n// add a raw attr (use this in preTransforms)\nexport function addRawAttr (el: ASTElement, name: string, value: any, range?: Range) {\n  el.attrsMap[name] = value\n  el.attrsList.push(rangeSetItem({ name, value }, range))\n}\n\nexport function addDirective (\n  el: ASTElement,\n  name: string,\n  rawName: string,\n  value: string,\n  arg: ?string,\n  isDynamicArg: boolean,\n  modifiers: ?ASTModifiers,\n  range?: Range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name,\n    rawName,\n    value,\n    arg,\n    isDynamicArg,\n    modifiers\n  }, range))\n  el.plain = false\n}\n\nfunction prependModifierMarker (symbol: string, name: string, dynamic?: boolean): string {\n  return dynamic\n    ? `_p(${name},\"${symbol}\")`\n    : symbol + name // mark the event as captured\n}\n\nexport function addHandler (\n  el: ASTElement,\n  name: string,\n  value: string,\n  modifiers: ?ASTModifiers,\n  important?: boolean,\n  warn?: ?Function,\n  range?: Range,\n  dynamic?: boolean\n) {\n  modifiers = modifiers || emptyObject\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    )\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = `(${name})==='click'?'contextmenu':(${name})`\n    } else if (name === 'click') {\n      name = 'contextmenu'\n      delete modifiers.right\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = `(${name})==='click'?'mouseup':(${name})`\n    } else if (name === 'click') {\n      name = 'mouseup'\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture\n    name = prependModifierMarker('!', name, dynamic)\n  }\n  if (modifiers.once) {\n    delete modifiers.once\n    name = prependModifierMarker('~', name, dynamic)\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive\n    name = prependModifierMarker('&', name, dynamic)\n  }\n\n  let events\n  if (modifiers.native) {\n    delete modifiers.native\n    events = el.nativeEvents || (el.nativeEvents = {})\n  } else {\n    events = el.events || (el.events = {})\n  }\n\n  const newHandler: any = rangeSetItem({ value: value.trim(), dynamic }, range)\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers\n  }\n\n  const handlers = events[name]\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler)\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler]\n  } else {\n    events[name] = newHandler\n  }\n\n  el.plain = false\n}\n\nexport function getRawBindingAttr (\n  el: ASTElement,\n  name: string\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nexport function getBindingAttr (\n  el: ASTElement,\n  name: string,\n  getStatic?: boolean\n): ?string {\n  const dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name)\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    const staticValue = getAndRemoveAttr(el, name)\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nexport function getAndRemoveAttr (\n  el: ASTElement,\n  name: string,\n  removeFromMap?: boolean\n): ?string {\n  let val\n  if ((val = el.attrsMap[name]) != null) {\n    const list = el.attrsList\n    for (let i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name]\n  }\n  return val\n}\n\nexport function getAndRemoveAttrByRegex (\n  el: ASTElement,\n  name: RegExp\n) {\n  const list = el.attrsList\n  for (let i = 0, l = list.length; i < l; i++) {\n    const attr = list[i]\n    if (name.test(attr.name)) {\n      list.splice(i, 1)\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item: any,\n  range?: { start?: number, end?: number }\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start\n    }\n    if (range.end != null) {\n      item.end = range.end\n    }\n  }\n  return item\n}\n","/* @flow */\n\n/**\n * Cross-platform code generation for component v-model\n */\nexport function genComponentModel (\n  el: ASTElement,\n  value: string,\n  modifiers: ?ASTModifiers\n): ?boolean {\n  const { number, trim } = modifiers || {}\n\n  const baseValueExpression = '$$v'\n  let valueExpression = baseValueExpression\n  if (trim) {\n    valueExpression =\n      `(typeof ${baseValueExpression} === 'string'` +\n      `? ${baseValueExpression}.trim()` +\n      `: ${baseValueExpression})`\n  }\n  if (number) {\n    valueExpression = `_n(${valueExpression})`\n  }\n  const assignment = genAssignmentCode(value, valueExpression)\n\n  el.model = {\n    value: `(${value})`,\n    expression: JSON.stringify(value),\n    callback: `function (${baseValueExpression}) {${assignment}}`\n  }\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nexport function genAssignmentCode (\n  value: string,\n  assignment: string\n): string {\n  const res = parseModel(value)\n  if (res.key === null) {\n    return `${value}=${assignment}`\n  } else {\n    return `$set(${res.exp}, ${res.key}, ${assignment})`\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nlet len, str, chr, index, expressionPos, expressionEndPos\n\ntype ModelParseResult = {\n  exp: string,\n  key: string | null\n}\n\nexport function parseModel (val: string): ModelParseResult {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim()\n  len = val.length\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index = val.lastIndexOf('.')\n    if (index > -1) {\n      return {\n        exp: val.slice(0, index),\n        key: '\"' + val.slice(index + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val\n  index = expressionPos = expressionEndPos = 0\n\n  while (!eof()) {\n    chr = next()\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr)\n    } else if (chr === 0x5B) {\n      parseBracket(chr)\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next (): number {\n  return str.charCodeAt(++index)\n}\n\nfunction eof (): boolean {\n  return index >= len\n}\n\nfunction isStringStart (chr: number): boolean {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr: number): void {\n  let inBracket = 1\n  expressionPos = index\n  while (!eof()) {\n    chr = next()\n    if (isStringStart(chr)) {\n      parseString(chr)\n      continue\n    }\n    if (chr === 0x5B) inBracket++\n    if (chr === 0x5D) inBracket--\n    if (inBracket === 0) {\n      expressionEndPos = index\n      break\n    }\n  }\n}\n\nfunction parseString (chr: number): void {\n  const stringQuote = chr\n  while (!eof()) {\n    chr = next()\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n","/* @flow */\n\nimport config from 'core/config'\nimport { addHandler, addProp, getBindingAttr } from 'compiler/helpers'\nimport { genComponentModel, genAssignmentCode } from 'compiler/directives/model'\n\nlet warn\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nexport const RANGE_TOKEN = '__r'\nexport const CHECKBOX_RADIO_TOKEN = '__c'\n\nexport default function model (\n  el: ASTElement,\n  dir: ASTDirective,\n  _warn: Function\n): ?boolean {\n  warn = _warn\n  const value = dir.value\n  const modifiers = dir.modifiers\n  const tag = el.tag\n  const type = el.attrsMap.type\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn(\n        `<${el.tag} v-model=\"${value}\" type=\"file\">:\\n` +\n        `File inputs are read only. Use a v-on:change listener instead.`,\n        el.rawAttrsMap['v-model']\n      )\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers)\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers)\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers)\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers)\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers)\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers)\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `<${el.tag} v-model=\"${value}\">: ` +\n      `v-model is not supported on this element type. ` +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    )\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el: ASTElement,\n  value: string,\n  modifiers: ?ASTModifiers\n) {\n  const number = modifiers && modifiers.number\n  const valueBinding = getBindingAttr(el, 'value') || 'null'\n  const trueValueBinding = getBindingAttr(el, 'true-value') || 'true'\n  const falseValueBinding = getBindingAttr(el, 'false-value') || 'false'\n  addProp(el, 'checked',\n    `Array.isArray(${value})` +\n    `?_i(${value},${valueBinding})>-1` + (\n      trueValueBinding === 'true'\n        ? `:(${value})`\n        : `:_q(${value},${trueValueBinding})`\n    )\n  )\n  addHandler(el, 'change',\n    `var $$a=${value},` +\n        '$$el=$event.target,' +\n        `$$c=$$el.checked?(${trueValueBinding}):(${falseValueBinding});` +\n    'if(Array.isArray($$a)){' +\n      `var $$v=${number ? '_n(' + valueBinding + ')' : valueBinding},` +\n          '$$i=_i($$a,$$v);' +\n      `if($$el.checked){$$i<0&&(${genAssignmentCode(value, '$$a.concat([$$v])')})}` +\n      `else{$$i>-1&&(${genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')})}` +\n    `}else{${genAssignmentCode(value, '$$c')}}`,\n    null, true\n  )\n}\n\nfunction genRadioModel (\n  el: ASTElement,\n  value: string,\n  modifiers: ?ASTModifiers\n) {\n  const number = modifiers && modifiers.number\n  let valueBinding = getBindingAttr(el, 'value') || 'null'\n  valueBinding = number ? `_n(${valueBinding})` : valueBinding\n  addProp(el, 'checked', `_q(${value},${valueBinding})`)\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true)\n}\n\nfunction genSelect (\n  el: ASTElement,\n  value: string,\n  modifiers: ?ASTModifiers\n) {\n  const number = modifiers && modifiers.number\n  const selectedVal = `Array.prototype.filter` +\n    `.call($event.target.options,function(o){return o.selected})` +\n    `.map(function(o){var val = \"_value\" in o ? o._value : o.value;` +\n    `return ${number ? '_n(val)' : 'val'}})`\n\n  const assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]'\n  let code = `var $$selectedVal = ${selectedVal};`\n  code = `${code} ${genAssignmentCode(value, assignment)}`\n  addHandler(el, 'change', code, null, true)\n}\n\nfunction genDefaultModel (\n  el: ASTElement,\n  value: string,\n  modifiers: ?ASTModifiers\n): ?boolean {\n  const type = el.attrsMap.type\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    const value = el.attrsMap['v-bind:value'] || el.attrsMap[':value']\n    const typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type']\n    if (value && !typeBinding) {\n      const binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value'\n      warn(\n        `${binding}=\"${value}\" conflicts with v-model on the same element ` +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      )\n    }\n  }\n\n  const { lazy, number, trim } = modifiers || {}\n  const needCompositionGuard = !lazy && type !== 'range'\n  const event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input'\n\n  let valueExpression = '$event.target.value'\n  if (trim) {\n    valueExpression = `$event.target.value.trim()`\n  }\n  if (number) {\n    valueExpression = `_n(${valueExpression})`\n  }\n\n  let code = genAssignmentCode(value, valueExpression)\n  if (needCompositionGuard) {\n    code = `if($event.target.composing)return;${code}`\n  }\n\n  addProp(el, 'value', `(${value})`)\n  addHandler(el, event, code, null, true)\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()')\n  }\n}\n","/* @flow */\n\nimport { isDef, isUndef } from 'shared/util'\nimport { updateListeners } from 'core/vdom/helpers/index'\nimport { isIE, isFF, supportsPassive, isUsingMicroTask } from 'core/util/index'\nimport { RANGE_TOKEN, CHECKBOX_RADIO_TOKEN } from 'web/compiler/directives/model'\nimport { currentFlushTimestamp } from 'core/observer/scheduler'\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    const event = isIE ? 'change' : 'input'\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || [])\n    delete on[RANGE_TOKEN]\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || [])\n    delete on[CHECKBOX_RADIO_TOKEN]\n  }\n}\n\nlet target: any\n\nfunction createOnceHandler (event, handler, capture) {\n  const _target = target // save current target element in closure\n  return function onceHandler () {\n    const res = handler.apply(null, arguments)\n    if (res !== null) {\n      remove(event, onceHandler, capture, _target)\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nconst useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53)\n\nfunction add (\n  name: string,\n  handler: Function,\n  capture: boolean,\n  passive: boolean\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    const attachedTimestamp = currentFlushTimestamp\n    const original = handler\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    }\n  }\n  target.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture, passive }\n      : capture\n  )\n}\n\nfunction remove (\n  name: string,\n  handler: Function,\n  capture: boolean,\n  _target?: HTMLElement\n) {\n  (_target || target).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  )\n}\n\nfunction updateDOMListeners (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  const on = vnode.data.on || {}\n  const oldOn = oldVnode.data.on || {}\n  target = vnode.elm\n  normalizeEvents(on)\n  updateListeners(on, oldOn, add, remove, createOnceHandler, vnode.context)\n  target = undefined\n}\n\nexport default {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n","/* @flow */\n\nimport { isDef, isUndef, extend, toNumber } from 'shared/util'\nimport { isSVG } from 'web/util/index'\n\nlet svgContainer\n\nfunction updateDOMProps (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  let key, cur\n  const elm: any = vnode.elm\n  const oldProps = oldVnode.data.domProps || {}\n  let props = vnode.data.domProps || {}\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props)\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = ''\n    }\n  }\n\n  for (key in props) {\n    cur = props[key]\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) vnode.children.length = 0\n      if (cur === oldProps[key]) continue\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0])\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur\n      // avoid resetting cursor position when value is the same\n      const strCur = isUndef(cur) ? '' : String(cur)\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div')\n      svgContainer.innerHTML = `<svg>${cur}</svg>`\n      const svg = svgContainer.firstChild\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild)\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild)\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecessary `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\ntype acceptValueElm = HTMLInputElement | HTMLSelectElement | HTMLOptionElement;\n\nfunction shouldUpdateValue (elm: acceptValueElm, checkVal: string): boolean {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm: acceptValueElm, checkVal: string): boolean {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  let notInFocus = true\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm: any, newVal: string): boolean {\n  const value = elm.value\n  const modifiers = elm._vModifiers // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nexport default {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n","/* @flow */\n\nimport { cached, extend, toObject } from 'shared/util'\n\nexport const parseStyleText = cached(function (cssText) {\n  const res = {}\n  const listDelimiter = /;(?![^(]*\\))/g\n  const propertyDelimiter = /:(.+)/\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter)\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim())\n    }\n  })\n  return res\n})\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data: VNodeData): ?Object {\n  const style = normalizeStyleBinding(data.style)\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nexport function normalizeStyleBinding (bindingStyle: any): ?Object {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nexport function getStyle (vnode: VNodeWithData, checkChild: boolean): Object {\n  const res = {}\n  let styleData\n\n  if (checkChild) {\n    let childNode = vnode\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData)\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData)\n  }\n\n  let parentNode = vnode\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData)\n    }\n  }\n  return res\n}\n","/* @flow */\n\nimport { getStyle, normalizeStyleBinding } from 'web/util/style'\nimport { cached, camelize, extend, isDef, isUndef, hyphenate } from 'shared/util'\n\nconst cssVarRE = /^--/\nconst importantRE = /\\s*!important$/\nconst setProp = (el, name, val) => {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val)\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important')\n  } else {\n    const normalizedName = normalize(name)\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (let i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i]\n      }\n    } else {\n      el.style[normalizedName] = val\n    }\n  }\n}\n\nconst vendorNames = ['Webkit', 'Moz', 'ms']\n\nlet emptyStyle\nconst normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style\n  prop = camelize(prop)\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  const capName = prop.charAt(0).toUpperCase() + prop.slice(1)\n  for (let i = 0; i < vendorNames.length; i++) {\n    const name = vendorNames[i] + capName\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n})\n\nfunction updateStyle (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n  const data = vnode.data\n  const oldData = oldVnode.data\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  let cur, name\n  const el: any = vnode.elm\n  const oldStaticStyle: any = oldData.staticStyle\n  const oldStyleBinding: any = oldData.normalizedStyle || oldData.style || {}\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  const oldStyle = oldStaticStyle || oldStyleBinding\n\n  const style = normalizeStyleBinding(vnode.data.style) || {}\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style\n\n  const newStyle = getStyle(vnode, true)\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '')\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name]\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur)\n    }\n  }\n}\n\nexport default {\n  create: updateStyle,\n  update: updateStyle\n}\n","/* @flow */\n\nconst whitespaceRE = /\\s+/\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nexport function addClass (el: HTMLElement, cls: ?string) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(c => el.classList.add(c))\n    } else {\n      el.classList.add(cls)\n    }\n  } else {\n    const cur = ` ${el.getAttribute('class') || ''} `\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim())\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nexport function removeClass (el: HTMLElement, cls: ?string) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(c => el.classList.remove(c))\n    } else {\n      el.classList.remove(cls)\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class')\n    }\n  } else {\n    let cur = ` ${el.getAttribute('class') || ''} `\n    const tar = ' ' + cls + ' '\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ')\n    }\n    cur = cur.trim()\n    if (cur) {\n      el.setAttribute('class', cur)\n    } else {\n      el.removeAttribute('class')\n    }\n  }\n}\n","/* @flow */\n\nimport { inBrowser, isIE9 } from 'core/util/index'\nimport { addClass, removeClass } from './class-util'\nimport { remove, extend, cached } from 'shared/util'\n\nexport function resolveTransition (def?: string | Object): ?Object {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    const res = {}\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'))\n    }\n    extend(res, def)\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nconst autoCssTransition: (name: string) => Object = cached(name => {\n  return {\n    enterClass: `${name}-enter`,\n    enterToClass: `${name}-enter-to`,\n    enterActiveClass: `${name}-enter-active`,\n    leaveClass: `${name}-leave`,\n    leaveToClass: `${name}-leave-to`,\n    leaveActiveClass: `${name}-leave-active`\n  }\n})\n\nexport const hasTransition = inBrowser && !isIE9\nconst TRANSITION = 'transition'\nconst ANIMATION = 'animation'\n\n// Transition property/event sniffing\nexport let transitionProp = 'transition'\nexport let transitionEndEvent = 'transitionend'\nexport let animationProp = 'animation'\nexport let animationEndEvent = 'animationend'\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition'\n    transitionEndEvent = 'webkitTransitionEnd'\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation'\n    animationEndEvent = 'webkitAnimationEnd'\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nconst raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ fn => fn()\n\nexport function nextFrame (fn: Function) {\n  raf(() => {\n    raf(fn)\n  })\n}\n\nexport function addTransitionClass (el: any, cls: string) {\n  const transitionClasses = el._transitionClasses || (el._transitionClasses = [])\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls)\n    addClass(el, cls)\n  }\n}\n\nexport function removeTransitionClass (el: any, cls: string) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls)\n  }\n  removeClass(el, cls)\n}\n\nexport function whenTransitionEnds (\n  el: Element,\n  expectedType: ?string,\n  cb: Function\n) {\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\n  if (!type) return cb()\n  const event: string = type === TRANSITION ? transitionEndEvent : animationEndEvent\n  let ended = 0\n  const end = () => {\n    el.removeEventListener(event, onEnd)\n    cb()\n  }\n  const onEnd = e => {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end()\n      }\n    }\n  }\n  setTimeout(() => {\n    if (ended < propCount) {\n      end()\n    }\n  }, timeout + 1)\n  el.addEventListener(event, onEnd)\n}\n\nconst transformRE = /\\b(transform|all)(,|$)/\n\nexport function getTransitionInfo (el: Element, expectedType?: ?string): {\n  type: ?string;\n  propCount: number;\n  timeout: number;\n  hasTransform: boolean;\n} {\n  const styles: any = window.getComputedStyle(el)\n  // JSDOM may return undefined for transition properties\n  const transitionDelays: Array<string> = (styles[transitionProp + 'Delay'] || '').split(', ')\n  const transitionDurations: Array<string> = (styles[transitionProp + 'Duration'] || '').split(', ')\n  const transitionTimeout: number = getTimeout(transitionDelays, transitionDurations)\n  const animationDelays: Array<string> = (styles[animationProp + 'Delay'] || '').split(', ')\n  const animationDurations: Array<string> = (styles[animationProp + 'Duration'] || '').split(', ')\n  const animationTimeout: number = getTimeout(animationDelays, animationDurations)\n\n  let type: ?string\n  let timeout = 0\n  let propCount = 0\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION\n      timeout = transitionTimeout\n      propCount = transitionDurations.length\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION\n      timeout = animationTimeout\n      propCount = animationDurations.length\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout)\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0\n  }\n  const hasTransform: boolean =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property'])\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  }\n}\n\nfunction getTimeout (delays: Array<string>, durations: Array<string>): number {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays)\n  }\n\n  return Math.max.apply(null, durations.map((d, i) => {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s: string): number {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n","/* @flow */\n\nimport { inBrowser, isIE9, warn } from 'core/util/index'\nimport { mergeVNodeHook } from 'core/vdom/helpers/index'\nimport { activeInstance } from 'core/instance/lifecycle'\n\nimport {\n  once,\n  isDef,\n  isUndef,\n  isObject,\n  toNumber\n} from 'shared/util'\n\nimport {\n  nextFrame,\n  resolveTransition,\n  whenTransitionEnds,\n  addTransitionClass,\n  removeTransitionClass\n} from '../transition-util'\n\nexport function enter (vnode: VNodeWithData, toggleDisplay: ?() => void) {\n  const el: any = vnode.elm\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true\n    el._leaveCb()\n  }\n\n  const data = resolveTransition(vnode.data.transition)\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  const {\n    css,\n    type,\n    enterClass,\n    enterToClass,\n    enterActiveClass,\n    appearClass,\n    appearToClass,\n    appearActiveClass,\n    beforeEnter,\n    enter,\n    afterEnter,\n    enterCancelled,\n    beforeAppear,\n    appear,\n    afterAppear,\n    appearCancelled,\n    duration\n  } = data\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  let context = activeInstance\n  let transitionNode = activeInstance.$vnode\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context\n    transitionNode = transitionNode.parent\n  }\n\n  const isAppear = !context._isMounted || !vnode.isRootInsert\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  const startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass\n  const activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass\n  const toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass\n\n  const beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter\n  const enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter\n  const afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter\n  const enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled\n\n  const explicitEnterDuration: any = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  )\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode)\n  }\n\n  const expectsCSS = css !== false && !isIE9\n  const userWantsControl = getHookArgumentsLength(enterHook)\n\n  const cb = el._enterCb = once(() => {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass)\n      removeTransitionClass(el, activeClass)\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass)\n      }\n      enterCancelledHook && enterCancelledHook(el)\n    } else {\n      afterEnterHook && afterEnterHook(el)\n    }\n    el._enterCb = null\n  })\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', () => {\n      const parent = el.parentNode\n      const pendingNode = parent && parent._pending && parent._pending[vnode.key]\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb()\n      }\n      enterHook && enterHook(el, cb)\n    })\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el)\n  if (expectsCSS) {\n    addTransitionClass(el, startClass)\n    addTransitionClass(el, activeClass)\n    nextFrame(() => {\n      removeTransitionClass(el, startClass)\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass)\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration)\n          } else {\n            whenTransitionEnds(el, type, cb)\n          }\n        }\n      }\n    })\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay()\n    enterHook && enterHook(el, cb)\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb()\n  }\n}\n\nexport function leave (vnode: VNodeWithData, rm: Function) {\n  const el: any = vnode.elm\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true\n    el._enterCb()\n  }\n\n  const data = resolveTransition(vnode.data.transition)\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  const {\n    css,\n    type,\n    leaveClass,\n    leaveToClass,\n    leaveActiveClass,\n    beforeLeave,\n    leave,\n    afterLeave,\n    leaveCancelled,\n    delayLeave,\n    duration\n  } = data\n\n  const expectsCSS = css !== false && !isIE9\n  const userWantsControl = getHookArgumentsLength(leave)\n\n  const explicitLeaveDuration: any = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  )\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode)\n  }\n\n  const cb = el._leaveCb = once(() => {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass)\n      removeTransitionClass(el, leaveActiveClass)\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass)\n      }\n      leaveCancelled && leaveCancelled(el)\n    } else {\n      rm()\n      afterLeave && afterLeave(el)\n    }\n    el._leaveCb = null\n  })\n\n  if (delayLeave) {\n    delayLeave(performLeave)\n  } else {\n    performLeave()\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key: any)] = vnode\n    }\n    beforeLeave && beforeLeave(el)\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass)\n      addTransitionClass(el, leaveActiveClass)\n      nextFrame(() => {\n        removeTransitionClass(el, leaveClass)\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass)\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration)\n            } else {\n              whenTransitionEnds(el, type, cb)\n            }\n          }\n        }\n      })\n    }\n    leave && leave(el, cb)\n    if (!expectsCSS && !userWantsControl) {\n      cb()\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      `<transition> explicit ${name} duration is not a valid number - ` +\n      `got ${JSON.stringify(val)}.`,\n      vnode.context\n    )\n  } else if (isNaN(val)) {\n    warn(\n      `<transition> explicit ${name} duration is NaN - ` +\n      'the duration expression might be incorrect.',\n      vnode.context\n    )\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn: Function): boolean {\n  if (isUndef(fn)) {\n    return false\n  }\n  const invokerFns = fn.fns\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_: any, vnode: VNodeWithData) {\n  if (vnode.data.show !== true) {\n    enter(vnode)\n  }\n}\n\nexport default inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove (vnode: VNode, rm: Function) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm)\n    } else {\n      rm()\n    }\n  }\n} : {}\n","import attrs from './attrs'\nimport klass from './class'\nimport events from './events'\nimport domProps from './dom-props'\nimport style from './style'\nimport transition from './transition'\n\nexport default [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n","/* @flow */\n\nimport * as nodeOps from 'web/runtime/node-ops'\nimport { createPatchFunction } from 'core/vdom/patch'\nimport baseModules from 'core/vdom/modules/index'\nimport platformModules from 'web/runtime/modules/index'\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nconst modules = platformModules.concat(baseModules)\n\nexport const patch: Function = createPatchFunction({ nodeOps, modules })\n","/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nimport { isTextInputType } from 'web/util/element'\nimport { looseEqual, looseIndexOf } from 'shared/util'\nimport { mergeVNodeHook } from 'core/vdom/helpers/index'\nimport { warn, isIE9, isIE, isEdge } from 'core/util/index'\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', () => {\n    const el = document.activeElement\n    if (el && el.vmodel) {\n      trigger(el, 'input')\n    }\n  })\n}\n\nconst directive = {\n  inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', () => {\n          directive.componentUpdated(el, binding, vnode)\n        })\n      } else {\n        setSelected(el, binding, vnode.context)\n      }\n      el._vOptions = [].map.call(el.options, getValue)\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart)\n        el.addEventListener('compositionend', onCompositionEnd)\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd)\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true\n        }\n      }\n    }\n  },\n\n  componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context)\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      const prevOptions = el._vOptions\n      const curOptions = el._vOptions = [].map.call(el.options, getValue)\n      if (curOptions.some((o, i) => !looseEqual(o, prevOptions[i]))) {\n        // trigger change event if\n        // no matching option found for at least one value\n        const needReset = el.multiple\n          ? binding.value.some(v => hasNoMatchingOption(v, curOptions))\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions)\n        if (needReset) {\n          trigger(el, 'change')\n        }\n      }\n    }\n  }\n}\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm)\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(() => {\n      actuallySetSelected(el, binding, vm)\n    }, 0)\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  const value = binding.value\n  const isMultiple = el.multiple\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      `<select multiple v-model=\"${binding.expression}\"> ` +\n      `expects an Array value for its binding, but got ${\n        Object.prototype.toString.call(value).slice(8, -1)\n      }`,\n      vm\n    )\n    return\n  }\n  let selected, option\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i]\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1\n      if (option.selected !== selected) {\n        option.selected = selected\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(o => !looseEqual(o, value))\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) return\n  e.target.composing = false\n  trigger(e.target, 'input')\n}\n\nfunction trigger (el, type) {\n  const e = document.createEvent('HTMLEvents')\n  e.initEvent(type, true, true)\n  el.dispatchEvent(e)\n}\n\nexport default directive\n","/* @flow */\n\nimport { enter, leave } from '../modules/transition'\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode: VNode): VNodeWithData {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nexport default {\n  bind (el: any, { value }: VNodeDirective, vnode: VNodeWithData) {\n    vnode = locateNode(vnode)\n    const transition = vnode.data && vnode.data.transition\n    const originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display\n    if (value && transition) {\n      vnode.data.show = true\n      enter(vnode, () => {\n        el.style.display = originalDisplay\n      })\n    } else {\n      el.style.display = value ? originalDisplay : 'none'\n    }\n  },\n\n  update (el: any, { value, oldValue }: VNodeDirective, vnode: VNodeWithData) {\n    /* istanbul ignore if */\n    if (!value === !oldValue) return\n    vnode = locateNode(vnode)\n    const transition = vnode.data && vnode.data.transition\n    if (transition) {\n      vnode.data.show = true\n      if (value) {\n        enter(vnode, () => {\n          el.style.display = el.__vOriginalDisplay\n        })\n      } else {\n        leave(vnode, () => {\n          el.style.display = 'none'\n        })\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none'\n    }\n  },\n\n  unbind (\n    el: any,\n    binding: VNodeDirective,\n    vnode: VNodeWithData,\n    oldVnode: VNodeWithData,\n    isDestroy: boolean\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay\n    }\n  }\n}\n","import model from './model'\nimport show from './show'\n\nexport default {\n  model,\n  show\n}\n","/* @flow */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nimport { warn } from 'core/util/index'\nimport { camelize, extend, isPrimitive } from 'shared/util'\nimport {\n  mergeVNodeHook,\n  isAsyncPlaceholder,\n  getFirstComponentChild\n} from 'core/vdom/helpers/index'\n\nexport const transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n}\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode: ?VNode): ?VNode {\n  const compOptions: ?VNodeComponentOptions = vnode && vnode.componentOptions\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nexport function extractTransitionData (comp: Component): Object {\n  const data = {}\n  const options: ComponentOptions = comp.$options\n  // props\n  for (const key in options.propsData) {\n    data[key] = comp[key]\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  const listeners: ?Object = options._parentListeners\n  for (const key in listeners) {\n    data[camelize(key)] = listeners[key]\n  }\n  return data\n}\n\nfunction placeholder (h: Function, rawChild: VNode): ?VNode {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode: VNode): ?boolean {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child: VNode, oldChild: VNode): boolean {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nconst isNotTextNode = (c: VNode) => c.tag || isAsyncPlaceholder(c)\n\nconst isVShowDirective = d => d.name === 'show'\n\nexport default {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render (h: Function) {\n    let children: any = this.$slots.default\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode)\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      )\n    }\n\n    const mode: string = this.mode\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      )\n    }\n\n    const rawChild: VNode = children[0]\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    const child: ?VNode = getRealChild(rawChild)\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    const id: string = `__transition-${this._uid}-`\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key\n\n    const data: Object = (child.data || (child.data = {})).transition = extractTransitionData(this)\n    const oldRawChild: VNode = this._vnode\n    const oldChild: VNode = getRealChild(oldRawChild)\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      const oldData: Object = oldChild.data.transition = extend({}, data)\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true\n        mergeVNodeHook(oldData, 'afterLeave', () => {\n          this._leaving = false\n          this.$forceUpdate()\n        })\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        let delayedLeave\n        const performLeave = () => { delayedLeave() }\n        mergeVNodeHook(data, 'afterEnter', performLeave)\n        mergeVNodeHook(data, 'enterCancelled', performLeave)\n        mergeVNodeHook(oldData, 'delayLeave', leave => { delayedLeave = leave })\n      }\n    }\n\n    return rawChild\n  }\n}\n","/* @flow */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nimport { warn, extend } from 'core/util/index'\nimport { addClass, removeClass } from '../class-util'\nimport { transitionProps, extractTransitionData } from './transition'\nimport { setActiveInstance } from 'core/instance/lifecycle'\n\nimport {\n  hasTransition,\n  getTransitionInfo,\n  transitionEndEvent,\n  addTransitionClass,\n  removeTransitionClass\n} from '../transition-util'\n\nconst props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps)\n\ndelete props.mode\n\nexport default {\n  props,\n\n  beforeMount () {\n    const update = this._update\n    this._update = (vnode, hydrating) => {\n      const restoreActiveInstance = setActiveInstance(this)\n      // force removing pass\n      this.__patch__(\n        this._vnode,\n        this.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      )\n      this._vnode = this.kept\n      restoreActiveInstance()\n      update.call(this, vnode, hydrating)\n    }\n  },\n\n  render (h: Function) {\n    const tag: string = this.tag || this.$vnode.data.tag || 'span'\n    const map: Object = Object.create(null)\n    const prevChildren: Array<VNode> = this.prevChildren = this.children\n    const rawChildren: Array<VNode> = this.$slots.default || []\n    const children: Array<VNode> = this.children = []\n    const transitionData: Object = extractTransitionData(this)\n\n    for (let i = 0; i < rawChildren.length; i++) {\n      const c: VNode = rawChildren[i]\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c)\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData\n        } else if (process.env.NODE_ENV !== 'production') {\n          const opts: ?VNodeComponentOptions = c.componentOptions\n          const name: string = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag\n          warn(`<transition-group> children must be keyed: <${name}>`)\n        }\n      }\n    }\n\n    if (prevChildren) {\n      const kept: Array<VNode> = []\n      const removed: Array<VNode> = []\n      for (let i = 0; i < prevChildren.length; i++) {\n        const c: VNode = prevChildren[i]\n        c.data.transition = transitionData\n        c.data.pos = c.elm.getBoundingClientRect()\n        if (map[c.key]) {\n          kept.push(c)\n        } else {\n          removed.push(c)\n        }\n      }\n      this.kept = h(tag, null, kept)\n      this.removed = removed\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated () {\n    const children: Array<VNode> = this.prevChildren\n    const moveClass: string = this.moveClass || ((this.name || 'v') + '-move')\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs)\n    children.forEach(recordPosition)\n    children.forEach(applyTranslation)\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight\n\n    children.forEach((c: VNode) => {\n      if (c.data.moved) {\n        const el: any = c.elm\n        const s: any = el.style\n        addTransitionClass(el, moveClass)\n        s.transform = s.WebkitTransform = s.transitionDuration = ''\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb)\n            el._moveCb = null\n            removeTransitionClass(el, moveClass)\n          }\n        })\n      }\n    })\n  },\n\n  methods: {\n    hasMove (el: any, moveClass: string): boolean {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      const clone: HTMLElement = el.cloneNode()\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach((cls: string) => { removeClass(clone, cls) })\n      }\n      addClass(clone, moveClass)\n      clone.style.display = 'none'\n      this.$el.appendChild(clone)\n      const info: Object = getTransitionInfo(clone)\n      this.$el.removeChild(clone)\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c: VNode) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb()\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb()\n  }\n}\n\nfunction recordPosition (c: VNode) {\n  c.data.newPos = c.elm.getBoundingClientRect()\n}\n\nfunction applyTranslation (c: VNode) {\n  const oldPos = c.data.pos\n  const newPos = c.data.newPos\n  const dx = oldPos.left - newPos.left\n  const dy = oldPos.top - newPos.top\n  if (dx || dy) {\n    c.data.moved = true\n    const s = c.elm.style\n    s.transform = s.WebkitTransform = `translate(${dx}px,${dy}px)`\n    s.transitionDuration = '0s'\n  }\n}\n","import Transition from './transition'\nimport TransitionGroup from './transition-group'\n\nexport default {\n  Transition,\n  TransitionGroup\n}\n","/* @flow */\n\nimport Vue from 'core/index'\nimport config from 'core/config'\nimport { extend, noop } from 'shared/util'\nimport { mountComponent } from 'core/instance/lifecycle'\nimport { devtools, inBrowser } from 'core/util/index'\n\nimport {\n  query,\n  mustUseProp,\n  isReservedTag,\n  isReservedAttr,\n  getTagNamespace,\n  isUnknownElement\n} from 'web/util/index'\n\nimport { patch } from './patch'\nimport platformDirectives from './directives/index'\nimport platformComponents from './components/index'\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp\nVue.config.isReservedTag = isReservedTag\nVue.config.isReservedAttr = isReservedAttr\nVue.config.getTagNamespace = getTagNamespace\nVue.config.isUnknownElement = isUnknownElement\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives)\nextend(Vue.options.components, platformComponents)\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop\n\n// public mount method\nVue.prototype.$mount = function (\n  el?: string | Element,\n  hydrating?: boolean\n): Component {\n  el = el && inBrowser ? query(el) : undefined\n  return mountComponent(this, el, hydrating)\n}\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(() => {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue)\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        )\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        `You are running Vue in development mode.\\n` +\n        `Make sure to turn on production mode when deploying for production.\\n` +\n        `See more tips at https://vuejs.org/guide/deployment.html`\n      )\n    }\n  }, 0)\n}\n\nexport default Vue\n","/* @flow */\n\nimport { cached } from 'shared/util'\nimport { parseFilters } from './filter-parser'\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nconst regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\n\nconst buildRegex = cached(delimiters => {\n  const open = delimiters[0].replace(regexEscapeRE, '\\\\$&')\n  const close = delimiters[1].replace(regexEscapeRE, '\\\\$&')\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n})\n\ntype TextParseResult = {\n  expression: string,\n  tokens: Array<string | { '@binding': string }>\n}\n\nexport function parseText (\n  text: string,\n  delimiters?: [string, string]\n): TextParseResult | void {\n  const tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE\n  if (!tagRE.test(text)) {\n    return\n  }\n  const tokens = []\n  const rawTokens = []\n  let lastIndex = tagRE.lastIndex = 0\n  let match, index, tokenValue\n  while ((match = tagRE.exec(text))) {\n    index = match.index\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index))\n      tokens.push(JSON.stringify(tokenValue))\n    }\n    // tag token\n    const exp = parseFilters(match[1].trim())\n    tokens.push(`_s(${exp})`)\n    rawTokens.push({ '@binding': exp })\n    lastIndex = index + match[0].length\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex))\n    tokens.push(JSON.stringify(tokenValue))\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n","/* @flow */\n\nimport { parseText } from 'compiler/parser/text-parser'\nimport {\n  getAndRemoveAttr,\n  getBindingAttr,\n  baseWarn\n} from 'compiler/helpers'\n\nfunction transformNode (el: ASTElement, options: CompilerOptions) {\n  const warn = options.warn || baseWarn\n  const staticClass = getAndRemoveAttr(el, 'class')\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    const res = parseText(staticClass, options.delimiters)\n    if (res) {\n      warn(\n        `class=\"${staticClass}\": ` +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      )\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass)\n  }\n  const classBinding = getBindingAttr(el, 'class', false /* getStatic */)\n  if (classBinding) {\n    el.classBinding = classBinding\n  }\n}\n\nfunction genData (el: ASTElement): string {\n  let data = ''\n  if (el.staticClass) {\n    data += `staticClass:${el.staticClass},`\n  }\n  if (el.classBinding) {\n    data += `class:${el.classBinding},`\n  }\n  return data\n}\n\nexport default {\n  staticKeys: ['staticClass'],\n  transformNode,\n  genData\n}\n","/* @flow */\n\nimport { parseText } from 'compiler/parser/text-parser'\nimport { parseStyleText } from 'web/util/style'\nimport {\n  getAndRemoveAttr,\n  getBindingAttr,\n  baseWarn\n} from 'compiler/helpers'\n\nfunction transformNode (el: ASTElement, options: CompilerOptions) {\n  const warn = options.warn || baseWarn\n  const staticStyle = getAndRemoveAttr(el, 'style')\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      const res = parseText(staticStyle, options.delimiters)\n      if (res) {\n        warn(\n          `style=\"${staticStyle}\": ` +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        )\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle))\n  }\n\n  const styleBinding = getBindingAttr(el, 'style', false /* getStatic */)\n  if (styleBinding) {\n    el.styleBinding = styleBinding\n  }\n}\n\nfunction genData (el: ASTElement): string {\n  let data = ''\n  if (el.staticStyle) {\n    data += `staticStyle:${el.staticStyle},`\n  }\n  if (el.styleBinding) {\n    data += `style:(${el.styleBinding}),`\n  }\n  return data\n}\n\nexport default {\n  staticKeys: ['staticStyle'],\n  transformNode,\n  genData\n}\n","/* @flow */\n\nlet decoder\n\nexport default {\n  decode (html: string): string {\n    decoder = decoder || document.createElement('div')\n    decoder.innerHTML = html\n    return decoder.textContent\n  }\n}\n","/* @flow */\n\nimport { makeMap } from 'shared/util'\n\nexport const isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n)\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nexport const canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n)\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nexport const isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n)\n","/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson (MPL-1.1 OR Apache-2.0 OR GPL-2.0-or-later)\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\nimport { makeMap, no } from 'shared/util'\nimport { isNonPhrasingTag } from 'web/compiler/util'\nimport { unicodeRegExp } from 'core/util/lang'\n\n// Regular Expressions for parsing tags and attributes\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\nconst startTagClose = /^\\s*(\\/?)>/\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\nconst doctype = /^<!DOCTYPE [^>]+>/i\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nconst comment = /^<!\\--/\nconst conditionalComment = /^<!\\[/\n\n// Special Elements (can contain anything)\nexport const isPlainTextElement = makeMap('script,style,textarea', true)\nconst reCache = {}\n\nconst decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n}\nconst encodedAttr = /&(?:lt|gt|quot|amp|#39);/g\nconst encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g\n\n// #5992\nconst isIgnoreNewlineTag = makeMap('pre,textarea', true)\nconst shouldIgnoreFirstNewline = (tag, html) => tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  const re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr\n  return value.replace(re, match => decodingMap[match])\n}\n\nexport function parseHTML (html, options) {\n  const stack = []\n  const expectHTML = options.expectHTML\n  const isUnaryTag = options.isUnaryTag || no\n  const canBeLeftOpenTag = options.canBeLeftOpenTag || no\n  let index = 0\n  let last, lastTag\n  while (html) {\n    last = html\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      let textEnd = html.indexOf('<')\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          const commentEnd = html.indexOf('-->')\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3)\n            }\n            advance(commentEnd + 3)\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          const conditionalEnd = html.indexOf(']>')\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2)\n            continue\n          }\n        }\n\n        // Doctype:\n        const doctypeMatch = html.match(doctype)\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length)\n          continue\n        }\n\n        // End tag:\n        const endTagMatch = html.match(endTag)\n        if (endTagMatch) {\n          const curIndex = index\n          advance(endTagMatch[0].length)\n          parseEndTag(endTagMatch[1], curIndex, index)\n          continue\n        }\n\n        // Start tag:\n        const startTagMatch = parseStartTag()\n        if (startTagMatch) {\n          handleStartTag(startTagMatch)\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1)\n          }\n          continue\n        }\n      }\n\n      let text, rest, next\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd)\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1)\n          if (next < 0) break\n          textEnd += next\n          rest = html.slice(textEnd)\n        }\n        text = html.substring(0, textEnd)\n      }\n\n      if (textEnd < 0) {\n        text = html\n      }\n\n      if (text) {\n        advance(text.length)\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index)\n      }\n    } else {\n      let endTagLength = 0\n      const stackedTag = lastTag.toLowerCase()\n      const reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'))\n      const rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1')\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1)\n        }\n        if (options.chars) {\n          options.chars(text)\n        }\n        return ''\n      })\n      index += html.length - rest.length\n      html = rest\n      parseEndTag(stackedTag, index - endTagLength, index)\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html)\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn(`Mal-formatted tag at end of template: \"${html}\"`, { start: index + html.length })\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag()\n\n  function advance (n) {\n    index += n\n    html = html.substring(n)\n  }\n\n  function parseStartTag () {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      }\n      advance(start[0].length)\n      let end, attr\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index\n        advance(attr[0].length)\n        attr.end = index\n        match.attrs.push(attr)\n      }\n      if (end) {\n        match.unarySlash = end[1]\n        advance(end[0].length)\n        match.end = index\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    const tagName = match.tagName\n    const unarySlash = match.unarySlash\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag)\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName)\n      }\n    }\n\n    const unary = isUnaryTag(tagName) || !!unarySlash\n\n    const l = match.attrs.length\n    const attrs = new Array(l)\n    for (let i = 0; i < l; i++) {\n      const args = match.attrs[i]\n      const value = args[3] || args[4] || args[5] || ''\n      const shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      }\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length\n        attrs[i].end = args.end\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end })\n      lastTag = tagName\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end)\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    let pos, lowerCasedTagName\n    if (start == null) start = index\n    if (end == null) end = index\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase()\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (let i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            `tag <${stack[i].tag}> has no matching end tag.`,\n            { start: stack[i].start, end: stack[i].end }\n          )\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end)\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos\n      lastTag = pos && stack[pos - 1].tag\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end)\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end)\n      }\n      if (options.end) {\n        options.end(tagName, start, end)\n      }\n    }\n  }\n}\n","/* @flow */\n\nimport he from 'he'\nimport { parseHTML } from './html-parser'\nimport { parseText } from './text-parser'\nimport { parseFilters } from './filter-parser'\nimport { genAssignmentCode } from '../directives/model'\nimport { extend, cached, no, camelize, hyphenate } from 'shared/util'\nimport { isIE, isEdge, isServerRendering } from 'core/util/env'\n\nimport {\n  addProp,\n  addAttr,\n  baseWarn,\n  addHandler,\n  addDirective,\n  getBindingAttr,\n  getAndRemoveAttr,\n  getRawBindingAttr,\n  pluckModuleFunction,\n  getAndRemoveAttrByRegex\n} from '../helpers'\n\nexport const onRE = /^@|^v-on:/\nexport const dirRE = process.env.VBIND_PROP_SHORTHAND\n  ? /^v-|^@|^:|^\\.|^#/\n  : /^v-|^@|^:|^#/\nexport const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\nexport const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\nconst stripParensRE = /^\\(|\\)$/g\nconst dynamicArgRE = /^\\[.*\\]$/\n\nconst argRE = /:(.*)$/\nexport const bindRE = /^:|^\\.|^v-bind:/\nconst propBindRE = /^\\./\nconst modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g\n\nconst slotRE = /^v-slot(:|$)|^#/\n\nconst lineBreakRE = /[\\r\\n]/\nconst whitespaceRE = /[ \\f\\t\\r\\n]+/g\n\nconst invalidAttributeRE = /[\\s\"'<>\\/=]/\n\nconst decodeHTMLCached = cached(he.decode)\n\nexport const emptySlotScopeToken = `_empty_`\n\n// configurable state\nexport let warn: any\nlet delimiters\nlet transforms\nlet preTransforms\nlet postTransforms\nlet platformIsPreTag\nlet platformMustUseProp\nlet platformGetTagNamespace\nlet maybeComponent\n\nexport function createASTElement (\n  tag: string,\n  attrs: Array<ASTAttr>,\n  parent: ASTElement | void\n): ASTElement {\n  return {\n    type: 1,\n    tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nexport function parse (\n  template: string,\n  options: CompilerOptions\n): ASTElement | void {\n  warn = options.warn || baseWarn\n\n  platformIsPreTag = options.isPreTag || no\n  platformMustUseProp = options.mustUseProp || no\n  platformGetTagNamespace = options.getTagNamespace || no\n  const isReservedTag = options.isReservedTag || no\n  maybeComponent = (el: ASTElement) => !!(\n    el.component ||\n    el.attrsMap[':is'] ||\n    el.attrsMap['v-bind:is'] ||\n    !(el.attrsMap.is ? isReservedTag(el.attrsMap.is) : isReservedTag(el.tag))\n  )\n  transforms = pluckModuleFunction(options.modules, 'transformNode')\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode')\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode')\n\n  delimiters = options.delimiters\n\n  const stack = []\n  const preserveWhitespace = options.preserveWhitespace !== false\n  const whitespaceOption = options.whitespace\n  let root\n  let currentParent\n  let inVPre = false\n  let inPre = false\n  let warned = false\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true\n      warn(msg, range)\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element)\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options)\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element)\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        })\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          `Component template should contain exactly one root element. ` +\n          `If you are using v-if on multiple elements, ` +\n          `use v-else-if to chain them instead.`,\n          { start: element.start }\n        )\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent)\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          const name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element\n        }\n        currentParent.children.push(element)\n        element.parent = currentParent\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(c => !(c: any).slotScope)\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element)\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false\n    }\n    // apply post-transforms\n    for (let i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options)\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      let lastNode\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop()\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        `Cannot use <${el.tag}> as component root element because it may ` +\n        'contain multiple nodes.',\n        { start: el.start }\n      )\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      )\n    }\n  }\n\n  parseHTML(template, {\n    warn,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start (tag, attrs, unary, start, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      const ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag)\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs)\n      }\n\n      let element: ASTElement = createASTElement(tag, attrs, currentParent)\n      if (ns) {\n        element.ns = ns\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start\n          element.end = end\n          element.rawAttrsMap = element.attrsList.reduce((cumulated, attr) => {\n            cumulated[attr.name] = attr\n            return cumulated\n          }, {})\n        }\n        attrs.forEach(attr => {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn(\n              `Invalid dynamic argument expression: attribute names cannot contain ` +\n              `spaces, quotes, <, >, / or =.`,\n              {\n                start: attr.start + attr.name.indexOf(`[`),\n                end: attr.start + attr.name.length\n              }\n            )\n          }\n        })\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true\n        process.env.NODE_ENV !== 'production' && warn(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          `<${tag}>` + ', as they will not be parsed.',\n          { start: element.start }\n        )\n      }\n\n      // apply pre-transforms\n      for (let i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element\n      }\n\n      if (!inVPre) {\n        processPre(element)\n        if (element.pre) {\n          inVPre = true\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true\n      }\n      if (inVPre) {\n        processRawAttrs(element)\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element)\n        processIf(element)\n        processOnce(element)\n      }\n\n      if (!root) {\n        root = element\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root)\n        }\n      }\n\n      if (!unary) {\n        currentParent = element\n        stack.push(element)\n      } else {\n        closeElement(element)\n      }\n    },\n\n    end (tag, start, end) {\n      const element = stack[stack.length - 1]\n      // pop stack\n      stack.length -= 1\n      currentParent = stack[stack.length - 1]\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end\n      }\n      closeElement(element)\n    },\n\n    chars (text: string, start: number, end: number) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start }\n            )\n          } else if ((text = text.trim())) {\n            warnOnce(\n              `text \"${text}\" outside root element will be ignored.`,\n              { start }\n            )\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      const children = currentParent.children\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text)\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = ''\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' '\n        } else {\n          text = ' '\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : ''\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE, ' ')\n        }\n        let res\n        let child: ?ASTNode\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text\n          }\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text\n          }\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start\n            child.end = end\n          }\n          children.push(child)\n        }\n      }\n    },\n    comment (text: string, start, end) {\n      // adding anything as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        const child: ASTText = {\n          type: 3,\n          text,\n          isComment: true\n        }\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start\n          child.end = end\n        }\n        currentParent.children.push(child)\n      }\n    }\n  })\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true\n  }\n}\n\nfunction processRawAttrs (el) {\n  const list = el.attrsList\n  const len = list.length\n  if (len) {\n    const attrs: Array<ASTAttr> = el.attrs = new Array(len)\n    for (let i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      }\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start\n        attrs[i].end = list[i].end\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true\n  }\n}\n\nexport function processElement (\n  element: ASTElement,\n  options: CompilerOptions\n) {\n  processKey(element)\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  )\n\n  processRef(element)\n  processSlotContent(element)\n  processSlotOutlet(element)\n  processComponent(element)\n  for (let i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element\n  }\n  processAttrs(element)\n  return element\n}\n\nfunction processKey (el) {\n  const exp = getBindingAttr(el, 'key')\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn(\n          `<template> cannot be keyed. Place the key on real elements instead.`,\n          getRawBindingAttr(el, 'key')\n        )\n      }\n      if (el.for) {\n        const iterator = el.iterator2 || el.iterator1\n        const parent = el.parent\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn(\n            `Do not use v-for index as key on <transition-group> children, ` +\n            `this is the same as not using keys.`,\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          )\n        }\n      }\n    }\n    el.key = exp\n  }\n}\n\nfunction processRef (el) {\n  const ref = getBindingAttr(el, 'ref')\n  if (ref) {\n    el.ref = ref\n    el.refInFor = checkInFor(el)\n  }\n}\n\nexport function processFor (el: ASTElement) {\n  let exp\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    const res = parseFor(exp)\n    if (res) {\n      extend(el, res)\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(\n        `Invalid v-for expression: ${exp}`,\n        el.rawAttrsMap['v-for']\n      )\n    }\n  }\n}\n\ntype ForParseResult = {\n  for: string;\n  alias: string;\n  iterator1?: string;\n  iterator2?: string;\n};\n\nexport function parseFor (exp: string): ?ForParseResult {\n  const inMatch = exp.match(forAliasRE)\n  if (!inMatch) return\n  const res = {}\n  res.for = inMatch[2].trim()\n  const alias = inMatch[1].trim().replace(stripParensRE, '')\n  const iteratorMatch = alias.match(forIteratorRE)\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim()\n    res.iterator1 = iteratorMatch[1].trim()\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim()\n    }\n  } else {\n    res.alias = alias\n  }\n  return res\n}\n\nfunction processIf (el) {\n  const exp = getAndRemoveAttr(el, 'v-if')\n  if (exp) {\n    el.if = exp\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    })\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true\n    }\n    const elseif = getAndRemoveAttr(el, 'v-else-if')\n    if (elseif) {\n      el.elseif = elseif\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  const prev = findPrevElement(parent.children)\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    })\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `v-${el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else'} ` +\n      `used on element <${el.tag}> without corresponding v-if.`,\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    )\n  }\n}\n\nfunction findPrevElement (children: Array<any>): ASTElement | void {\n  let i = children.length\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn(\n          `text \"${children[i].text.trim()}\" between v-if and v-else(-if) ` +\n          `will be ignored.`,\n          children[i]\n        )\n      }\n      children.pop()\n    }\n  }\n}\n\nexport function addIfCondition (el: ASTElement, condition: ASTIfCondition) {\n  if (!el.ifConditions) {\n    el.ifConditions = []\n  }\n  el.ifConditions.push(condition)\n}\n\nfunction processOnce (el) {\n  const once = getAndRemoveAttr(el, 'v-once')\n  if (once != null) {\n    el.once = true\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  let slotScope\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope')\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn(\n        `the \"scope\" attribute for scoped slots have been deprecated and ` +\n        `replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute ` +\n        `can also be used on plain elements in addition to <template> to ` +\n        `denote scoped slots.`,\n        el.rawAttrsMap['scope'],\n        true\n      )\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope')\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn(\n        `Ambiguous combined usage of slot-scope and v-for on <${el.tag}> ` +\n        `(v-for takes higher priority). Use a wrapper <template> for the ` +\n        `scoped slot to make it clearer.`,\n        el.rawAttrsMap['slot-scope'],\n        true\n      )\n    }\n    el.slotScope = slotScope\n  }\n\n  // slot=\"xxx\"\n  const slotTarget = getBindingAttr(el, 'slot')\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot'])\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'))\n    }\n  }\n\n  // 2.6 v-slot syntax\n  if (process.env.NEW_SLOT_SYNTAX) {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      const slotBinding = getAndRemoveAttrByRegex(el, slotRE)\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn(\n              `Unexpected mixed usage of different slot syntaxes.`,\n              el\n            )\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn(\n              `<template v-slot> can only appear at the root level inside ` +\n              `the receiving component`,\n              el\n            )\n          }\n        }\n        const { name, dynamic } = getSlotName(slotBinding)\n        el.slotTarget = name\n        el.slotTargetDynamic = dynamic\n        el.slotScope = slotBinding.value || emptySlotScopeToken // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      const slotBinding = getAndRemoveAttrByRegex(el, slotRE)\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn(\n              `v-slot can only be used on components or <template>.`,\n              slotBinding\n            )\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn(\n              `Unexpected mixed usage of different slot syntaxes.`,\n              el\n            )\n          }\n          if (el.scopedSlots) {\n            warn(\n              `To avoid scope ambiguity, the default slot should also use ` +\n              `<template> syntax when there are other named slots.`,\n              slotBinding\n            )\n          }\n        }\n        // add the component's children to its default slot\n        const slots = el.scopedSlots || (el.scopedSlots = {})\n        const { name, dynamic } = getSlotName(slotBinding)\n        const slotContainer = slots[name] = createASTElement('template', [], el)\n        slotContainer.slotTarget = name\n        slotContainer.slotTargetDynamic = dynamic\n        slotContainer.children = el.children.filter((c: any) => {\n          if (!c.slotScope) {\n            c.parent = slotContainer\n            return true\n          }\n        })\n        slotContainer.slotScope = slotBinding.value || emptySlotScopeToken\n        // remove children as they are returned from scopedSlots now\n        el.children = []\n        // mark el non-plain so data gets generated\n        el.plain = false\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  let name = binding.name.replace(slotRE, '')\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default'\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(\n        `v-slot shorthand syntax requires a slot name.`,\n        binding\n      )\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: `\"${name}\"`, dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name')\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn(\n        `\\`key\\` does not work on <slot> because slots are abstract outlets ` +\n        `and can possibly expand into multiple elements. ` +\n        `Use the key on a wrapping element instead.`,\n        getRawBindingAttr(el, 'key')\n      )\n    }\n  }\n}\n\nfunction processComponent (el) {\n  let binding\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true\n  }\n}\n\nfunction processAttrs (el) {\n  const list = el.attrsList\n  let i, l, name, rawName, value, modifiers, syncGen, isDynamic\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name\n    value = list[i].value\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''))\n      // support .foo shorthand syntax for the .prop modifier\n      if (process.env.VBIND_PROP_SHORTHAND && propBindRE.test(name)) {\n        (modifiers || (modifiers = {})).prop = true\n        name = `.` + name.slice(1).replace(modifierRE, '')\n      } else if (modifiers) {\n        name = name.replace(modifierRE, '')\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '')\n        value = parseFilters(value)\n        isDynamic = dynamicArgRE.test(name)\n        if (isDynamic) {\n          name = name.slice(1, -1)\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn(\n            `The value for a v-bind expression cannot be empty. Found in \"v-bind:${name}\"`\n          )\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name)\n            if (name === 'innerHtml') name = 'innerHTML'\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name)\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, `$event`)\n            if (!isDynamic) {\n              addHandler(\n                el,\n                `update:${camelize(name)}`,\n                syncGen,\n                null,\n                false,\n                warn,\n                list[i]\n              )\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  `update:${hyphenate(name)}`,\n                  syncGen,\n                  null,\n                  false,\n                  warn,\n                  list[i]\n                )\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                `\"update:\"+(${name})`,\n                syncGen,\n                null,\n                false,\n                warn,\n                list[i],\n                true // dynamic\n              )\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic)\n        } else {\n          addAttr(el, name, value, list[i], isDynamic)\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '')\n        isDynamic = dynamicArgRE.test(name)\n        if (isDynamic) {\n          name = name.slice(1, -1)\n        }\n        addHandler(el, name, value, modifiers, false, warn, list[i], isDynamic)\n      } else { // normal directives\n        name = name.replace(dirRE, '')\n        // parse arg\n        const argMatch = name.match(argRE)\n        let arg = argMatch && argMatch[1]\n        isDynamic = false\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1))\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1)\n            isDynamic = true\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i])\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value)\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        const res = parseText(value, delimiters)\n        if (res) {\n          warn(\n            `${name}=\"${value}\": ` +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          )\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i])\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i])\n      }\n    }\n  }\n}\n\nfunction checkInFor (el: ASTElement): boolean {\n  let parent = el\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent\n  }\n  return false\n}\n\nfunction parseModifiers (name: string): Object | void {\n  const match = name.match(modifierRE)\n  if (match) {\n    const ret = {}\n    match.forEach(m => { ret[m.slice(1)] = true })\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs: Array<Object>): Object {\n  const map = {}\n  for (let i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn('duplicate attribute: ' + attrs[i].name, attrs[i])\n    }\n    map[attrs[i].name] = attrs[i].value\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el): boolean {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el): boolean {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nconst ieNSBug = /^xmlns:NS\\d+/\nconst ieNSPrefix = /^NS\\d+:/\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  const res = []\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i]\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '')\n      res.push(attr)\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  let _el = el\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn(\n        `<${el.tag} v-model=\"${value}\">: ` +\n        `You are binding v-model directly to a v-for iteration alias. ` +\n        `This will not be able to modify the v-for source array because ` +\n        `writing to the alias is like modifying a function local variable. ` +\n        `Consider using an array of objects and use v-model on an object property instead.`,\n        el.rawAttrsMap['v-model']\n      )\n    }\n    _el = _el.parent\n  }\n}\n","/* @flow */\n\n/**\n * Expand input[v-model] with dynamic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nimport {\n  addRawAttr,\n  getBindingAttr,\n  getAndRemoveAttr\n} from 'compiler/helpers'\n\nimport {\n  processFor,\n  processElement,\n  addIfCondition,\n  createASTElement\n} from 'compiler/parser/index'\n\nfunction preTransformNode (el: ASTElement, options: CompilerOptions) {\n  if (el.tag === 'input') {\n    const map = el.attrsMap\n    if (!map['v-model']) {\n      return\n    }\n\n    let typeBinding\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type')\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = `(${map['v-bind']}).type`\n    }\n\n    if (typeBinding) {\n      const ifCondition = getAndRemoveAttr(el, 'v-if', true)\n      const ifConditionExtra = ifCondition ? `&&(${ifCondition})` : ``\n      const hasElse = getAndRemoveAttr(el, 'v-else', true) != null\n      const elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true)\n      // 1. checkbox\n      const branch0 = cloneASTElement(el)\n      // process for on the main node\n      processFor(branch0)\n      addRawAttr(branch0, 'type', 'checkbox')\n      processElement(branch0, options)\n      branch0.processed = true // prevent it from double-processed\n      branch0.if = `(${typeBinding})==='checkbox'` + ifConditionExtra\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      })\n      // 2. add radio else-if condition\n      const branch1 = cloneASTElement(el)\n      getAndRemoveAttr(branch1, 'v-for', true)\n      addRawAttr(branch1, 'type', 'radio')\n      processElement(branch1, options)\n      addIfCondition(branch0, {\n        exp: `(${typeBinding})==='radio'` + ifConditionExtra,\n        block: branch1\n      })\n      // 3. other\n      const branch2 = cloneASTElement(el)\n      getAndRemoveAttr(branch2, 'v-for', true)\n      addRawAttr(branch2, ':type', typeBinding)\n      processElement(branch2, options)\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      })\n\n      if (hasElse) {\n        branch0.else = true\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nexport default {\n  preTransformNode\n}\n","import klass from './class'\nimport style from './style'\nimport model from './model'\n\nexport default [\n  klass,\n  style,\n  model\n]\n","/* @flow */\n\nimport { addProp } from 'compiler/helpers'\n\nexport default function text (el: ASTElement, dir: ASTDirective) {\n  if (dir.value) {\n    addProp(el, 'textContent', `_s(${dir.value})`, dir)\n  }\n}\n","/* @flow */\n\nimport { addProp } from 'compiler/helpers'\n\nexport default function html (el: ASTElement, dir: ASTDirective) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', `_s(${dir.value})`, dir)\n  }\n}\n","import model from './model'\nimport text from './text'\nimport html from './html'\n\nexport default {\n  model,\n  text,\n  html\n}\n","/* @flow */\n\nimport {\n  isPreTag,\n  mustUseProp,\n  isReservedTag,\n  getTagNamespace\n} from '../util/index'\n\nimport modules from './modules/index'\nimport directives from './directives/index'\nimport { genStaticKeys } from 'shared/util'\nimport { isUnaryTag, canBeLeftOpenTag } from './util'\n\nexport const baseOptions: CompilerOptions = {\n  expectHTML: true,\n  modules,\n  directives,\n  isPreTag,\n  isUnaryTag,\n  mustUseProp,\n  canBeLeftOpenTag,\n  isReservedTag,\n  getTagNamespace,\n  staticKeys: genStaticKeys(modules)\n}\n","/* @flow */\n\nimport { makeMap, isBuiltInTag, cached, no } from 'shared/util'\n\nlet isStaticKey\nlet isPlatformReservedTag\n\nconst genStaticKeysCached = cached(genStaticKeys)\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nexport function optimize (root: ?ASTElement, options: CompilerOptions) {\n  if (!root) return\n  isStaticKey = genStaticKeysCached(options.staticKeys || '')\n  isPlatformReservedTag = options.isReservedTag || no\n  // first pass: mark all non-static nodes.\n  markStatic(root)\n  // second pass: mark static roots.\n  markStaticRoots(root, false)\n}\n\nfunction genStaticKeys (keys: string): Function {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic (node: ASTNode) {\n  node.static = isStatic(node)\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (let i = 0, l = node.children.length; i < l; i++) {\n      const child = node.children[i]\n      markStatic(child)\n      if (!child.static) {\n        node.static = false\n      }\n    }\n    if (node.ifConditions) {\n      for (let i = 1, l = node.ifConditions.length; i < l; i++) {\n        const block = node.ifConditions[i].block\n        markStatic(block)\n        if (!block.static) {\n          node.static = false\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node: ASTNode, isInFor: boolean) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true\n      return\n    } else {\n      node.staticRoot = false\n    }\n    if (node.children) {\n      for (let i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for)\n      }\n    }\n    if (node.ifConditions) {\n      for (let i = 1, l = node.ifConditions.length; i < l; i++) {\n        markStaticRoots(node.ifConditions[i].block, isInFor)\n      }\n    }\n  }\n}\n\nfunction isStatic (node: ASTNode): boolean {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node: ASTElement): boolean {\n  while (node.parent) {\n    node = node.parent\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n","/* @flow */\n\nconst fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/\nconst fnInvokeRE = /\\([^)]*?\\);*$/\nconst simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/\n\n// KeyboardEvent.keyCode aliases\nconst keyCodes: { [key: string]: number | Array<number> } = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n}\n\n// KeyboardEvent.key aliases\nconst keyNames: { [key: string]: string | Array<string> } = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n}\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nconst genGuard = condition => `if(${condition})return null;`\n\nconst modifierCode: { [key: string]: string } = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(`$event.target !== $event.currentTarget`),\n  ctrl: genGuard(`!$event.ctrlKey`),\n  shift: genGuard(`!$event.shiftKey`),\n  alt: genGuard(`!$event.altKey`),\n  meta: genGuard(`!$event.metaKey`),\n  left: genGuard(`'button' in $event && $event.button !== 0`),\n  middle: genGuard(`'button' in $event && $event.button !== 1`),\n  right: genGuard(`'button' in $event && $event.button !== 2`)\n}\n\nexport function genHandlers (\n  events: ASTElementHandlers,\n  isNative: boolean\n): string {\n  const prefix = isNative ? 'nativeOn:' : 'on:'\n  let staticHandlers = ``\n  let dynamicHandlers = ``\n  for (const name in events) {\n    const handlerCode = genHandler(events[name])\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += `${name},${handlerCode},`\n    } else {\n      staticHandlers += `\"${name}\":${handlerCode},`\n    }\n  }\n  staticHandlers = `{${staticHandlers.slice(0, -1)}}`\n  if (dynamicHandlers) {\n    return prefix + `_d(${staticHandlers},[${dynamicHandlers.slice(0, -1)}])`\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\n// Generate handler code with binding params on Weex\n/* istanbul ignore next */\nfunction genWeexHandler (params: Array<any>, handlerCode: string) {\n  let innerHandlerCode = handlerCode\n  const exps = params.filter(exp => simplePathRE.test(exp) && exp !== '$event')\n  const bindings = exps.map(exp => ({ '@binding': exp }))\n  const args = exps.map((exp, i) => {\n    const key = `$_${i + 1}`\n    innerHandlerCode = innerHandlerCode.replace(exp, key)\n    return key\n  })\n  args.push('$event')\n  return '{\\n' +\n    `handler:function(${args.join(',')}){${innerHandlerCode}},\\n` +\n    `params:${JSON.stringify(bindings)}\\n` +\n    '}'\n}\n\nfunction genHandler (handler: ASTElementHandler | Array<ASTElementHandler>): string {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return `[${handler.map(handler => genHandler(handler)).join(',')}]`\n  }\n\n  const isMethodPath = simplePathRE.test(handler.value)\n  const isFunctionExpression = fnExpRE.test(handler.value)\n  const isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''))\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    if (__WEEX__ && handler.params) {\n      return genWeexHandler(handler.params, handler.value)\n    }\n    return `function($event){${\n      isFunctionInvocation ? `return ${handler.value}` : handler.value\n    }}` // inline statement\n  } else {\n    let code = ''\n    let genModifierCode = ''\n    const keys = []\n    for (const key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key]\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key)\n        }\n      } else if (key === 'exact') {\n        const modifiers: ASTModifiers = (handler.modifiers: any)\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(keyModifier => !modifiers[keyModifier])\n            .map(keyModifier => `$event.${keyModifier}Key`)\n            .join('||')\n        )\n      } else {\n        keys.push(key)\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys)\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode\n    }\n    const handlerCode = isMethodPath\n      ? `return ${handler.value}.apply(null, arguments)`\n      : isFunctionExpression\n        ? `return (${handler.value}).apply(null, arguments)`\n        : isFunctionInvocation\n          ? `return ${handler.value}`\n          : handler.value\n    /* istanbul ignore if */\n    if (__WEEX__ && handler.params) {\n      return genWeexHandler(handler.params, code + handlerCode)\n    }\n    return `function($event){${code}${handlerCode}}`\n  }\n}\n\nfunction genKeyFilter (keys: Array<string>): string {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    `if(!$event.type.indexOf('key')&&` +\n    `${keys.map(genFilterCode).join('&&')})return null;`\n  )\n}\n\nfunction genFilterCode (key: string): string {\n  const keyVal = parseInt(key, 10)\n  if (keyVal) {\n    return `$event.keyCode!==${keyVal}`\n  }\n  const keyCode = keyCodes[key]\n  const keyName = keyNames[key]\n  return (\n    `_k($event.keyCode,` +\n    `${JSON.stringify(key)},` +\n    `${JSON.stringify(keyCode)},` +\n    `$event.key,` +\n    `${JSON.stringify(keyName)}` +\n    `)`\n  )\n}\n","/* @flow */\n\nimport { warn } from 'core/util/index'\n\nexport default function on (el: ASTElement, dir: ASTDirective) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(`v-on without argument does not support modifiers.`)\n  }\n  el.wrapListeners = (code: string) => `_g(${code},${dir.value})`\n}\n","/* @flow */\n\nexport default function bind (el: ASTElement, dir: ASTDirective) {\n  el.wrapData = (code: string) => {\n    return `_b(${code},'${el.tag}',${dir.value},${\n      dir.modifiers && dir.modifiers.prop ? 'true' : 'false'\n    }${\n      dir.modifiers && dir.modifiers.sync ? ',true' : ''\n    })`\n  }\n}\n","/* @flow */\n\nimport on from './on'\nimport bind from './bind'\nimport { noop } from 'shared/util'\n\nexport default {\n  on,\n  bind,\n  cloak: noop\n}\n","/* @flow */\n\nimport { genHandlers } from './events'\nimport baseDirectives from '../directives/index'\nimport { camelize, no, extend } from 'shared/util'\nimport { baseWarn, pluckModuleFunction } from '../helpers'\nimport { emptySlotScopeToken } from '../parser/index'\n\ntype TransformFunction = (el: ASTElement, code: string) => string;\ntype DataGenFunction = (el: ASTElement) => string;\ntype DirectiveFunction = (el: ASTElement, dir: ASTDirective, warn: Function) => boolean;\n\nexport class CodegenState {\n  options: CompilerOptions;\n  warn: Function;\n  transforms: Array<TransformFunction>;\n  dataGenFns: Array<DataGenFunction>;\n  directives: { [key: string]: DirectiveFunction };\n  maybeComponent: (el: ASTElement) => boolean;\n  onceId: number;\n  staticRenderFns: Array<string>;\n  pre: boolean;\n\n  constructor (options: CompilerOptions) {\n    this.options = options\n    this.warn = options.warn || baseWarn\n    this.transforms = pluckModuleFunction(options.modules, 'transformCode')\n    this.dataGenFns = pluckModuleFunction(options.modules, 'genData')\n    this.directives = extend(extend({}, baseDirectives), options.directives)\n    const isReservedTag = options.isReservedTag || no\n    this.maybeComponent = (el: ASTElement) => !!el.component || !isReservedTag(el.tag)\n    this.onceId = 0\n    this.staticRenderFns = []\n    this.pre = false\n  }\n}\n\nexport type CodegenResult = {\n  render: string,\n  staticRenderFns: Array<string>\n};\n\nexport function generate (\n  ast: ASTElement | void,\n  options: CompilerOptions\n): CodegenResult {\n  const state = new CodegenState(options)\n  // fix #11483, Root level <script> tags should not be rendered.\n  const code = ast ? (ast.tag === 'script' ? 'null' : genElement(ast, state)) : '_c(\"div\")'\n  return {\n    render: `with(this){return ${code}}`,\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nexport function genElement (el: ASTElement, state: CodegenState): string {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    let code\n    if (el.component) {\n      code = genComponent(el.component, el, state)\n    } else {\n      let data\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData(el, state)\n      }\n\n      const children = el.inlineTemplate ? null : genChildren(el, state, true)\n      code = `_c('${el.tag}'${\n        data ? `,${data}` : '' // data\n      }${\n        children ? `,${children}` : '' // children\n      })`\n    }\n    // module transforms\n    for (let i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code)\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el: ASTElement, state: CodegenState): string {\n  el.staticProcessed = true\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  const originalPreState = state.pre\n  if (el.pre) {\n    state.pre = el.pre\n  }\n  state.staticRenderFns.push(`with(this){return ${genElement(el, state)}}`)\n  state.pre = originalPreState\n  return `_m(${\n    state.staticRenderFns.length - 1\n  }${\n    el.staticInFor ? ',true' : ''\n  })`\n}\n\n// v-once\nfunction genOnce (el: ASTElement, state: CodegenState): string {\n  el.onceProcessed = true\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    let key = ''\n    let parent = el.parent\n    while (parent) {\n      if (parent.for) {\n        key = parent.key\n        break\n      }\n      parent = parent.parent\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        `v-once can only be used inside v-for that is keyed. `,\n        el.rawAttrsMap['v-once']\n      )\n      return genElement(el, state)\n    }\n    return `_o(${genElement(el, state)},${state.onceId++},${key})`\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nexport function genIf (\n  el: any,\n  state: CodegenState,\n  altGen?: Function,\n  altEmpty?: string\n): string {\n  el.ifProcessed = true // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions: ASTIfConditions,\n  state: CodegenState,\n  altGen?: Function,\n  altEmpty?: string\n): string {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  const condition = conditions.shift()\n  if (condition.exp) {\n    return `(${condition.exp})?${\n      genTernaryExp(condition.block)\n    }:${\n      genIfConditions(conditions, state, altGen, altEmpty)\n    }`\n  } else {\n    return `${genTernaryExp(condition.block)}`\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nexport function genFor (\n  el: any,\n  state: CodegenState,\n  altGen?: Function,\n  altHelper?: string\n): string {\n  const exp = el.for\n  const alias = el.alias\n  const iterator1 = el.iterator1 ? `,${el.iterator1}` : ''\n  const iterator2 = el.iterator2 ? `,${el.iterator2}` : ''\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      `<${el.tag} v-for=\"${alias} in ${exp}\">: component lists rendered with ` +\n      `v-for should have explicit keys. ` +\n      `See https://vuejs.org/guide/list.html#key for more info.`,\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    )\n  }\n\n  el.forProcessed = true // avoid recursion\n  return `${altHelper || '_l'}((${exp}),` +\n    `function(${alias}${iterator1}${iterator2}){` +\n      `return ${(altGen || genElement)(el, state)}` +\n    '})'\n}\n\nexport function genData (el: ASTElement, state: CodegenState): string {\n  let data = '{'\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  const dirs = genDirectives(el, state)\n  if (dirs) data += dirs + ','\n\n  // key\n  if (el.key) {\n    data += `key:${el.key},`\n  }\n  // ref\n  if (el.ref) {\n    data += `ref:${el.ref},`\n  }\n  if (el.refInFor) {\n    data += `refInFor:true,`\n  }\n  // pre\n  if (el.pre) {\n    data += `pre:true,`\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += `tag:\"${el.tag}\",`\n  }\n  // module data generation functions\n  for (let i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el)\n  }\n  // attributes\n  if (el.attrs) {\n    data += `attrs:${genProps(el.attrs)},`\n  }\n  // DOM props\n  if (el.props) {\n    data += `domProps:${genProps(el.props)},`\n  }\n  // event handlers\n  if (el.events) {\n    data += `${genHandlers(el.events, false)},`\n  }\n  if (el.nativeEvents) {\n    data += `${genHandlers(el.nativeEvents, true)},`\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += `slot:${el.slotTarget},`\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += `${genScopedSlots(el, el.scopedSlots, state)},`\n  }\n  // component v-model\n  if (el.model) {\n    data += `model:{value:${\n      el.model.value\n    },callback:${\n      el.model.callback\n    },expression:${\n      el.model.expression\n    }},`\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    const inlineTemplate = genInlineTemplate(el, state)\n    if (inlineTemplate) {\n      data += `${inlineTemplate},`\n    }\n  }\n  data = data.replace(/,$/, '') + '}'\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = `_b(${data},\"${el.tag}\",${genProps(el.dynamicAttrs)})`\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data)\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data)\n  }\n  return data\n}\n\nfunction genDirectives (el: ASTElement, state: CodegenState): string | void {\n  const dirs = el.directives\n  if (!dirs) return\n  let res = 'directives:['\n  let hasRuntime = false\n  let i, l, dir, needRuntime\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i]\n    needRuntime = true\n    const gen: DirectiveFunction = state.directives[dir.name]\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn)\n    }\n    if (needRuntime) {\n      hasRuntime = true\n      res += `{name:\"${dir.name}\",rawName:\"${dir.rawName}\"${\n        dir.value ? `,value:(${dir.value}),expression:${JSON.stringify(dir.value)}` : ''\n      }${\n        dir.arg ? `,arg:${dir.isDynamicArg ? dir.arg : `\"${dir.arg}\"`}` : ''\n      }${\n        dir.modifiers ? `,modifiers:${JSON.stringify(dir.modifiers)}` : ''\n      }},`\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el: ASTElement, state: CodegenState): ?string {\n  const ast = el.children[0]\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    )\n  }\n  if (ast && ast.type === 1) {\n    const inlineRenderFns = generate(ast, state.options)\n    return `inlineTemplate:{render:function(){${\n      inlineRenderFns.render\n    }},staticRenderFns:[${\n      inlineRenderFns.staticRenderFns.map(code => `function(){${code}}`).join(',')\n    }]}`\n  }\n}\n\nfunction genScopedSlots (\n  el: ASTElement,\n  slots: { [key: string]: ASTElement },\n  state: CodegenState\n): string {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  let needsForceUpdate = el.for || Object.keys(slots).some(key => {\n    const slot = slots[key]\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  })\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  let needsKey = !!el.if\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    let parent = el.parent\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true\n        break\n      }\n      if (parent.if) {\n        needsKey = true\n      }\n      parent = parent.parent\n    }\n  }\n\n  const generatedSlots = Object.keys(slots)\n    .map(key => genScopedSlot(slots[key], state))\n    .join(',')\n\n  return `scopedSlots:_u([${generatedSlots}]${\n    needsForceUpdate ? `,null,true` : ``\n  }${\n    !needsForceUpdate && needsKey ? `,null,false,${hash(generatedSlots)}` : ``\n  })`\n}\n\nfunction hash(str) {\n  let hash = 5381\n  let i = str.length\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i)\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el: ASTNode): boolean {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el: ASTElement,\n  state: CodegenState\n): string {\n  const isLegacySyntax = el.attrsMap['slot-scope']\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, `null`)\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  const slotScope = el.slotScope === emptySlotScopeToken\n    ? ``\n    : String(el.slotScope)\n  const fn = `function(${slotScope}){` +\n    `return ${el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? `(${el.if})?${genChildren(el, state) || 'undefined'}:undefined`\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)\n    }}`\n  // reverse proxy v-slot without scope on this.$slots\n  const reverseProxy = slotScope ? `` : `,proxy:true`\n  return `{key:${el.slotTarget || `\"default\"`},fn:${fn}${reverseProxy}}`\n}\n\nexport function genChildren (\n  el: ASTElement,\n  state: CodegenState,\n  checkSkip?: boolean,\n  altGenElement?: Function,\n  altGenNode?: Function\n): string | void {\n  const children = el.children\n  if (children.length) {\n    const el: any = children[0]\n    // optimize single v-for\n    if (children.length === 1 &&\n      el.for &&\n      el.tag !== 'template' &&\n      el.tag !== 'slot'\n    ) {\n      const normalizationType = checkSkip\n        ? state.maybeComponent(el) ? `,1` : `,0`\n        : ``\n      return `${(altGenElement || genElement)(el, state)}${normalizationType}`\n    }\n    const normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0\n    const gen = altGenNode || genNode\n    return `[${children.map(c => gen(c, state)).join(',')}]${\n      normalizationType ? `,${normalizationType}` : ''\n    }`\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children: Array<ASTNode>,\n  maybeComponent: (el: ASTElement) => boolean\n): number {\n  let res = 0\n  for (let i = 0; i < children.length; i++) {\n    const el: ASTNode = children[i]\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(c => needsNormalization(c.block)))) {\n      res = 2\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(c => maybeComponent(c.block)))) {\n      res = 1\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el: ASTElement): boolean {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node: ASTNode, state: CodegenState): string {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nexport function genText (text: ASTText | ASTExpression): string {\n  return `_v(${text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))\n  })`\n}\n\nexport function genComment (comment: ASTText): string {\n  return `_e(${JSON.stringify(comment.text)})`\n}\n\nfunction genSlot (el: ASTElement, state: CodegenState): string {\n  const slotName = el.slotName || '\"default\"'\n  const children = genChildren(el, state)\n  let res = `_t(${slotName}${children ? `,function(){return ${children}}` : ''}`\n  const attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(attr => ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      })))\n    : null\n  const bind = el.attrsMap['v-bind']\n  if ((attrs || bind) && !children) {\n    res += `,null`\n  }\n  if (attrs) {\n    res += `,${attrs}`\n  }\n  if (bind) {\n    res += `${attrs ? '' : ',null'},${bind}`\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName: string,\n  el: ASTElement,\n  state: CodegenState\n): string {\n  const children = el.inlineTemplate ? null : genChildren(el, state, true)\n  return `_c(${componentName},${genData(el, state)}${\n    children ? `,${children}` : ''\n  })`\n}\n\nfunction genProps (props: Array<ASTAttr>): string {\n  let staticProps = ``\n  let dynamicProps = ``\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i]\n    const value = __WEEX__\n      ? generateValue(prop.value)\n      : transformSpecialNewlines(prop.value)\n    if (prop.dynamic) {\n      dynamicProps += `${prop.name},${value},`\n    } else {\n      staticProps += `\"${prop.name}\":${value},`\n    }\n  }\n  staticProps = `{${staticProps.slice(0, -1)}}`\n  if (dynamicProps) {\n    return `_d(${staticProps},[${dynamicProps.slice(0, -1)}])`\n  } else {\n    return staticProps\n  }\n}\n\n/* istanbul ignore next */\nfunction generateValue (value) {\n  if (typeof value === 'string') {\n    return transformSpecialNewlines(value)\n  }\n  return JSON.stringify(value)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text: string): string {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n","/* @flow */\n\nimport { dirRE, onRE } from './parser/index'\n\ntype Range = { start?: number, end?: number };\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nconst prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b')\n\n// these unary operators should not be used as property/method names\nconst unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)')\n\n// strip strings in expressions\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g\n\n// detect problematic expressions in a template\nexport function detectErrors (ast: ?ASTNode, warn: Function) {\n  if (ast) {\n    checkNode(ast, warn)\n  }\n}\n\nfunction checkNode (node: ASTNode, warn: Function) {\n  if (node.type === 1) {\n    for (const name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        const value = node.attrsMap[name]\n        if (value) {\n          const range = node.rawAttrsMap[name]\n          if (name === 'v-for') {\n            checkFor(node, `v-for=\"${value}\"`, warn, range)\n          } else if (name === 'v-slot' || name[0] === '#') {\n            checkFunctionParameterExpression(value, `${name}=\"${value}\"`, warn, range)\n          } else if (onRE.test(name)) {\n            checkEvent(value, `${name}=\"${value}\"`, warn, range)\n          } else {\n            checkExpression(value, `${name}=\"${value}\"`, warn, range)\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (let i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn)\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node)\n  }\n}\n\nfunction checkEvent (exp: string, text: string, warn: Function, range?: Range) {\n  const stripped = exp.replace(stripStringRE, '')\n  const keywordMatch: any = stripped.match(unaryOperatorsRE)\n  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      `avoid using JavaScript unary operator as property name: ` +\n      `\"${keywordMatch[0]}\" in expression ${text.trim()}`,\n      range\n    )\n  }\n  checkExpression(exp, text, warn, range)\n}\n\nfunction checkFor (node: ASTElement, text: string, warn: Function, range?: Range) {\n  checkExpression(node.for || '', text, warn, range)\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range)\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range)\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range)\n}\n\nfunction checkIdentifier (\n  ident: ?string,\n  type: string,\n  text: string,\n  warn: Function,\n  range?: Range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function(`var ${ident}=_`)\n    } catch (e) {\n      warn(`invalid ${type} \"${ident}\" in expression: ${text.trim()}`, range)\n    }\n  }\n}\n\nfunction checkExpression (exp: string, text: string, warn: Function, range?: Range) {\n  try {\n    new Function(`return ${exp}`)\n  } catch (e) {\n    const keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE)\n    if (keywordMatch) {\n      warn(\n        `avoid using JavaScript keyword as property name: ` +\n        `\"${keywordMatch[0]}\"\\n  Raw expression: ${text.trim()}`,\n        range\n      )\n    } else {\n      warn(\n        `invalid expression: ${e.message} in\\n\\n` +\n        `    ${exp}\\n\\n` +\n        `  Raw expression: ${text.trim()}\\n`,\n        range\n      )\n    }\n  }\n}\n\nfunction checkFunctionParameterExpression (exp: string, text: string, warn: Function, range?: Range) {\n  try {\n    new Function(exp, '')\n  } catch (e) {\n    warn(\n      `invalid function parameter expression: ${e.message} in\\n\\n` +\n      `    ${exp}\\n\\n` +\n      `  Raw expression: ${text.trim()}\\n`,\n      range\n    )\n  }\n}\n","/* @flow */\n\nconst range = 2\n\nexport function generateCodeFrame (\n  source: string,\n  start: number = 0,\n  end: number = source.length\n): string {\n  const lines = source.split(/\\r?\\n/)\n  let count = 0\n  const res = []\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue\n        res.push(`${j + 1}${repeat(` `, 3 - String(j + 1).length)}|  ${lines[j]}`)\n        const lineLength = lines[j].length\n        if (j === i) {\n          // push underline\n          const pad = start - (count - lineLength) + 1\n          const length = end > count ? lineLength - pad : end - start\n          res.push(`   |  ` + repeat(` `, pad) + repeat(`^`, length))\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.min(end - count, lineLength)\n            res.push(`   |  ` + repeat(`^`, length))\n          }\n          count += lineLength + 1\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat (str, n) {\n  let result = ''\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) result += str\n      n >>>= 1\n      if (n <= 0) break\n      str += str\n    }\n  }\n  return result\n}\n","/* @flow */\n\nimport { noop, extend } from 'shared/util'\nimport { warn as baseWarn, tip } from 'core/util/debug'\nimport { generateCodeFrame } from './codeframe'\n\ntype CompiledFunctionResult = {\n  render: Function;\n  staticRenderFns: Array<Function>;\n};\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err, code })\n    return noop\n  }\n}\n\nexport function createCompileToFunctionFn (compile: Function): Function {\n  const cache = Object.create(null)\n\n  return function compileToFunctions (\n    template: string,\n    options?: CompilerOptions,\n    vm?: Component\n  ): CompiledFunctionResult {\n    options = extend({}, options)\n    const warn = options.warn || baseWarn\n    delete options.warn\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1')\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          )\n        }\n      }\n    }\n\n    // check cache\n    const key = options.delimiters\n      ? String(options.delimiters) + template\n      : template\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    const compiled = compile(template, options)\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(e => {\n            warn(\n              `Error compiling template:\\n\\n${e.msg}\\n\\n` +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            )\n          })\n        } else {\n          warn(\n            `Error compiling template:\\n\\n${template}\\n\\n` +\n            compiled.errors.map(e => `- ${e}`).join('\\n') + '\\n',\n            vm\n          )\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(e => tip(e.msg, vm))\n        } else {\n          compiled.tips.forEach(msg => tip(msg, vm))\n        }\n      }\n    }\n\n    // turn code into functions\n    const res = {}\n    const fnGenErrors = []\n    res.render = createFunction(compiled.render, fnGenErrors)\n    res.staticRenderFns = compiled.staticRenderFns.map(code => {\n      return createFunction(code, fnGenErrors)\n    })\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          `Failed to generate render function:\\n\\n` +\n          fnGenErrors.map(({ err, code }) => `${err.toString()} in\\n\\n${code}\\n`).join('\\n'),\n          vm\n        )\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n","/* @flow */\n\nimport { extend } from 'shared/util'\nimport { detectErrors } from './error-detector'\nimport { createCompileToFunctionFn } from './to-function'\n\nexport function createCompilerCreator (baseCompile: Function): Function {\n  return function createCompiler (baseOptions: CompilerOptions) {\n    function compile (\n      template: string,\n      options?: CompilerOptions\n    ): CompiledResult {\n      const finalOptions = Object.create(baseOptions)\n      const errors = []\n      const tips = []\n\n      let warn = (msg, range, tip) => {\n        (tip ? tips : errors).push(msg)\n      }\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          const leadingSpaceLength = template.match(/^\\s*/)[0].length\n\n          warn = (msg, range, tip) => {\n            const data: WarningMessage = { msg }\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength\n              }\n            }\n            (tip ? tips : errors).push(data)\n          }\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules)\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          )\n        }\n        // copy other options\n        for (const key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key]\n          }\n        }\n      }\n\n      finalOptions.warn = warn\n\n      const compiled = baseCompile(template.trim(), finalOptions)\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn)\n      }\n      compiled.errors = errors\n      compiled.tips = tips\n      return compiled\n    }\n\n    return {\n      compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n","/* @flow */\n\nimport { parse } from './parser/index'\nimport { optimize } from './optimizer'\nimport { generate } from './codegen/index'\nimport { createCompilerCreator } from './create-compiler'\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nexport const createCompiler = createCompilerCreator(function baseCompile (\n  template: string,\n  options: CompilerOptions\n): CompiledResult {\n  const ast = parse(template.trim(), options)\n  if (options.optimize !== false) {\n    optimize(ast, options)\n  }\n  const code = generate(ast, options)\n  return {\n    ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n})\n","/* @flow */\n\nimport { baseOptions } from './options'\nimport { createCompiler } from 'compiler/index'\n\nconst { compile, compileToFunctions } = createCompiler(baseOptions)\n\nexport { compile, compileToFunctions }\n","/* @flow */\n\nimport { inBrowser } from 'core/util/index'\n\n// check whether current browser encodes a char inside attribute values\nlet div\nfunction getShouldDecode (href: boolean): boolean {\n  div = div || document.createElement('div')\n  div.innerHTML = href ? `<a href=\"\\n\"/>` : `<div a=\"\\n\"/>`\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nexport const shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false\n// #6828: chrome encodes content in a[href]\nexport const shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false\n","/* @flow */\n\nimport config from 'core/config'\nimport { warn, cached } from 'core/util/index'\nimport { mark, measure } from 'core/util/perf'\n\nimport Vue from './runtime/index'\nimport { query } from './util/index'\nimport { compileToFunctions } from './compiler/index'\nimport { shouldDecodeNewlines, shouldDecodeNewlinesForHref } from './util/compat'\n\nconst idToTemplate = cached(id => {\n  const el = query(id)\n  return el && el.innerHTML\n})\n\nconst mount = Vue.prototype.$mount\nVue.prototype.$mount = function (\n  el?: string | Element,\n  hydrating?: boolean\n): Component {\n  el = el && query(el)\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      `Do not mount Vue to <html> or <body> - mount to normal elements instead.`\n    )\n    return this\n  }\n\n  const options = this.$options\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    let template = options.template\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template)\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              `Template element not found or is empty: ${options.template}`,\n              this\n            )\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this)\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el)\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile')\n      }\n\n      const { render, staticRenderFns } = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this)\n      options.render = render\n      options.staticRenderFns = staticRenderFns\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end')\n        measure(`vue ${this._name} compile`, 'compile', 'compile end')\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el: Element): string {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    const container = document.createElement('div')\n    container.appendChild(el.cloneNode(true))\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions\n\nexport default Vue\n"],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","global","factory","exports","define","amd","self","Vue","emptyObject","Object","freeze","value","obj","_toString","prototype","toString","slice","val","n","parseFloat","String","Math","floor","isFinite","isDef","then","catch","isPlainObject","stringify","isNaN","str","expectsLowerCase","create","list","toLowerCase","isBuiltInTag","makeMap","isReservedAttribute","arr","item","index","splice","hasOwnProperty","key","hit","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","ctx","a","l","arguments","boundFn","_length","bind","nativeBind","polyfillBind","start","ret","to","_from","res","extend","b","no","identity","reduce","keys","m","staticKeys","isObjectA","isObject","isObjectB","isArrayA","isArrayB","every","looseEqual","getTime","keysA","keysB","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","noop","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","charCodeAt","enumerable","defineProperty","writable","configurable","bailRE","source","path","segments","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isAndroid","isIOS","isChrome","isPhantomJS","isFF","match","nativeWatch","watch","supportsPassive","opts","get","addEventListener","_isServer","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Ctor","hasSymbol","Symbol","isNative","Reflect","ownKeys","_Set","Set","set","has","add","tip","generateComponentTrace","formatComponentName","hasConsole","classifyRE","classify","msg","vm","trace","includeFile","$root","options","cid","_isVue","$options","constructor","name","_componentTag","file","__file","repeat","$parent","tree","currentRecursiveSequence","last","uid","Dep","subs","addSub","sub","removeSub","depend","target","addDep","notify","sort","update","targetStack","pop","VNode","tag","children","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","method","original","def","args","len","result","ob","__ob__","inserted","observeArray","arrayKeys","getOwnPropertyNames","shouldObserve","Observer","vmCount","protoAugment","copyAugment","walk","defineReactive$$1","items","observe","src","__proto__","asRootData","hasOwn","isExtensible","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","isUndef","isPrimitive","isValidArrayIndex","max","strats","el","propsData","defaultStrat","from","toVal","fromVal","mergeData","parentVal","childVal","instanceData","defaultData","mergeDataOrFn","dedupeHooks","hooks","hook","mergeHook","assertObjectType","mergeAssets","key$1","props","methods","inject","computed","provide","components","validateComponentName","toRawType","normalized","dirs","directives","def$$1","checkComponents","normalizeProps","normalizeInject","normalizeDirectives","_base","extends","mergeOptions","mixins","mergeField","strat","warnMissing","camelizedId","PascalCaseId","propOptions","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","toggleObserving","assertProp","default","_props","getType","required","valid","expectedTypes","assertedType","assertType","expectedType","haveExpectedTypes","t","getInvalidTypeMessage","validator","simpleCheckRE","functionTypeCheckRE","isSameType","receivedType","isExplicable","isBoolean","styleValue","Number","EXPLICABLE_TYPES","elem","err","info","pushTarget","cur","errorCaptured","capture","globalHandleError","popTarget","handler","isPromise","_handled","handleError","logError","isUsingMicroTask","callbacks","pending","copies","timerFunc","Promise","p","resolve","flushCallbacks","MutationObserver","counter","observer","textNode","createTextNode","characterData","setImmediate","_resolve","mark","measure","perf","clearMarks","clearMeasures","startTag","endTag","initProxy","allowedGlobals","warnNonPresent","warnReservedPrefix","hasProxy","Proxy","isBuiltInModifier","hasHandler","isAllowed","$data","getHandler","handlers","render","_withStripped","_renderProxy","seenObjects","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","once","fns","arguments$1","invoker","invokeWithErrorHandling","on","oldOn","remove$$1","createOnceHandler","old","createFnInvoker","isTrue","params","hookKey","oldHook","wrappedHook","merged","attrs","altKey","keyInLowerCase","checkProp","hash","preserve","createTextVNode","normalizeArrayChildren","isFalse","nestedIndex","lastIndex","isTextNode","shift","_isVList","_provided","resolveInject","provideKey","provideDefault","slots","slot","name$1","isWhitespace","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","normalizeChildren","proxy","iterator","next","done","fallbackRender","bindObject","scopedSlotFn","$scopedSlots","nodes","$slots","$createElement","resolveAsset","expect","actual","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","isKeyNotMatch","asProp","isSync","toObject","loop","domProps","camelizedKey","hyphenatedKey","$event","isInFor","_staticTrees","staticRenderFns","markStatic","markStaticNode","existing","ours","hasDynamicKeys","contentHashKey","resolveScopedSlots","baseObj","values","symbol","_o","markOnce","_n","toNumber","_s","_l","renderList","_t","renderSlot","_q","_i","looseIndexOf","_m","renderStatic","_f","resolveFilter","_k","checkKeyCodes","_b","bindObjectProps","_v","_e","_u","_g","bindObjectListeners","_d","bindDynamicKeys","_p","prependModifier","this$1","contextVm","_original","isCompiled","_compiled","needNormalization","listeners","injections","normalizeScopedSlots","scopedSlots","resolveSlots","_scopeId","_c","installRenderHelpers","FunctionalRenderContext","validateProp","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","cloneVNode","devtoolsMeta","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","insert","_isMounted","callHook","queueActivatedComponent","activateChildComponent","destroy","$destroy","deactivateChildComponent","hooksToMerge","baseCtor","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","functional","createFunctionalComponent","nativeOn","abstract","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","simpleNormalizeChildren","$vnode","pre","createComponent","applyNS","registerDeepBindings","force","style","traverse","class","_vnode","parentVnode","_renderChildren","parentData","isUpdatingChildComponent","_parentListeners","currentRenderingInstance","$nextTick","nextTick","_render","ref","renderError","comp","base","__esModule","toStringTag","errorComp","resolved","owner","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","$forceUpdate","clearTimeout","ensureCtor","reject","reason","component","delay","timeout","_events","_hasHookEvent","updateComponentListeners","$off","_target","onceHandler","oldListeners","updateListeners","remove$1","hookRE","$once","i$1","cbs","$emit","lowerCaseEvent","toArray","prevActiveInstance","$children","$refs","_watcher","_inactive","_directInactive","_isBeingDestroyed","_update","prevEl","$el","prevVnode","restoreActiveInstance","setActiveInstance","__patch__","__vue__","teardown","_watchers","_data","template","updateComponent","_name","_uid","Watcher","before","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","$attrs","$listeners","propKeys","_propKeys","direct","isInInactiveTree","j","MAX_UPDATE_COUNT","queue","activatedChildren","circular","waiting","flushing","currentFlushTimestamp","getNow","createEvent","timeStamp","watcher","run","user","expression","activatedQueue","updatedQueue","resetSchedulerState","callActivatedHooks","callUpdatedHooks","emit","flushSchedulerQueue","uid$2","expOrFn","isRenderWatcher","deep","lazy","active","dirty","newDeps","depIds","newDepIds","parsePath","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","isReserved","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","dataDef","propsDef","$set","$delete","del","immediate","uid$3","_init","initInternalComponent","_self","initLifecycle","initEvents","initRender","initInjections","initState","initProvide","vnodeComponentOptions","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","modified","latest","sealed","sealedOptions","initMixin","stateMixin","eventsMixin","lifecycleMixin","renderMixin","use","plugin","installedPlugins","_installedPlugins","unshift","install","mixin","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","definition","pattern","isRegExp","keepAliveInstance","entry","pruneCacheEntry","current","patternTypes","KeepAlive","include","exclude","cacheVNode","vnodeToCache","keyToCache","getComponentName","parseInt","created","destroyed","mounted","pruneCache","matches","updated","getFirstComponentChild","ref$1","builtInComponents","configDef","util","defineReactive","delete","observable","initUse","initMixin$1","initExtend","initAssetRegisters","initGlobalAPI","ssrContext","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","isPreTag","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","selected","querySelector","tagName","multiple","namespace","createElementNS","createComment","newNode","referenceNode","textContent","scopeId","nodeOps","createElement$1","setTextContent","setStyleScope","registerRef","isRemoval","refs","refInFor","emptyNode","sameInputType","typeA","typeB","beginIdx","endIdx","backend","childElm","removeNode","inVPre","ignore","creatingElmInVPre","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isUnknownElement$$1","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","checkDuplicateKeys","createElm","ancestor","startIdx","invokeDestroyHook","ch","removeAndInvokeRemoveHook","rm","createRmCb","oldCh","newCh","removeOnly","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","oldKeyToIdx","idxInOld","vnodeToMove","canMove","sameVnode","patchVnode","createKeyToOldIdx","findIdxInOld","addVnodes","removeVnodes","seenKeys","end","hydrate","updateChildren","postpatch","initial","hydrationBailed","isRenderedModule","assertNodeMatch","hasChildNodes","childrenMatch","firstChild","childNodes","fullInvoke","nodeType","isInitialPatch","isRealElement","hasAttribute","removeAttribute","invokeInsertHook","emptyNodeAt","oldElm","_leaveCb","patchable","i$2","updateDirectives","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldDir","dir","callHook$1","oldArg","arg","componentUpdated","callInsert","mergeVNodeHook","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","isInPre","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateAttrs","oldData","cls","genClassForVnode","transitionClass","_transitionClasses","_prevClass","klass","updateClass","validDivisionCharRE","exp","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","prev","filters","trim","pushFilter","wrapFilter","range","dynamic","rangeSetItem","plain","dynamicAttrs","attrsMap","attrsList","isDynamicArg","important","prevent","right","middle","prependModifierMarker","events","native","nativeEvents","newHandler","rawAttrsMap","getStatic","dynamicValue","getAndRemoveAttr","parseFilters","staticValue","removeFromMap","number","baseValueExpression","valueExpression","assignment","genAssignmentCode","parseModel","chr","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","isStringStart","parseString","parseBracket","inBracket","stringQuote","warn$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","_warn","genComponentModel","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","getBindingAttr","trueValueBinding","falseValueBinding","addProp","addHandler","selectedVal","code","value$1","typeBinding","binding","needCompositionGuard","change","target$1","remove$2","useMicrotaskFix","attachedTimestamp","_wrapper","currentTarget","ownerDocument","normalizeEvents","add$1","createOnceHandler$1","updateDOMListeners","svgContainer","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","updateDOMProps","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleBinding","staticStyle","bindingStyle","checkChild","styleData","normalizeStyleData","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","emptyStyle","capName","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","getStyle","updateStyle","whitespaceRE","classList","tar","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","transitionClasses","addClass","removeClass","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","toggleDisplay","cancelled","resolveTransition","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","enter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","checkDuration","expectsCSS","userWantsControl","getHookArgumentsLength","removeTransitionClass","show","pendingNode","_pending","addTransitionClass","nextFrame","isValidDuration","whenTransitionEnds","beforeLeave","leave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","createPatchFunction","vmodel","trigger","directive","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","compOptions","getRealChild","h","rawChild","oldChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","placeholder","extractTransitionData","oldRawChild","isSameChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","pos","getBoundingClientRect","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","newPos","oldPos","dx","left","dy","top","platformComponents","query","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","close","tagRE","tokens","rawTokens","tokenValue","exec","baseWarn","parseText","classBinding","klass$1","transformNode","genData","styleBinding","style$1","transformNode$1","genData$1","decoder","he","decode","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","shouldDecodeNewlines","re","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","lastTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","parseEndTag","startTagMatch","parseStartTag","handleStartTag","rest","chars","endTagLength","stackedTag","reStackedTag","rest$1","all","unarySlash","unary","shouldDecodeNewlinesForHref","decodeAttr","outputSourceRange","lowerCasedTag","lowerCasedTagName","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","invalidAttributeRE","decodeHTMLCached","emptySlotScopeToken","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","maybeComponent","makeAttrsMap","pluckModuleFunction","preserveWhitespace","whitespaceOption","whitespace","currentParent","inPre","warned","element","trimEndingWhitespace","processed","processElement","if","elseif","else","checkRootConstraints","addIfCondition","block","warnOnce","forbidden","processIfConditions","slotScope","slotTarget","lastNode","parseHTML","comments","start$1","guardIESVGBug","createASTElement","cumulated","isForbiddenTag","processPre","processRawAttrs","processFor","processIf","processOnce","closeElement","end$1","isTextTag","processKey","processRef","processSlotContent","processSlotOutlet","processComponent","processAttrs","getRawBindingAttr","for","iterator2","iterator1","checkInFor","parseFor","inMatch","alias","iteratorMatch","findPrevElement","condition","ifConditions","slotTargetDynamic","addAttr","slotBinding","getAndRemoveAttrByRegex","getSlotName","slotBinding$1","dynamic$1","slotContainer","slotName","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","addDirective","checkForAliasModel","ieNSBug","ieNSPrefix","_el","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","cloneASTElement","addRawAttr","branch1","branch2","model$1","preTransformNode","modules$1","directives$1","baseOptions","genStaticKeys","isStaticKey","isPlatformReservedTag","genStaticKeysCached","genStaticKeys$1","markStatic$1","markStaticRoots","static","l$1","staticInFor","staticRoot","isDirectChildOfTemplateFor","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","ctrl","alt","meta","prefix","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genKeyFilter","genFilterCode","keyVal","keyCode","keyName","wrapListeners","wrapData","baseDirectives","bind$1","cloak","CodegenState","dataGenFns","onceId","ast","state","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genSlot","genComponent","genData$2","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","genProps","genHandlers","genScopedSlots","genInlineTemplate","hasRuntime","needRuntime","gen","inlineRenderFns","generate","containsSlotChild","needsKey","generatedSlots","genScopedSlot","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","getNormalizationType","genNode","needsNormalization","genComment","genText","transformSpecialNewlines","bind$$1","componentName","staticProps","dynamicProps","prohibitedKeywordRE","unaryOperatorsRE","stripStringRE","checkNode","checkFor","checkFunctionParameterExpression","checkEvent","checkExpression","stripped","keywordMatch","checkIdentifier","ident","lines","count","repeat$1","lineLength","pad","length$1","min","errors","compile","warn$$1","compiled","generateCodeFrame","tips","fnGenErrors","createFunction","baseCompile","finalOptions","leadingSpaceLength","detectErrors","compileToFunctions","createCompileToFunctionFn","createCompiler","createCompilerCreator","optimize","div","getShouldDecode","idToTemplate","mount","documentElement","getOuterHTML","outerHTML","container","const","let","this"],"version":3,"file":"index.eb68a8c2.js.map","sourceRoot":"/__parcel_source_root/"}